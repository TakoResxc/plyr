{"version":3,"sources":["src/js/utils/is.js","src/js/utils/events.js","src/js/utils/elements.js","src/js/utils/animation.js","src/js/utils/browser.js","src/js/support.js","src/js/html5.js","src/js/utils/objects.js","src/js/utils/strings.js","src/js/i18n.js","src/js/utils/arrays.js","src/js/storage.js","src/js/utils/fetch.js","src/js/utils/loadSprite.js","src/js/utils/time.js","src/js/controls.js","src/js/utils/urls.js","src/js/captions.js","src/js/config/defaults.js","src/js/config/types.js","src/js/console.js","src/js/fullscreen.js","src/js/utils/loadImage.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils/loadScript.js","src/js/plugins/google-cast.js","src/js/ui.js","src/js/listeners.js","src/js/plugins/vimeo.js","src/js/plugins/youtube.js","src/js/media.js","src/js/plugins/ads.js","src/js/source.js","src/js/plyr.js"],"names":["getConstructor","input","constructor","instanceOf","Boolean","isNullOrUndefined","isObject","Object","isString","String","isArray","Array","isNodeList","NodeList","isEmpty","length","keys","is","nullOrUndefined","object","number","Number","isNaN","string","boolean","function","Function","array","weakMap","WeakMap","nodeList","element","Element","textNode","Text","event","Event","cue","window","TextTrackCue","VTTCue","track","TextTrack","kind","url","URL","startsWith","hostname","e","empty","supportsPassiveListeners","supported","options","defineProperty","get","addEventListener","removeEventListener","toggleListener","callback","toggle","arguments","undefined","_this","this","passive","capture","events","split","forEach","type","eventListeners","push","on","call","off","once","onceCallback","_len","args","_key","apply","triggerEvent","bubbles","detail","CustomEvent","assign","plyr","dispatchEvent","wrap","elements","wrapper","targets","from","reverse","index","child","cloneNode","parent","parentNode","sibling","nextSibling","appendChild","insertBefore","setAttributes","attributes","entries","filter","_ref","value","slicedToArray","_ref3","_ref4","key","setAttribute","createElement","text","document","innerText","insertAfter","target","insertElement","removeElement","removeChild","emptyElement","childNodes","lastChild","replaceElement","newChild","oldChild","replaceChild","getAttributesFromSelector","sel","existingAttributes","existing","s","selector","trim","className","replace","parts","charAt","class","id","toggleHidden","hidden","hide","hasAttribute","removeAttribute","toggleClass","force","method","classList","contains","hasClass","matches","prototype","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","querySelectorAll","includes","getElements","container","getElement","querySelector","getFocusElement","focused","activeElement","body","transitionEndEvent","WebkitTransition","MozTransition","OTransition","transition","find","style","range","browser","isIE","documentMode","isWebkit","documentElement","test","navigator","userAgent","isIPhone","platform","isIos","defaultCodecs","audio/ogg","audio/wav","video/webm","video/mp4","video/ogg","support","audio","video","check","provider","playsinline","canPlayInline","api","ui","rangeInput","pip","webkitSetPresentationMode","airplay","WebKitPlaybackTargetAvailabilityEvent","googlecast","chrome","mime","inputType","_inputType$split","mediaType","isHTML5","media","canPlayType","err","textTracks","touch","transitions","reducedMotion","matchMedia","html5","getSources","source","getAttribute","getQualityOptions","map","extend","player","set","_player$media","currentTime","paused","preload","readyState","src","play","load","quality","cancelRequests","config","blankVideo","debug","log","getDeep","path","reduce","obj","sources","shift","concat","format","toString","match","i","replaceAll","RegExp","toTitleCase","toUpperCase","substr","toLowerCase","toCamelCase","toPascalCase","slice","getHTML","innerHTML","i18n","{seektime}","seekTime","{title}","title","_ref2","dedupe","item","indexOf","Storage","classCallCheck","enabled","storage","store","localStorage","getItem","json","JSON","parse","setItem","stringify","removeItem","fetch","responseType","Promise","resolve","reject","request","XMLHttpRequest","responseText","response","Error","status","open","send","loadSprite","hasId","exists","getElementById","update","data","insertAdjacentElement","useStorage","cached","prefix","content","then","result","catch","getHours","parseInt","getMinutes","getSeconds","formatTime","time","displayHours","inverted","hours","mins","secs","controls","getIconUrl","cors","iconUrl","location","host","svg4everybody","findElements","selectors","buttons","pause","restart","rewind","fastForward","mute","settings","captions","fullscreen","progress","inputs","seek","volume","display","buffer","duration","seekTooltip","classNames","tooltip","error","warn","toggleNativeControls","createIcon","iconPath","iconPrefix","icon","createElementNS","role","focusable","use","setAttributeNS","createLabel","attr","join","createBadge","badge","menu","createButton","buttonType","button","label","labelPressed","iconPressed","control","controlPressed","enumerable","pressed","createRange","min","max","step","autocomplete","aria-label","aria-valuemin","aria-valuemax","aria-valuenow","updateRangeFill","createProgress","aria-hidden","suffixKey","played","suffix","createTime","createMenuItem","list","_ref$badge","_ref$checked","checked","radio","name","faux","insertAdjacentHTML","updateTimeDisplay","updateVolume","setRange","muted","updateProgress","current","toFixed","getElementsByTagName","nodeValue","setProgress","buffered","percent","setProperty","updateSeekTooltip","_this2","tooltips","clientRect","getBoundingClientRect","visible","_toggle","width","pageX","left","parseFloat","timeUpdate","invert","invertTime","seeking","durationUpdate","hasDuration","displayDuration","toggleTab","setting","tabs","setQualityMenu","_this3","panes","checkMenu","sort","a","b","sorting","getLabel","getBadge","updateSetting","pane","currentTrack","default","setCaptionsMenu","_this4","tracks","getTracks","toggled","language","unshift","bind","setSpeedMenu","_this5","speed","isVimeo","values","some","tab","toggleMenu","form","show","isMenuItem","isButton","stopPropagation","getTabSize","clone","position","opacity","scrollWidth","height","scrollHeight","showTab","_this6","size","restore","propertyName","focus","create","_this7","aria-haspopup","aria-controls","aria-expanded","aria-labelled-by","tabindex","inner","home","back","inject","_this8","Math","floor","random","props","seektime","setTimeout","offsetHeight","_config","labels","parseUrl","parser","href","buildUrlParams","params","URLSearchParams","setup","isVideo","isYouTube","protocol","blob","createObjectURL","languages","userLanguage","active","trackEvents","_captions","meta","currentTrackNode","languageExists","mode","updateCues","setLanguage","activeClass","findTrack","toConsumableArray","embed","enableTextTrack","has","sortIsDefault","sorted","every","getCurrentTrack","cues","activeCues","getCueAsHTML","cueText","caption","defaults","autoplay","autopause","toggleInvert","ratio","clickToPlay","hideControls","resetOnEnd","disableContextMenu","loop","selected","keyboard","global","fallback","iosNative","seekLabel","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","enableGoogleCast","disableGoogleCast","frameTitle","menuBack","normal","start","end","all","reset","disabled","advertisement","qualityBadge","2160","1440","1080","720","576","480","urls","vimeo","sdk","iframe","youtube","googleIMA","googleCast","listeners","editable","embedContainer","poster","posterEnabled","ads","playing","stopped","loading","hover","isTouch","uiSupported","noTransition","tabFocus","google","publisherId","providers","types","noop","Console","console","onChange","first","last","keyCode","shiftKey","preventDefault","toggleFallback","scrollPosition","x","scrollX","y","scrollY","scrollTo","overflow","Fullscreen","property","native","webkitEnterFullscreen","requestFullscreen","webkitExitFullscreen","action","cancelFullScreen","exit","enter","fullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","pre","loadImage","minWidth","image","Image","handler","onload","onerror","naturalWidth","factory","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","publish","bundleId","pathsNotFound","q","splice","executeCallbacks","depsNotFound","success","loadFile","callbackFn","numTries","isCss","doc","async","maxTries","numRetries","beforeCallbackFn","before","pathStripped","rel","onbeforeload","ev","sheet","cssText","defaultPrevented","head","loadjs","paths","arg1","arg2","fn","numWaiting","loadFiles","ready","deps","bundleIds","r","subscribe","done","isDefined","module","exports","loadScript","onReady","onPlay","onPause","seeked","onSeek","volumechange","onVolumeChange","qualityrequested","onQualityChange","cast","interval","setInterval","isAvailable","clearInterval","receiverApplicationId","DEFAULT_MEDIA_RECEIVER_APP_ID","autoJoinPolicy","AutoJoinPolicy","ORIGIN_SCOPED","opts","initializeCastApi","framework","CastContext","getInstance","setOptions","CastContextEventType","CAST_STATE_CHANGED","castStateListener","SESSION_STATE_CHANGED","sessionStateListener","getCurrentSession","getCurrentPlyr","currentPlyr","remotePlayerController","playOrPause","timestamp","remotePlayer","loadMedia","volumeLevel","setVolumeLevel","session","mediaInfo","metadata","metadataType","MetadataType","GENERIC","images","loadRequest","MediaInfo","GenericMediaMetadata","LoadRequest","bindPlyr","errorCode","getErrorMessage","setCurrentPlyr","currentPlyrOptions","RemotePlayer","RemotePlayerController","evt","unbindPlyr","code","ErrorCode","API_NOT_INITIALIZED","description","CANCEL","CHANNEL_ERROR","EXTENSION_MISSING","INVALID_PARAMETER","RECEIVER_UNAVAILABLE","SESSION_ERROR","TIMEOUT","cs","CastState","castEvent","castState","NO_DEVICES_AVAILABLE","NOT_CONNECTED","CONNECTING","CONNECTED","castActive","ss","SessionState","sessionState","NO_SESSION","SESSION_STARTING","SESSION_STARTED","SESSION_RESUMED","SESSION_START_FAILED","SESSION_ENDED","SESSION_ENDING","requestSession","wasPlyrAlreadyBound","existingPlyr","getCastState","castStateEventData","CastStateEventData","getSessionState","sessionStateEventData","SessionStateEventData","toggleState","addStyleHook","build","checkPlaying","setTitle","setPoster","isEmbed","togglePoster","enable","backgroundImage","backgroundSize","toggleControls","checkLoading","clearTimeout","timers","Listeners","lastKey","handleKey","firstTouch","which","repeat","altKey","ctrlKey","metaKey","togglePlay","increaseVolume","decreaseVolume","forward","toggleCaptions","delay","hasAudio","initialized","managerPromise","isAudio","ended","proxyEvents","_event$detail","inputEvent","proxy","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","showHomeTab","currentTarget","eventType","seekTo","_player","webkitDirectionInvertedFromDevice","_map","deltaX","deltaY","_map2","direction","sign","abs","assurePlaybackState","hasPlayed","setAspectRatio","Vimeo","_split","_split2","padding","paddingBottom","offset","transform","byline","portrait","transparent","gesture","$2","thumbnail_large","pathname","Player","disableTextTrack","stop","restorePause","setVolume","setCurrentTime","setPlaybackRate","setLoop","currentSrc","getVideoUrl","getVideoWidth","getVideoHeight","dimensions","getRatio","w","h","getAspectRatio","setAutopause","state","getVideoTitle","getCurrentTime","getDuration","getTextTracks","_ref$cues","strippedCues","fragment","createDocumentFragment","firstChild","getPaused","seconds","mapQualityUnit","entry","hd2160","hd1440","hd1080","hd720","large","medium","small","tiny","YT","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","getTitle","videoId","getVideoData","items","snippet","currentId","posterSrc","format$$1","playerVars","showinfo","iv_load_policy","modestbranding","disablekb","widget_referrer","cc_load_policy","cc_lang_pref","onError","message","2","5","100","101","150","onPlaybackQualityChange","onPlaybackRateChange","instance","playbackRate","getPlaybackRate","playVideo","pauseVideo","stopVideo","getPlaybackQuality","setPlaybackQuality","getAvailablePlaybackRates","buffering","getVideoLoadedFraction","lastBuffered","onStateChange","levels","getAvailableQualityLevels","level","unMute","Ads","displayContainer","manager","loader","cuePoints","safetyTimer","countdownTimer","ima","trigger","startSafetyTimer","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","AdDisplayContainer","requestAds","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","AdsRequest","adTagUrl","tagUrl","linearAdSlotWidth","offsetWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","setAdWillPlayMuted","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","getCuePoints","cuePoint","seekElement","cuePercentage","AdEvent","onAdEvent","ad","getAd","LOADED","pollCountdown","isLinear","ALL_ADS_COMPLETED","loadAds","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","STARTED","MIDPOINT","COMPLETE","IMPRESSION","CLICK","cancel","contentComplete","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","_this9","initialize","init","adError","zIndex","_this10","destroy","_this11","handlers","_this12","base","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","Date","now","AV_WIDTH","AV_HEIGHT","AV_CDIM2","insertElements","attribute","change","_sources$","_sources$$provider","tagName","crossorigin","Plyr","failed","jQuery","original","getProviderByUrl","searchParams","truthy","webkitShowPlaybackTargetPicker","isHidden","hiding","eventName","soft","unload","inputIsValid","fauxDuration","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","prev","curr","closest","states","webkitPresentationMode","inline","t"],"mappings":"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","file":"plyr.min.js","sourcesContent":["// ==========================================================================\n// Type checking utils\n// ==========================================================================\n\nconst getConstructor = input => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\nconst isNullOrUndefined = input => input === null || typeof input === 'undefined';\nconst isObject = input => getConstructor(input) === Object;\nconst isNumber = input => getConstructor(input) === Number && !Number.isNaN(input);\nconst isString = input => getConstructor(input) === String;\nconst isBoolean = input => getConstructor(input) === Boolean;\nconst isFunction = input => getConstructor(input) === Function;\nconst isArray = input => Array.isArray(input);\nconst isWeakMap = input => instanceOf(input, WeakMap);\nconst isNodeList = input => instanceOf(input, NodeList);\nconst isElement = input => instanceOf(input, Element);\nconst isTextNode = input => getConstructor(input) === Text;\nconst isEvent = input => instanceOf(input, Event);\nconst isCue = input => instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\nconst isTrack = input => instanceOf(input, TextTrack) || (!isNullOrUndefined(input) && isString(input.kind));\n\nconst isEmpty = input =>\n    isNullOrUndefined(input) ||\n    ((isString(input) || isArray(input) || isNodeList(input)) && !input.length) ||\n    (isObject(input) && !Object.keys(input).length);\n\nconst isUrl = input => {\n    // Accept a URL object\n    if (instanceOf(input, window.URL)) {\n        return true;\n    }\n\n    // Add the protocol if required\n    let string = input;\n    if (!input.startsWith('http://') || !input.startsWith('https://')) {\n        string = `http://${input}`;\n    }\n\n    try {\n        return !isEmpty(new URL(string).hostname);\n    } catch (e) {\n        return false;\n    }\n};\n\nexport default {\n    nullOrUndefined: isNullOrUndefined,\n    object: isObject,\n    number: isNumber,\n    string: isString,\n    boolean: isBoolean,\n    function: isFunction,\n    array: isArray,\n    weakMap: isWeakMap,\n    nodeList: isNodeList,\n    element: isElement,\n    textNode: isTextNode,\n    event: isEvent,\n    cue: isCue,\n    track: isTrack,\n    url: isUrl,\n    empty: isEmpty,\n};\n","// ==========================================================================\n// Event utils\n// ==========================================================================\n\nimport is from './is';\n\n// Check for passive event listener support\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n// https://www.youtube.com/watch?v=NPM6172J22g\nconst supportsPassiveListeners = (() => {\n    // Test via a getter in the options object to see if the passive property is accessed\n    let supported = false;\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get() {\n                supported = true;\n                return null;\n            },\n        });\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n        // Do nothing\n    }\n\n    return supported;\n})();\n\n// Toggle event listener\nexport function toggleListener(element, event, callback, toggle = false, passive = true, capture = false) {\n    // Bail if no element, event, or callback\n    if (!element || !('addEventListener' in element) || is.empty(event) || !is.function(callback)) {\n        return;\n    }\n\n    // Allow multiple events\n    const events = event.split(' ');\n\n    // Build options\n    // Default to just the capture boolean for browsers with no passive listener support\n    let options = capture;\n\n    // If passive events listeners are supported\n    if (supportsPassiveListeners) {\n        options = {\n            // Whether the listener can be passive (i.e. default never prevented)\n            passive,\n            // Whether the listener is a capturing listener or not\n            capture,\n        };\n    }\n\n    // If a single node is passed, bind the event listener\n    events.forEach(type => {\n        if (this && this.eventListeners && toggle) {\n            // Cache event listener\n            this.eventListeners.push({ element, type, callback, options });\n        }\n\n        element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n    });\n}\n\n// Bind event handler\nexport function on(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, true, passive, capture);\n}\n\n// Unbind event handler\nexport function off(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, false, passive, capture);\n}\n\n// Bind once-only event handler\nexport function once(element, events = '', callback, passive = true, capture = false) {\n    function onceCallback(...args) {\n        off(element, events, onceCallback, passive, capture);\n        callback.apply(this, args);\n    }\n\n    toggleListener.call(this, element, events, onceCallback, true, passive, capture);\n}\n\n// Trigger event\nexport function triggerEvent(element, type = '', bubbles = false, detail = {}) {\n    // Bail if no element\n    if (!is.element(element) || is.empty(type)) {\n        return;\n    }\n\n    // Create and dispatch the event\n    const event = new CustomEvent(type, {\n        bubbles,\n        detail: Object.assign({}, detail, {\n            plyr: this,\n        }),\n    });\n\n    // Dispatch the event\n    element.dispatchEvent(event);\n}\n\n// Unbind all cached event listeners\nexport function unbindListeners() {\n    if (this && this.eventListeners) {\n        this.eventListeners.forEach(item => {\n            const { element, type, callback, options } = item;\n            element.removeEventListener(type, callback, options);\n        });\n\n        this.eventListeners = [];\n    }\n}\n\n// Run method when / if player is ready\nexport function ready() {\n    return new Promise(\n        resolve => (this.ready ? setTimeout(resolve, 0) : on.call(this, this.elements.container, 'ready', resolve)),\n    ).then(() => {});\n}\n","// ==========================================================================\n// Element utils\n// ==========================================================================\n\nimport { toggleListener } from './events';\nimport is from './is';\n\n// Wrap an element\nexport function wrap(elements, wrapper) {\n    // Convert `elements` to an array, if necessary.\n    const targets = elements.length ? elements : [elements];\n\n    // Loops backwards to prevent having to clone the wrapper on the\n    // first element (see `child` below).\n    Array.from(targets)\n        .reverse()\n        .forEach((element, index) => {\n            const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n\n            // Cache the current parent and sibling.\n            const parent = element.parentNode;\n            const sibling = element.nextSibling;\n\n            // Wrap the element (is automatically removed from its current\n            // parent).\n            child.appendChild(element);\n\n            // If the element had a sibling, insert the wrapper before\n            // the sibling to maintain the HTML structure; otherwise, just\n            // append it to the parent.\n            if (sibling) {\n                parent.insertBefore(child, sibling);\n            } else {\n                parent.appendChild(child);\n            }\n        });\n}\n\n// Set attributes\nexport function setAttributes(element, attributes) {\n    if (!is.element(element) || is.empty(attributes)) {\n        return;\n    }\n\n    // Assume null and undefined attributes should be left out,\n    // Setting them would otherwise convert them to \"null\" and \"undefined\"\n    Object.entries(attributes)\n        .filter(([, value]) => !is.nullOrUndefined(value))\n        .forEach(([key, value]) => element.setAttribute(key, value));\n}\n\n// Create a DocumentFragment\nexport function createElement(type, attributes, text) {\n    // Create a new <element>\n    const element = document.createElement(type);\n\n    // Set all passed attributes\n    if (is.object(attributes)) {\n        setAttributes(element, attributes);\n    }\n\n    // Add text node\n    if (is.string(text)) {\n        element.innerText = text;\n    }\n\n    // Return built element\n    return element;\n}\n\n// Inaert an element after another\nexport function insertAfter(element, target) {\n    target.parentNode.insertBefore(element, target.nextSibling);\n}\n\n// Insert a DocumentFragment\nexport function insertElement(type, parent, attributes, text) {\n    // Inject the new <element>\n    parent.appendChild(createElement(type, attributes, text));\n}\n\n// Remove element(s)\nexport function removeElement(element) {\n    if (is.nodeList(element) || is.array(element)) {\n        Array.from(element).forEach(removeElement);\n        return;\n    }\n\n    if (!is.element(element) || !is.element(element.parentNode)) {\n        return;\n    }\n\n    element.parentNode.removeChild(element);\n}\n\n// Remove all child elements\nexport function emptyElement(element) {\n    let { length } = element.childNodes;\n\n    while (length > 0) {\n        element.removeChild(element.lastChild);\n        length -= 1;\n    }\n}\n\n// Replace element\nexport function replaceElement(newChild, oldChild) {\n    if (!is.element(oldChild) || !is.element(oldChild.parentNode) || !is.element(newChild)) {\n        return null;\n    }\n\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n\n    return newChild;\n}\n\n// Get an attribute object from a string selector\nexport function getAttributesFromSelector(sel, existingAttributes) {\n    // For example:\n    // '.test' to { class: 'test' }\n    // '#test' to { id: 'test' }\n    // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n    if (!is.string(sel) || is.empty(sel)) {\n        return {};\n    }\n\n    const attributes = {};\n    const existing = existingAttributes;\n\n    sel.split(',').forEach(s => {\n        // Remove whitespace\n        const selector = s.trim();\n        const className = selector.replace('.', '');\n        const stripped = selector.replace(/[[\\]]/g, '');\n\n        // Get the parts and value\n        const parts = stripped.split('=');\n        const key = parts[0];\n        const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n\n        // Get the first character\n        const start = selector.charAt(0);\n\n        switch (start) {\n            case '.':\n                // Add to existing classname\n                if (is.object(existing) && is.string(existing.class)) {\n                    existing.class += ` ${className}`;\n                }\n\n                attributes.class = className;\n                break;\n\n            case '#':\n                // ID selector\n                attributes.id = selector.replace('#', '');\n                break;\n\n            case '[':\n                // Attribute selector\n                attributes[key] = value;\n\n                break;\n\n            default:\n                break;\n        }\n    });\n\n    return attributes;\n}\n\n// Toggle hidden\nexport function toggleHidden(element, hidden) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let hide = hidden;\n\n    if (!is.boolean(hide)) {\n        hide = !element.hasAttribute('hidden');\n    }\n\n    if (hide) {\n        element.setAttribute('hidden', '');\n    } else {\n        element.removeAttribute('hidden');\n    }\n}\n\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\nexport function toggleClass(element, className, force) {\n    if (is.element(element)) {\n        let method = 'toggle';\n        if (typeof force !== 'undefined') {\n            method = force ? 'add' : 'remove';\n        }\n\n        element.classList[method](className);\n        return element.classList.contains(className);\n    }\n\n    return null;\n}\n\n// Has class name\nexport function hasClass(element, className) {\n    return is.element(element) && element.classList.contains(className);\n}\n\n// Element matches selector\nexport function matches(element, selector) {\n    const prototype = { Element };\n\n    function match() {\n        return Array.from(document.querySelectorAll(selector)).includes(this);\n    }\n\n    const matches =\n        prototype.matches ||\n        prototype.webkitMatchesSelector ||\n        prototype.mozMatchesSelector ||\n        prototype.msMatchesSelector ||\n        match;\n\n    return matches.call(element, selector);\n}\n\n// Find all elements\nexport function getElements(selector) {\n    return this.elements.container.querySelectorAll(selector);\n}\n\n// Find a single element\nexport function getElement(selector) {\n    return this.elements.container.querySelector(selector);\n}\n\n// Get the focused element\nexport function getFocusElement() {\n    let focused = document.activeElement;\n\n    if (!focused || focused === document.body) {\n        focused = null;\n    } else {\n        focused = document.querySelector(':focus');\n    }\n\n    return focused;\n}\n\n// Trap focus inside container\nexport function trapFocus(element = null, toggle = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    const focusable = getElements.call(this, 'button:not(:disabled), input:not(:disabled), [tabindex]');\n    const first = focusable[0];\n    const last = focusable[focusable.length - 1];\n\n    const trap = event => {\n        // Bail if not tab key or not fullscreen\n        if (event.key !== 'Tab' || event.keyCode !== 9) {\n            return;\n        }\n\n        // Get the current focused element\n        const focused = getFocusElement();\n\n        if (focused === last && !event.shiftKey) {\n            // Move focus to first element that can be tabbed if Shift isn't used\n            first.focus();\n            event.preventDefault();\n        } else if (focused === first && event.shiftKey) {\n            // Move focus to last element that can be tabbed if Shift is used\n            last.focus();\n            event.preventDefault();\n        }\n    };\n\n    toggleListener.call(this, this.elements.container, 'keydown', trap, toggle, false);\n}\n","// ==========================================================================\n// Animation utils\n// ==========================================================================\n\nimport { toggleHidden } from './elements';\nimport is from './is';\n\nexport const transitionEndEvent = (() => {\n    const element = document.createElement('span');\n\n    const events = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend',\n    };\n\n    const type = Object.keys(events).find(event => element.style[event] !== undefined);\n\n    return is.string(type) ? events[type] : false;\n})();\n\n// Force repaint of element\nexport function repaint(element) {\n    setTimeout(() => {\n        toggleHidden(element, true);\n        element.offsetHeight; // eslint-disable-line\n        toggleHidden(element, false);\n    }, 0);\n}\n","// ==========================================================================\n// Browser sniffing\n// Unfortunately, due to mixed support, UA sniffing is required\n// ==========================================================================\n\nconst browser = {\n    isIE: /* @cc_on!@ */ false || !!document.documentMode,\n    isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\n    isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\n    isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\n};\n\nexport default browser;\n","// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport { transitionEndEvent } from './utils/animation';\nimport browser from './utils/browser';\nimport { createElement } from './utils/elements';\nimport is from './utils/is';\n\n// Default codecs for checking mimetype support\nconst defaultCodecs = {\n    'audio/ogg': 'vorbis',\n    'audio/wav': '1',\n    'video/webm': 'vp8, vorbis',\n    'video/mp4': 'avc1.42E01E, mp4a.40.2',\n    'video/ogg': 'theora',\n};\n\n// Check for feature support\nconst support = {\n    // Basic support\n    audio: 'canPlayType' in document.createElement('audio'),\n    video: 'canPlayType' in document.createElement('video'),\n\n    // Check for support\n    // Basic functionality vs full UI\n    check(type, provider, playsinline) {\n        const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n        const api = support[type] || provider !== 'html5';\n        const ui = api && support.rangeInput && (type !== 'video' || !browser.isIPhone || canPlayInline);\n\n        return {\n            api,\n            ui,\n        };\n    },\n\n    // Picture-in-picture support\n    // Safari only currently\n    pip: (() => !browser.isIPhone && is.function(createElement('video').webkitSetPresentationMode))(),\n\n    // Airplay support\n    // Safari only currently\n    airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n    googlecast: !is.nullOrUndefined(window.chrome),\n\n    // Inline playback support\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\n    playsinline: 'playsInline' in document.createElement('video'),\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\n    mime(inputType) {\n        const [mediaType] = inputType.split('/');\n        if (!this.isHTML5 || mediaType !== this.type) {\n            return false;\n        }\n\n        let type;\n        if (inputType && inputType.includes('codecs=')) {\n            // Use input directly\n            type = inputType;\n        } else if (inputType === 'audio/mpeg') {\n            // Skip codec\n            type = 'audio/mpeg;';\n        } else if (inputType in defaultCodecs) {\n            // Use codec\n            type = `${inputType}; codecs=\"${defaultCodecs[inputType]}\"`;\n        }\n\n        try {\n            return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\n        } catch (err) {\n            return false;\n        }\n    },\n\n    // Check for textTracks support\n    textTracks: 'textTracks' in document.createElement('video'),\n\n    // <input type=\"range\"> Sliders\n    rangeInput: (() => {\n        const range = document.createElement('input');\n        range.type = 'range';\n        return range.type === 'range';\n    })(),\n\n    // Touch\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n    touch: 'ontouchstart' in document.documentElement,\n\n    // Detect transitions support\n    transitions: transitionEndEvent !== false,\n\n    // Reduced motion iOS & MacOS setting\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n","// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport support from './support';\nimport { removeElement } from './utils/elements';\nimport { triggerEvent } from './utils/events';\n\nconst html5 = {\n    getSources() {\n        if (!this.isHTML5) {\n            return [];\n        }\n\n        const sources = Array.from(this.media.querySelectorAll('source'));\n\n        // Filter out unsupported sources\n        return sources.filter(source => support.mime.call(this, source.getAttribute('type')));\n    },\n\n    // Get quality levels\n    getQualityOptions() {\n        // Get sizes from <source> elements\n        return html5.getSources\n            .call(this)\n            .map(source => Number(source.getAttribute('size')))\n            .filter(Boolean);\n    },\n\n    extend() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const player = this;\n\n        // Quality\n        Object.defineProperty(player.media, 'quality', {\n            get() {\n                // Get sources\n                const sources = html5.getSources.call(player);\n                const source = sources.find(source => source.getAttribute('src') === player.source);\n\n                // Return size, if match is found\n                return source && Number(source.getAttribute('size'));\n            },\n            set(input) {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                // Get first match for requested size\n                const source = sources.find(source => Number(source.getAttribute('size')) === input);\n\n                // No matching source found\n                if (!source) {\n                    return;\n                }\n\n                // Get current state\n                const { currentTime, paused, preload, readyState } = player.media;\n\n                // Set new source\n                player.media.src = source.getAttribute('src');\n\n                // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n                if (preload !== 'none' || readyState) {\n                    // Restore time\n                    player.once('loadedmetadata', () => {\n                        player.currentTime = currentTime;\n\n                        // Resume playing\n                        if (!paused) {\n                            player.play();\n                        }\n                    });\n\n                    // Load new source\n                    player.media.load();\n                }\n\n                // Trigger change event\n                triggerEvent.call(player, player.media, 'qualitychange', false, {\n                    quality: input,\n                });\n            },\n        });\n    },\n\n    // Cancel current network requests\n    // See https://github.com/sampotts/plyr/issues/174\n    cancelRequests() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        // Remove child sources\n        removeElement(html5.getSources.call(this));\n\n        // Set blank video src attribute\n        // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n        // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n        this.media.setAttribute('src', this.config.blankVideo);\n\n        // Load the new empty source\n        // This will cancel existing requests\n        // See https://github.com/sampotts/plyr/issues/174\n        this.media.load();\n\n        // Debugging\n        this.debug.log('Cancelled network requests');\n    },\n};\n\nexport default html5;\n","// ==========================================================================\n// Object utils\n// ==========================================================================\n\nimport is from './is';\n\n// Clone nested objects\nexport function cloneDeep(object) {\n    return JSON.parse(JSON.stringify(object));\n}\n\n// Get a nested value in an object\nexport function getDeep(object, path) {\n    return path.split('.').reduce((obj, key) => obj && obj[key], object);\n}\n\n// Deep extend destination object with N more objects\nexport function extend(target = {}, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n\n    const source = sources.shift();\n\n    if (!is.object(source)) {\n        return target;\n    }\n\n    Object.keys(source).forEach(key => {\n        if (is.object(source[key])) {\n            if (!Object.keys(target).includes(key)) {\n                Object.assign(target, { [key]: {} });\n            }\n\n            extend(target[key], source[key]);\n        } else {\n            Object.assign(target, { [key]: source[key] });\n        }\n    });\n\n    return extend(target, ...sources);\n}\n","// ==========================================================================\n// String utils\n// ==========================================================================\n\nimport is from './is';\n\n// Generate a random ID\nexport function generateId(prefix) {\n    return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n}\n\n// Format string\nexport function format(input, ...args) {\n    if (is.empty(input)) {\n        return input;\n    }\n\n    return input.toString().replace(/{(\\d+)}/g, (match, i) => args[i].toString());\n}\n\n// Get percentage\nexport function getPercentage(current, max) {\n    if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n        return 0;\n    }\n\n    return (current / max * 100).toFixed(2);\n}\n\n// Replace all occurances of a string in a string\nexport function replaceAll(input = '', find = '', replace = '') {\n    return input.replace(\n        new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'),\n        replace.toString(),\n    );\n}\n\n// Convert to title case\nexport function toTitleCase(input = '') {\n    return input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\n}\n\n// Convert string to pascalCase\nexport function toPascalCase(input = '') {\n    let string = input.toString();\n\n    // Convert kebab case\n    string = replaceAll(string, '-', ' ');\n\n    // Convert snake case\n    string = replaceAll(string, '_', ' ');\n\n    // Convert to title case\n    string = toTitleCase(string);\n\n    // Convert to pascal case\n    return replaceAll(string, ' ', '');\n}\n\n// Convert string to pascalCase\nexport function toCamelCase(input = '') {\n    let string = input.toString();\n\n    // Convert to pascal case\n    string = toPascalCase(string);\n\n    // Convert first character to lowercase\n    return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n// Remove HTML from a string\nexport function stripHTML(source) {\n    const fragment = document.createDocumentFragment();\n    const element = document.createElement('div');\n    fragment.appendChild(element);\n    element.innerHTML = source;\n    return fragment.firstChild.innerText;\n}\n\n// Like outerHTML, but also works for DocumentFragment\nexport function getHTML(element) {\n    const wrapper = document.createElement('div');\n    wrapper.appendChild(element);\n    return wrapper.innerHTML;\n}\n","// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\nimport { replaceAll } from './utils/strings';\n\nconst i18n = {\n    get(key = '', config = {}) {\n        if (is.empty(key) || is.empty(config)) {\n            return '';\n        }\n\n        let string = getDeep(config.i18n, key);\n\n        if (is.empty(string)) {\n            return '';\n        }\n\n        const replace = {\n            '{seektime}': config.seekTime,\n            '{title}': config.title,\n        };\n\n        Object.entries(replace).forEach(([key, value]) => {\n            string = replaceAll(string, key, value);\n        });\n\n        return string;\n    },\n};\n\nexport default i18n;\n","// ==========================================================================\n// Array utils\n// ==========================================================================\n\nimport is from './is';\n\n// Remove duplicates in an array\nexport function dedupe(array) {\n    if (!is.array(array)) {\n        return array;\n    }\n\n    return array.filter((item, index) => array.indexOf(item) === index);\n}\n\n// Get the closest value in an array\nexport function closest(array, value) {\n    if (!is.array(array) || !array.length) {\n        return null;\n    }\n\n    return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\n}\n","// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nclass Storage {\n    constructor(player) {\n        this.enabled = player.config.storage.enabled;\n        this.key = player.config.storage.key;\n    }\n\n    // Check for actual support (see if we can use it)\n    static get supported() {\n        try {\n            if (!('localStorage' in window)) {\n                return false;\n            }\n\n            const test = '___test';\n\n            // Try to use it (it might be disabled, e.g. user is in private mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            window.localStorage.setItem(test, test);\n            window.localStorage.removeItem(test);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    get(key) {\n        if (!Storage.supported || !this.enabled) {\n            return null;\n        }\n\n        const store = window.localStorage.getItem(this.key);\n\n        if (is.empty(store)) {\n            return null;\n        }\n\n        const json = JSON.parse(store);\n\n        return is.string(key) && key.length ? json[key] : json;\n    }\n\n    set(object) {\n        // Bail if we don't have localStorage support or it's disabled\n        if (!Storage.supported || !this.enabled) {\n            return;\n        }\n\n        // Can only store objectst\n        if (!is.object(object)) {\n            return;\n        }\n\n        // Get current storage\n        let storage = this.get();\n\n        // Default to empty object\n        if (is.empty(storage)) {\n            storage = {};\n        }\n\n        // Update the working copy of the values\n        extend(storage, object);\n\n        // Update storage\n        window.localStorage.setItem(this.key, JSON.stringify(storage));\n    }\n}\n\nexport default Storage;\n","// ==========================================================================\n// Fetch wrapper\n// Using XHR to avoid issues with older browsers\n// ==========================================================================\n\nexport default function fetch(url, responseType = 'text') {\n    return new Promise((resolve, reject) => {\n        try {\n            const request = new XMLHttpRequest();\n\n            // Check for CORS support\n            if (!('withCredentials' in request)) {\n                return;\n            }\n\n            request.addEventListener('load', () => {\n                if (responseType === 'text') {\n                    try {\n                        resolve(JSON.parse(request.responseText));\n                    } catch (e) {\n                        resolve(request.responseText);\n                    }\n                } else {\n                    resolve(request.response);\n                }\n            });\n\n            request.addEventListener('error', () => {\n                throw new Error(request.status);\n            });\n\n            request.open('GET', url, true);\n\n            // Set the required response type\n            request.responseType = responseType;\n\n            request.send();\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n","// ==========================================================================\n// Sprite loader\n// ==========================================================================\n\nimport Storage from './../storage';\nimport fetch from './fetch';\nimport is from './is';\n\n// Load an external SVG sprite\nexport default function loadSprite(url, id) {\n    if (!is.string(url)) {\n        return;\n    }\n\n    const prefix = 'cache';\n    const hasId = is.string(id);\n    let isCached = false;\n\n    const exists = () => document.getElementById(id) !== null;\n\n    const update = (container, data) => {\n        container.innerHTML = data;\n\n        // Check again incase of race condition\n        if (hasId && exists()) {\n            return;\n        }\n\n        // Inject the SVG to the body\n        document.body.insertAdjacentElement('afterbegin', container);\n    };\n\n    // Only load once if ID set\n    if (!hasId || !exists()) {\n        const useStorage = Storage.supported;\n\n        // Create container\n        const container = document.createElement('div');\n        container.setAttribute('hidden', '');\n\n        if (hasId) {\n            container.setAttribute('id', id);\n        }\n\n        // Check in cache\n        if (useStorage) {\n            const cached = window.localStorage.getItem(`${prefix}-${id}`);\n            isCached = cached !== null;\n\n            if (isCached) {\n                const data = JSON.parse(cached);\n                update(container, data.content);\n            }\n        }\n\n        // Get the sprite\n        fetch(url)\n            .then(result => {\n                if (is.empty(result)) {\n                    return;\n                }\n\n                if (useStorage) {\n                    window.localStorage.setItem(\n                        `${prefix}-${id}`,\n                        JSON.stringify({\n                            content: result,\n                        }),\n                    );\n                }\n\n                update(container, result);\n            })\n            .catch(() => {});\n    }\n}\n","// ==========================================================================\n// Time utils\n// ==========================================================================\n\nimport is from './is';\n\n// Time helpers\nexport const getHours = value => parseInt((value / 60 / 60) % 60, 10);\nexport const getMinutes = value => parseInt((value / 60) % 60, 10);\nexport const getSeconds = value => parseInt(value % 60, 10);\n\n// Format time to UI friendly string\nexport function formatTime(time = 0, displayHours = false, inverted = false) {\n    // Bail if the value isn't a number\n    if (!is.number(time)) {\n        return formatTime(null, displayHours, inverted);\n    }\n\n    // Format time component to add leading zero\n    const format = value => `0${value}`.slice(-2);\n\n    // Breakdown to hours, mins, secs\n    let hours = getHours(time);\n    const mins = getMinutes(time);\n    const secs = getSeconds(time);\n\n    // Do we need to display hours?\n    if (displayHours || hours > 0) {\n        hours = `${hours}:`;\n    } else {\n        hours = '';\n    }\n\n    // Render\n    return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n}\n","// ==========================================================================\n// Plyr controls\n// ==========================================================================\n\nimport captions from './captions';\nimport html5 from './html5';\nimport i18n from './i18n';\nimport support from './support';\nimport { repaint, transitionEndEvent } from './utils/animation';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n    createElement,\n    emptyElement,\n    getAttributesFromSelector,\n    getElement,\n    getElements,\n    hasClass,\n    removeElement,\n    setAttributes,\n    toggleClass,\n    toggleHidden,\n    matches,\n} from './utils/elements';\nimport { off, on } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { extend } from './utils/objects';\nimport { getPercentage, replaceAll, toCamelCase, toTitleCase } from './utils/strings';\nimport { formatTime, getHours } from './utils/time';\n\n// TODO: Don't export a massive object - break down and create class\nconst controls = {\n    // Get icon URL\n    getIconUrl() {\n        const url = new URL(this.config.iconUrl, window.location);\n        const cors = url.host !== window.location.host || (browser.isIE && !window.svg4everybody);\n\n        return {\n            url: this.config.iconUrl,\n            cors,\n        };\n    },\n\n    // Find the UI controls\n    findElements() {\n        try {\n            this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\n\n            // Buttons\n            this.elements.buttons = {\n                play: getElements.call(this, this.config.selectors.buttons.play),\n                pause: getElement.call(this, this.config.selectors.buttons.pause),\n                restart: getElement.call(this, this.config.selectors.buttons.restart),\n                rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n                fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n                mute: getElement.call(this, this.config.selectors.buttons.mute),\n                pip: getElement.call(this, this.config.selectors.buttons.pip),\n                airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n                settings: getElement.call(this, this.config.selectors.buttons.settings),\n                captions: getElement.call(this, this.config.selectors.buttons.captions),\n                fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen),\n            };\n\n            // Progress\n            this.elements.progress = getElement.call(this, this.config.selectors.progress);\n\n            // Inputs\n            this.elements.inputs = {\n                seek: getElement.call(this, this.config.selectors.inputs.seek),\n                volume: getElement.call(this, this.config.selectors.inputs.volume),\n            };\n\n            // Display\n            this.elements.display = {\n                buffer: getElement.call(this, this.config.selectors.display.buffer),\n                currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n                duration: getElement.call(this, this.config.selectors.display.duration),\n            };\n\n            // Seek tooltip\n            if (is.element(this.elements.progress)) {\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(\n                    `.${this.config.classNames.tooltip}`,\n                );\n            }\n\n            return true;\n        } catch (error) {\n            // Log it\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n            // Restore native video controls\n            this.toggleNativeControls(true);\n\n            return false;\n        }\n    },\n\n    // Create <svg> icon\n    createIcon(type, attributes) {\n        const namespace = 'http://www.w3.org/2000/svg';\n        const iconUrl = controls.getIconUrl.call(this);\n        const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n\n        // Create <svg>\n        const icon = document.createElementNS(namespace, 'svg');\n        setAttributes(\n            icon,\n            extend(attributes, {\n                role: 'presentation',\n                focusable: 'false',\n            }),\n        );\n\n        // Create the <use> to reference sprite\n        const use = document.createElementNS(namespace, 'use');\n        const path = `${iconPath}-${type}`;\n\n        // Set `href` attributes\n        // https://github.com/sampotts/plyr/issues/460\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n        if ('href' in use) {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n        } else {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n        }\n\n        // Add <use> to <svg>\n        icon.appendChild(use);\n\n        return icon;\n    },\n\n    // Create hidden text label\n    createLabel(type, attr = {}) {\n        // Skip i18n for abbreviations and brand names\n        const universals = {\n            pip: 'PIP',\n            airplay: 'AirPlay',\n        };\n        const text = universals[type] || i18n.get(type, this.config);\n\n        const attributes = Object.assign({}, attr, {\n            class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' '),\n        });\n        return createElement('span', attributes, text);\n    },\n\n    // Create a badge\n    createBadge(text) {\n        if (is.empty(text)) {\n            return null;\n        }\n\n        const badge = createElement('span', {\n            class: this.config.classNames.menu.value,\n        });\n\n        badge.appendChild(\n            createElement(\n                'span',\n                {\n                    class: this.config.classNames.menu.badge,\n                },\n                text,\n            ),\n        );\n\n        return badge;\n    },\n\n    // Create a <button>\n    createButton(buttonType, attr) {\n        const button = createElement('button');\n        const attributes = Object.assign({}, attr);\n        let type = toCamelCase(buttonType);\n\n        let toggle = false;\n        let label;\n        let icon;\n        let labelPressed;\n        let iconPressed;\n\n        if (!('type' in attributes)) {\n            attributes.type = 'button';\n        }\n\n        if ('class' in attributes) {\n            if (attributes.class.includes(this.config.classNames.control)) {\n                attributes.class += ` ${this.config.classNames.control}`;\n            }\n        } else {\n            attributes.class = this.config.classNames.control;\n        }\n\n        // Large play button\n        switch (buttonType) {\n            case 'play':\n                toggle = true;\n                label = 'play';\n                labelPressed = 'pause';\n                icon = 'play';\n                iconPressed = 'pause';\n                break;\n\n            case 'mute':\n                toggle = true;\n                label = 'mute';\n                labelPressed = 'unmute';\n                icon = 'volume';\n                iconPressed = 'muted';\n                break;\n\n            case 'captions':\n                toggle = true;\n                label = 'enableCaptions';\n                labelPressed = 'disableCaptions';\n                icon = 'captions-off';\n                iconPressed = 'captions-on';\n                break;\n\n            case 'fullscreen':\n                toggle = true;\n                label = 'enterFullscreen';\n                labelPressed = 'exitFullscreen';\n                icon = 'enter-fullscreen';\n                iconPressed = 'exit-fullscreen';\n                break;\n\n            case 'play-large':\n                attributes.class += ` ${this.config.classNames.control}--overlaid`;\n                type = 'play';\n                label = 'play';\n                icon = 'play';\n                break;\n            case 'googlecast':\n                toggle = true;\n                label = 'enableGoogleCast';\n                labelPressed = 'disableGoogleCast';\n                icon = 'googlecast-off';\n                iconPressed = 'googlecast-on';\n                break;\n            default:\n                label = type;\n                icon = buttonType;\n        }\n\n        // Setup toggle icon and labels\n        if (toggle) {\n            // Icon\n            button.appendChild(controls.createIcon.call(this, iconPressed, { class: 'icon--pressed' }));\n            button.appendChild(controls.createIcon.call(this, icon, { class: 'icon--not-pressed' }));\n\n            // Label/Tooltip\n            button.appendChild(controls.createLabel.call(this, labelPressed, { class: 'label--pressed' }));\n            button.appendChild(controls.createLabel.call(this, label, { class: 'label--not-pressed' }));\n        } else {\n            button.appendChild(controls.createIcon.call(this, icon));\n            button.appendChild(controls.createLabel.call(this, label));\n        }\n\n        // Merge attributes\n        extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n\n        setAttributes(button, attributes);\n\n        // We have multiple play buttons\n        if (type === 'play') {\n            if (!is.array(this.elements.buttons[type])) {\n                this.elements.buttons[type] = [];\n            }\n\n            this.elements.buttons[type].push(button);\n        } else {\n            this.elements.buttons[type] = button;\n        }\n\n        // Toggle classname when pressed property is set\n        const className = this.config.classNames.controlPressed;\n        Object.defineProperty(button, 'pressed', {\n            enumerable: true,\n            get() {\n                return hasClass(button, className);\n            },\n            set(pressed = false) {\n                toggleClass(button, className, pressed);\n            },\n        });\n\n        return button;\n    },\n\n    // Create an <input type='range'>\n    createRange(type, attributes) {\n        // Seek input\n        const input = createElement(\n            'input',\n            extend(\n                getAttributesFromSelector(this.config.selectors.inputs[type]),\n                {\n                    type: 'range',\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                    value: 0,\n                    autocomplete: 'off',\n                    // A11y fixes for https://github.com/sampotts/plyr/issues/905\n                    role: 'slider',\n                    'aria-label': i18n.get(type, this.config),\n                    'aria-valuemin': 0,\n                    'aria-valuemax': 100,\n                    'aria-valuenow': 0,\n                },\n                attributes,\n            ),\n        );\n\n        this.elements.inputs[type] = input;\n\n        // Set the fill for webkit now\n        controls.updateRangeFill.call(this, input);\n\n        return input;\n    },\n\n    // Create a <progress>\n    createProgress(type, attributes) {\n        const progress = createElement(\n            'progress',\n            extend(\n                getAttributesFromSelector(this.config.selectors.display[type]),\n                {\n                    min: 0,\n                    max: 100,\n                    value: 0,\n                    role: 'presentation',\n                    'aria-hidden': true,\n                },\n                attributes,\n            ),\n        );\n\n        // Create the label inside\n        if (type !== 'volume') {\n            progress.appendChild(createElement('span', null, '0'));\n\n            const suffixKey = {\n                played: 'played',\n                buffer: 'buffered',\n            }[type];\n            const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n\n            progress.innerText = `% ${suffix.toLowerCase()}`;\n        }\n\n        this.elements.display[type] = progress;\n\n        return progress;\n    },\n\n    // Create time display\n    createTime(type) {\n        const attributes = getAttributesFromSelector(this.config.selectors.display[type]);\n\n        const container = createElement(\n            'div',\n            extend(attributes, {\n                class: `plyr__time ${attributes.class}`,\n                'aria-label': i18n.get(type, this.config),\n            }),\n            '00:00',\n        );\n\n        // Reference for updates\n        this.elements.display[type] = container;\n\n        return container;\n    },\n\n    // Create a settings menu item\n    createMenuItem({ value, list, type, title, badge = null, checked = false }) {\n        const item = createElement('li');\n\n        const label = createElement('label', {\n            class: this.config.classNames.control,\n        });\n\n        const radio = createElement(\n            'input',\n            extend(getAttributesFromSelector(this.config.selectors.inputs[type]), {\n                type: 'radio',\n                name: `plyr-${type}`,\n                value,\n                checked,\n                class: 'plyr__sr-only',\n            }),\n        );\n\n        const faux = createElement('span', { hidden: '' });\n\n        label.appendChild(radio);\n        label.appendChild(faux);\n        label.insertAdjacentHTML('beforeend', title);\n\n        if (is.element(badge)) {\n            label.appendChild(badge);\n        }\n\n        item.appendChild(label);\n        list.appendChild(item);\n    },\n\n    // Format a time for display\n    formatTime(time = 0, inverted = false) {\n        // Bail if the value isn't a number\n        if (!is.number(time)) {\n            return time;\n        }\n\n        // Always display hours if duration is over an hour\n        const forceHours = getHours(this.duration) > 0;\n\n        return formatTime(time, forceHours, inverted);\n    },\n\n    // Update the displayed time\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\n        // Bail if there's no element to display or the value isn't a number\n        if (!is.element(target) || !is.number(time)) {\n            return;\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        target.innerText = controls.formatTime(time, inverted);\n    },\n\n    // Update volume UI and storage\n    updateVolume() {\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Update range\n        if (is.element(this.elements.inputs.volume)) {\n            controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n        }\n\n        // Update mute state\n        if (is.element(this.elements.buttons.mute)) {\n            this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n        }\n    },\n\n    // Update seek value and lower fill\n    setRange(target, value = 0) {\n        if (!is.element(target)) {\n            return;\n        }\n\n        // eslint-disable-next-line\n        target.value = value;\n\n        // Webkit range fill\n        controls.updateRangeFill.call(this, target);\n    },\n\n    // Update <progress> elements\n    updateProgress(event) {\n        if (!this.supported.ui || !is.event(event)) {\n            return;\n        }\n\n        let value = 0;\n\n        const setProgress = (target, input) => {\n            const value = is.number(input) ? input : 0;\n            const progress = is.element(target) ? target : this.elements.display.buffer;\n\n            // Update value and label\n            if (is.element(progress)) {\n                progress.value = value;\n\n                // Update text label inside\n                const label = progress.getElementsByTagName('span')[0];\n                if (is.element(label)) {\n                    label.childNodes[0].nodeValue = value;\n                }\n            }\n        };\n\n        if (event) {\n            switch (event.type) {\n                // Video playing\n                case 'timeupdate':\n                case 'seeking':\n                case 'seeked':\n                    value = getPercentage(this.currentTime, this.duration);\n\n                    // Set seek range value only if it's a 'natural' time event\n                    if (event.type === 'timeupdate') {\n                        controls.setRange.call(this, this.elements.inputs.seek, value);\n                    }\n\n                    break;\n\n                // Check buffer status\n                case 'playing':\n                case 'progress':\n                    setProgress(this.elements.display.buffer, this.buffered * 100);\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    },\n\n    // Webkit polyfill for lower fill range\n    updateRangeFill(target) {\n        // Get range from event if event passed\n        const range = is.event(target) ? target.target : target;\n\n        // Needs to be a valid <input type='range'>\n        if (!is.element(range) || range.getAttribute('type') !== 'range') {\n            return;\n        }\n\n        // Set aria values for https://github.com/sampotts/plyr/issues/905\n        if (matches(range, this.config.selectors.inputs.seek)) {\n            range.setAttribute('aria-valuenow', this.currentTime);\n            const currentTime = controls.formatTime(this.currentTime);\n            const duration = controls.formatTime(this.duration);\n            const format = i18n.get('seekLabel', this.config);\n            range.setAttribute(\n                'aria-valuetext',\n                format.replace('{currentTime}', currentTime).replace('{duration}', duration),\n            );\n        } else if (matches(range, this.config.selectors.inputs.volume)) {\n            const percent = range.value * 100;\n            range.setAttribute('aria-valuenow', percent);\n            range.setAttribute('aria-valuetext', `${percent}%`);\n        } else {\n            range.setAttribute('aria-valuenow', range.value);\n        }\n\n        // WebKit only\n        if (!browser.isWebkit) {\n            return;\n        }\n\n        // Set CSS custom property\n        range.style.setProperty('--value', `${range.value / range.max * 100}%`);\n    },\n\n    // Update hover tooltip for seeking\n    updateSeekTooltip(event) {\n        // Bail if setting not true\n        if (\n            !this.config.tooltips.seek ||\n            !is.element(this.elements.inputs.seek) ||\n            !is.element(this.elements.display.seekTooltip) ||\n            this.duration === 0\n        ) {\n            return;\n        }\n\n        // Calculate percentage\n        let percent = 0;\n        const clientRect = this.elements.progress.getBoundingClientRect();\n        const visible = `${this.config.classNames.tooltip}--visible`;\n\n        const toggle = toggle => {\n            toggleClass(this.elements.display.seekTooltip, visible, toggle);\n        };\n\n        // Hide on touch\n        if (this.touch) {\n            toggle(false);\n            return;\n        }\n\n        // Determine percentage, if already visible\n        if (is.event(event)) {\n            percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n        } else if (hasClass(this.elements.display.seekTooltip, visible)) {\n            percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\n        } else {\n            return;\n        }\n\n        // Set bounds\n        if (percent < 0) {\n            percent = 0;\n        } else if (percent > 100) {\n            percent = 100;\n        }\n\n        // Display the time a click would seek to\n        controls.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent);\n\n        // Set position\n        this.elements.display.seekTooltip.style.left = `${percent}%`;\n\n        // Show/hide the tooltip\n        // If the event is a moues in/out and percentage is inside bounds\n        if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n            toggle(event.type === 'mouseenter');\n        }\n    },\n\n    // Handle time change event\n    timeUpdate(event) {\n        // Only invert if only one time element is displayed and used for both duration and currentTime\n        const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\n\n        // Duration\n        controls.updateTimeDisplay.call(\n            this,\n            this.elements.display.currentTime,\n            invert ? this.duration - this.currentTime : this.currentTime,\n            invert,\n        );\n\n        // Ignore updates while seeking\n        if (event && event.type === 'timeupdate' && this.media.seeking) {\n            return;\n        }\n\n        // Playing progress\n        controls.updateProgress.call(this, event);\n    },\n\n    // Show the duration on metadataloaded or durationchange events\n    durationUpdate() {\n        // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n        if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\n            return;\n        }\n\n        // Update ARIA values\n        if (is.element(this.elements.inputs.seek)) {\n            this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n        }\n\n        // If there's a spot to display duration\n        const hasDuration = is.element(this.elements.display.duration);\n\n        // If there's only one time display, display duration there\n        if (!hasDuration && this.config.displayDuration && this.paused) {\n            controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n        }\n\n        // If there's a duration element, update content\n        if (hasDuration) {\n            controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n        }\n\n        // Update the tooltip (if visible)\n        controls.updateSeekTooltip.call(this);\n    },\n\n    // Hide/show a tab\n    toggleTab(setting, toggle) {\n        toggleHidden(this.elements.settings.tabs[setting], !toggle);\n    },\n\n    // Set the quality menu\n    setQualityMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panes.quality)) {\n            return;\n        }\n\n        const type = 'quality';\n        const list = this.elements.settings.panes.quality.querySelector('ul');\n\n        // Set options if passed and filter based on uniqueness and config\n        if (is.array(options)) {\n            this.options.quality = dedupe(options).filter(quality => this.config.quality.options.includes(quality));\n        }\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Get the badge HTML for HD, 4K etc\n        const getBadge = quality => {\n            const label = i18n.get(`qualityBadge.${quality}`, this.config);\n\n            if (!label.length) {\n                return null;\n            }\n\n            return controls.createBadge.call(this, label);\n        };\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => {\n                const sorting = this.config.quality.options;\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n            })\n            .forEach(quality => {\n                controls.createMenuItem.call(this, {\n                    value: quality,\n                    list,\n                    type,\n                    title: controls.getLabel.call(this, 'quality', quality),\n                    badge: getBadge(quality),\n                });\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Translate a value into a nice label\n    getLabel(setting, value) {\n        switch (setting) {\n            case 'speed':\n                return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n            case 'quality':\n                if (is.number(value)) {\n                    const label = i18n.get(`qualityLabel.${value}`, this.config);\n\n                    if (!label.length) {\n                        return `${value}p`;\n                    }\n\n                    return label;\n                }\n\n                return toTitleCase(value);\n\n            case 'captions':\n                return captions.getLabel.call(this);\n\n            default:\n                return null;\n        }\n    },\n\n    // Update the selected setting\n    updateSetting(setting, container, input) {\n        const pane = this.elements.settings.panes[setting];\n        let value = null;\n        let list = container;\n\n        if (setting === 'captions') {\n            value = this.currentTrack;\n        } else {\n            value = !is.empty(input) ? input : this[setting];\n\n            // Get default\n            if (is.empty(value)) {\n                value = this.config[setting].default;\n            }\n\n            // Unsupported value\n            if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n                this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n                return;\n            }\n\n            // Disabled value\n            if (!this.config[setting].options.includes(value)) {\n                this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n                return;\n            }\n        }\n\n        // Get the list if we need to\n        if (!is.element(list)) {\n            list = pane && pane.querySelector('ul');\n        }\n\n        // If there's no list it means it's not been rendered...\n        if (!is.element(list)) {\n            return;\n        }\n\n        // Update the label\n        const label = this.elements.settings.tabs[setting].querySelector(`.${this.config.classNames.menu.value}`);\n        label.innerHTML = controls.getLabel.call(this, setting, value);\n\n        // Find the radio option and check it\n        const target = list && list.querySelector(`input[value=\"${value}\"]`);\n\n        if (is.element(target)) {\n            target.checked = true;\n        }\n    },\n\n    // Set the looping options\n    /* setLoopMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panes.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panes.loop.querySelector('ul');\n\n        // Show the pane and tab\n        toggleHidden(this.elements.settings.tabs.loop, false);\n        toggleHidden(this.elements.settings.panes.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.loop.options);\n        controls.toggleTab.call(this, 'loop', toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        options.forEach(option => {\n            const item = createElement('li');\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n    // Get current selected caption language\n    // TODO: rework this to user the getter in the API?\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panes.captions.querySelector('ul');\n        const tracks = captions.getTracks.call(this);\n\n        // Toggle the pane and tab\n        controls.toggleTab.call(this, type, tracks.length);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!tracks.length) {\n            return;\n        }\n\n        // Generate options data\n        const options = tracks.map((track, value) => ({\n            value,\n            checked: this.captions.toggled && this.currentTrack === value,\n            title: captions.getLabel.call(this, track),\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n            list,\n            type: 'language',\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        options.unshift({\n            value: -1,\n            checked: !this.captions.toggled,\n            title: i18n.get('disabled', this.config),\n            list,\n            type: 'language',\n        });\n\n        // Generate options\n        options.forEach(controls.createMenuItem.bind(this));\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Do nothing if not selected\n        if (!this.config.controls.includes('settings') || !this.config.settings.includes('speed')) {\n            return;\n        }\n\n        // Menu required\n        if (!is.element(this.elements.settings.panes.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n\n        // Set the speed options\n        if (is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the list to populate\n        const list = this.elements.settings.panes.speed.querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            controls.createMenuItem.call(this, {\n                value: speed,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'speed', speed),\n            });\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Check if we need to hide/show the settings menu\n    checkMenu() {\n        const { tabs } = this.elements.settings;\n        const visible = !is.empty(tabs) && Object.values(tabs).some(tab => !tab.hidden);\n\n        toggleHidden(this.elements.settings.menu, !visible);\n    },\n\n    // Show/hide menu\n    toggleMenu(event) {\n        const { form } = this.elements.settings;\n        const button = this.elements.buttons.settings;\n\n        // Menu and button are required\n        if (!is.element(form) || !is.element(button)) {\n            return;\n        }\n\n        const show = is.boolean(event) ? event : is.element(form) && form.hasAttribute('hidden');\n\n        if (is.event(event)) {\n            const isMenuItem = is.element(form) && form.contains(event.target);\n            const isButton = event.target === this.elements.buttons.settings;\n\n            // If the click was inside the form or if the click\n            // wasn't the button or menu item and we're trying to\n            // show the menu (a doc click shouldn't show the menu)\n            if (isMenuItem || (!isMenuItem && !isButton && show)) {\n                return;\n            }\n\n            // Prevent the toggle being caught by the doc listener\n            if (isButton) {\n                event.stopPropagation();\n            }\n        }\n\n        // Set form and button attributes\n        if (is.element(button)) {\n            button.setAttribute('aria-expanded', show);\n        }\n\n        if (is.element(form)) {\n            toggleHidden(form, !show);\n            toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n            if (show) {\n                form.removeAttribute('tabindex');\n            } else {\n                form.setAttribute('tabindex', -1);\n            }\n        }\n    },\n\n    // Get the natural size of a tab\n    getTabSize(tab) {\n        const clone = tab.cloneNode(true);\n        clone.style.position = 'absolute';\n        clone.style.opacity = 0;\n        clone.removeAttribute('hidden');\n\n        // Prevent input's being unchecked due to the name being identical\n        Array.from(clone.querySelectorAll('input[name]')).forEach(input => {\n            const name = input.getAttribute('name');\n            input.setAttribute('name', `${name}-clone`);\n        });\n\n        // Append to parent so we get the \"real\" size\n        tab.parentNode.appendChild(clone);\n\n        // Get the sizes before we remove\n        const width = clone.scrollWidth;\n        const height = clone.scrollHeight;\n\n        // Remove from the DOM\n        removeElement(clone);\n\n        return {\n            width,\n            height,\n        };\n    },\n\n    // Toggle Menu\n    showTab(target = '') {\n        const { menu } = this.elements.settings;\n        const pane = document.getElementById(target);\n\n        // Nothing to show, bail\n        if (!is.element(pane)) {\n            return;\n        }\n\n        // Are we targeting a tab? If not, bail\n        const isTab = pane.getAttribute('role') === 'tabpanel';\n        if (!isTab) {\n            return;\n        }\n\n        // Hide all other tabs\n        // Get other tabs\n        const current = menu.querySelector('[role=\"tabpanel\"]:not([hidden])');\n        const container = current.parentNode;\n\n        // Set other toggles to be expanded false\n        Array.from(menu.querySelectorAll(`[aria-controls=\"${current.getAttribute('id')}\"]`)).forEach(toggle => {\n            toggle.setAttribute('aria-expanded', false);\n        });\n\n        // If we can do fancy animations, we'll animate the height/width\n        if (support.transitions && !support.reducedMotion) {\n            // Set the current width as a base\n            container.style.width = `${current.scrollWidth}px`;\n            container.style.height = `${current.scrollHeight}px`;\n\n            // Get potential sizes\n            const size = controls.getTabSize.call(this, pane);\n\n            // Restore auto height/width\n            const restore = e => {\n                // We're only bothered about height and width on the container\n                if (e.target !== container || !['width', 'height'].includes(e.propertyName)) {\n                    return;\n                }\n\n                // Revert back to auto\n                container.style.width = '';\n                container.style.height = '';\n\n                // Only listen once\n                off.call(this, container, transitionEndEvent, restore);\n            };\n\n            // Listen for the transition finishing and restore auto height/width\n            on.call(this, container, transitionEndEvent, restore);\n\n            // Set dimensions to target\n            container.style.width = `${size.width}px`;\n            container.style.height = `${size.height}px`;\n        }\n\n        // Set attributes on current tab\n        toggleHidden(current, true);\n        current.setAttribute('tabindex', -1);\n\n        // Set attributes on target\n        toggleHidden(pane, false);\n\n        const tabs = getElements.call(this, `[aria-controls=\"${target}\"]`);\n        Array.from(tabs).forEach(tab => {\n            tab.setAttribute('aria-expanded', true);\n        });\n        pane.removeAttribute('tabindex');\n\n        // Focus the first item\n        pane.querySelectorAll('button:not(:disabled), input:not(:disabled), [tabindex]')[0].focus();\n    },\n\n    // Build the default HTML\n    // TODO: Set order based on order in the config.controls array?\n    create(data) {\n        // Do nothing if we want no controls\n        if (is.empty(this.config.controls)) {\n            return null;\n        }\n\n        // Create the container\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        // Restart button\n        if (this.config.controls.includes('restart')) {\n            container.appendChild(controls.createButton.call(this, 'restart'));\n        }\n\n        // Rewind button\n        if (this.config.controls.includes('rewind')) {\n            container.appendChild(controls.createButton.call(this, 'rewind'));\n        }\n\n        // Play/Pause button\n        if (this.config.controls.includes('play')) {\n            container.appendChild(controls.createButton.call(this, 'play'));\n        }\n\n        // Fast forward button\n        if (this.config.controls.includes('fast-forward')) {\n            container.appendChild(controls.createButton.call(this, 'fast-forward'));\n        }\n\n        // Progress\n        if (this.config.controls.includes('progress')) {\n            const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n            // Seek range slider\n            progress.appendChild(\n                controls.createRange.call(this, 'seek', {\n                    id: `plyr-seek-${data.id}`,\n                }),\n            );\n\n            // Buffer progress\n            progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n            // TODO: Add loop display indicator\n\n            // Seek tooltip\n            if (this.config.tooltips.seek) {\n                const tooltip = createElement(\n                    'span',\n                    {\n                        class: this.config.classNames.tooltip,\n                    },\n                    '00:00',\n                );\n\n                progress.appendChild(tooltip);\n                this.elements.display.seekTooltip = tooltip;\n            }\n\n            this.elements.progress = progress;\n            container.appendChild(this.elements.progress);\n        }\n\n        // Media current time display\n        if (this.config.controls.includes('current-time')) {\n            container.appendChild(controls.createTime.call(this, 'currentTime'));\n        }\n\n        // Media duration display\n        if (this.config.controls.includes('duration')) {\n            container.appendChild(controls.createTime.call(this, 'duration'));\n        }\n\n        // Toggle mute button\n        if (this.config.controls.includes('mute')) {\n            container.appendChild(controls.createButton.call(this, 'mute'));\n        }\n\n        // Volume range control\n        if (this.config.controls.includes('volume')) {\n            const volume = createElement('div', {\n                class: 'plyr__volume',\n            });\n\n            // Set the attributes\n            const attributes = {\n                max: 1,\n                step: 0.05,\n                value: this.config.volume,\n            };\n\n            // Create the volume range slider\n            volume.appendChild(\n                controls.createRange.call(\n                    this,\n                    'volume',\n                    extend(attributes, {\n                        id: `plyr-volume-${data.id}`,\n                    }),\n                ),\n            );\n\n            this.elements.volume = volume;\n\n            container.appendChild(volume);\n        }\n\n        // Toggle captions button\n        if (this.config.controls.includes('captions')) {\n            container.appendChild(controls.createButton.call(this, 'captions'));\n        }\n\n        // Google cast button\n        if (this.config.controls.includes('googlecast')) {\n            container.appendChild(controls.createButton.call(this, 'googlecast'));\n        }\n\n        // Settings button / menu\n        if (this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n            const menu = createElement('div', {\n                class: 'plyr__menu',\n                hidden: '',\n            });\n\n            menu.appendChild(\n                controls.createButton.call(this, 'settings', {\n                    id: `plyr-settings-toggle-${data.id}`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}`,\n                    'aria-expanded': false,\n                }),\n            );\n\n            const form = createElement('form', {\n                class: 'plyr__menu__container',\n                id: `plyr-settings-${data.id}`,\n                hidden: '',\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n                role: 'tablist',\n                tabindex: -1,\n            });\n\n            const inner = createElement('div');\n\n            const home = createElement('div', {\n                id: `plyr-settings-${data.id}-home`,\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n                role: 'tabpanel',\n            });\n\n            // Create the tab list\n            const tabs = createElement('ul', {\n                role: 'tablist',\n            });\n\n            // Build the tabs\n            this.config.settings.forEach(type => {\n                const tab = createElement('li', {\n                    role: 'tab',\n                    hidden: '',\n                });\n\n                const button = createElement(\n                    'button',\n                    extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                        id: `plyr-settings-${data.id}-${type}-tab`,\n                        'aria-haspopup': true,\n                        'aria-controls': `plyr-settings-${data.id}-${type}`,\n                        'aria-expanded': false,\n                    }),\n                    i18n.get(type, this.config),\n                );\n\n                const value = createElement('span', {\n                    class: this.config.classNames.menu.value,\n                });\n\n                // Speed contains HTML entities\n                value.innerHTML = data[type];\n\n                button.appendChild(value);\n                tab.appendChild(button);\n                tabs.appendChild(tab);\n\n                this.elements.settings.tabs[type] = tab;\n            });\n\n            home.appendChild(tabs);\n            inner.appendChild(home);\n\n            // Build the panes\n            this.config.settings.forEach(type => {\n                const pane = createElement('div', {\n                    id: `plyr-settings-${data.id}-${type}`,\n                    hidden: '',\n                    'aria-labelled-by': `plyr-settings-${data.id}-${type}-tab`,\n                    role: 'tabpanel',\n                    tabindex: -1,\n                });\n\n                const back = createElement(\n                    'button',\n                    {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                        'aria-haspopup': true,\n                        'aria-controls': `plyr-settings-${data.id}-home`,\n                        'aria-expanded': false,\n                    },\n                    i18n.get(type, this.config),\n                );\n\n                pane.appendChild(back);\n\n                const options = createElement('ul');\n\n                pane.appendChild(options);\n                inner.appendChild(pane);\n\n                this.elements.settings.panes[type] = pane;\n            });\n\n            form.appendChild(inner);\n            menu.appendChild(form);\n            container.appendChild(menu);\n\n            this.elements.settings.form = form;\n            this.elements.settings.menu = menu;\n        }\n\n        // Picture in picture button\n        if (this.config.controls.includes('pip') && support.pip) {\n            container.appendChild(controls.createButton.call(this, 'pip'));\n        }\n\n        // Airplay button\n        if (this.config.controls.includes('airplay') && support.airplay) {\n            container.appendChild(controls.createButton.call(this, 'airplay'));\n        }\n\n        // Toggle fullscreen button\n        if (this.config.controls.includes('fullscreen')) {\n            container.appendChild(controls.createButton.call(this, 'fullscreen'));\n        }\n\n        // Larger overlaid play button\n        if (this.config.controls.includes('play-large')) {\n            this.elements.container.appendChild(controls.createButton.call(this, 'play-large'));\n        }\n\n        this.elements.controls = container;\n\n        if (this.isHTML5) {\n            controls.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        controls.setSpeedMenu.call(this);\n\n        return container;\n    },\n\n    // Insert controls\n    inject() {\n        // Sprite\n        if (this.config.loadSprite) {\n            const icon = controls.getIconUrl.call(this);\n\n            // Only load external sprite using AJAX\n            if (icon.cors) {\n                loadSprite(icon.url, 'sprite-plyr');\n            }\n        }\n\n        // Create a unique ID\n        this.id = Math.floor(Math.random() * 10000);\n\n        // Null by default\n        let container = null;\n        this.elements.controls = null;\n\n        // Set template properties\n        const props = {\n            id: this.id,\n            seektime: this.config.seekTime,\n            title: this.config.title,\n        };\n        let update = true;\n\n        if (is.string(this.config.controls) || is.element(this.config.controls)) {\n            // String or HTMLElement passed as the option\n            container = this.config.controls;\n        } else if (is.function(this.config.controls)) {\n            // A custom function to build controls\n            // The function can return a HTMLElement or String\n            container = this.config.controls.call(this, props);\n        } else {\n            // Create controls\n            container = controls.create.call(this, {\n                id: this.id,\n                seektime: this.config.seekTime,\n                speed: this.speed,\n                quality: this.quality,\n                captions: captions.getLabel.call(this),\n                // TODO: Looping\n                // loop: 'None',\n            });\n            update = false;\n        }\n\n        // Replace props with their value\n        const replace = input => {\n            let result = input;\n\n            Object.entries(props).forEach(([key, value]) => {\n                result = replaceAll(result, `{${key}}`, value);\n            });\n\n            return result;\n        };\n\n        // Update markup\n        if (update) {\n            if (is.string(this.config.controls)) {\n                container = replace(container);\n            } else if (is.element(container)) {\n                container.innerHTML = replace(container.innerHTML);\n            }\n        }\n\n        // Controls container\n        let target;\n\n        // Inject to custom location\n        if (is.string(this.config.selectors.controls.container)) {\n            target = document.querySelector(this.config.selectors.controls.container);\n        }\n\n        // Inject into the container by default\n        if (!is.element(target)) {\n            target = this.elements.container;\n        }\n\n        // Inject controls HTML\n        if (is.element(container)) {\n            target.appendChild(container);\n        } else if (container) {\n            target.insertAdjacentHTML('beforeend', container);\n        }\n\n        // Find the elements if need be\n        if (!is.element(this.elements.controls)) {\n            controls.findElements.call(this);\n        }\n\n        // Edge sometimes doesn't finish the paint so force a redraw\n        if (window.navigator.userAgent.includes('Edge')) {\n            repaint(target);\n        }\n\n        // Setup tooltips\n        if (this.config.tooltips.controls) {\n            const { classNames, selectors } = this.config;\n            const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\n            const labels = getElements.call(this, selector);\n\n            Array.from(labels).forEach(label => {\n                toggleClass(label, this.config.classNames.hidden, false);\n                toggleClass(label, this.config.classNames.tooltip, true);\n            });\n        }\n    },\n};\n\nexport default controls;\n","// ==========================================================================\n// URL utils\n// ==========================================================================\n\nimport is from './is';\n\n/**\n * Parse a string to a URL object\n * @param {string} input - the URL to be parsed\n * @param {boolean} safe - failsafe parsing\n */\nexport function parseUrl(input, safe = true) {\n    let url = input;\n\n    if (safe) {\n        const parser = document.createElement('a');\n        parser.href = url;\n        url = parser.href;\n    }\n\n    try {\n        return new URL(url);\n    } catch (e) {\n        return null;\n    }\n}\n\n// Convert object to URLSearchParams\nexport function buildUrlParams(input) {\n    const params = new URLSearchParams();\n\n    if (is.object(input)) {\n        Object.entries(input).forEach(([key, value]) => {\n            params.set(key, value);\n        });\n    }\n\n    return params;\n}\n","// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport controls from './controls';\nimport i18n from './i18n';\nimport support from './support';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n    createElement,\n    emptyElement,\n    getAttributesFromSelector,\n    insertAfter,\n    removeElement,\n    toggleClass,\n} from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport fetch from './utils/fetch';\nimport is from './utils/is';\nimport { getHTML } from './utils/strings';\nimport { parseUrl } from './utils/urls';\n\nconst captions = {\n    // Setup captions\n    setup() {\n        // Requires UI support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Only Vimeo and HTML5 video supported at this point\n        if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n            // Clear menu and hide\n            if (\n                is.array(this.config.controls) &&\n                this.config.controls.includes('settings') &&\n                this.config.settings.includes('captions')\n            ) {\n                controls.setCaptionsMenu.call(this);\n            }\n\n            return;\n        }\n\n        // Inject the container\n        if (!is.element(this.elements.captions)) {\n            this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n\n            insertAfter(this.elements.captions, this.elements.wrapper);\n        }\n\n        // Fix IE captions if CORS is used\n        // Fetch captions and inject as blobs instead (data URIs not supported!)\n        if (browser.isIE && window.URL) {\n            const elements = this.media.querySelectorAll('track');\n\n            Array.from(elements).forEach(track => {\n                const src = track.getAttribute('src');\n                const url = parseUrl(src);\n\n                if (\n                    url !== null &&\n                    url.hostname !== window.location.href.hostname &&\n                    ['http:', 'https:'].includes(url.protocol)\n                ) {\n                    fetch(src, 'blob')\n                        .then(blob => {\n                            track.setAttribute('src', window.URL.createObjectURL(blob));\n                        })\n                        .catch(() => {\n                            removeElement(track);\n                        });\n                }\n            });\n        }\n\n        // Get and set initial data\n        // The \"preferred\" options are not realized unless / until the wanted language has a match\n        // * languages: Array of user's browser languages.\n        // * language:  The language preferred by user settings or config\n        // * active:    The state preferred by user settings or config\n        // * toggled:   The real captions state\n\n        const languages = dedupe(\n            Array.from(navigator.languages || navigator.userLanguage).map(language => language.split('-')[0]),\n        );\n\n        let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\n\n        // Use first browser language when language is 'auto'\n        if (language === 'auto') {\n            [language] = languages;\n        }\n\n        let active = this.storage.get('captions');\n        if (!is.boolean(active)) {\n            ({ active } = this.config.captions);\n        }\n\n        Object.assign(this.captions, {\n            toggled: false,\n            active,\n            language,\n            languages,\n        });\n\n        // Watch changes to textTracks and update captions menu\n        if (this.isHTML5) {\n            const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n            on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n        }\n\n        // Update available languages in list next tick (the event must not be triggered before the listeners)\n        setTimeout(captions.update.bind(this), 0);\n    },\n\n    // Update available language options in settings based on tracks\n    update() {\n        const tracks = captions.getTracks.call(this, true);\n        // Get the wanted language\n        const { active, language, meta, currentTrackNode } = this.captions;\n        const languageExists = Boolean(tracks.find(track => track.language === language));\n\n        // Handle tracks (add event listener and \"pseudo\"-default)\n        if (this.isHTML5 && this.isVideo) {\n            tracks.filter(track => !meta.get(track)).forEach(track => {\n                this.debug.log('Track added', track);\n                // Attempt to store if the original dom element was \"default\"\n                meta.set(track, {\n                    default: track.mode === 'showing',\n                });\n\n                // Turn off native caption rendering to avoid double captions\n                track.mode = 'hidden';\n\n                // Add event listener for cue changes\n                on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\n            });\n        }\n\n        // Update language first time it matches, or if the previous matching track was removed\n        if ((languageExists && this.language !== language) || !tracks.includes(currentTrackNode)) {\n            captions.setLanguage.call(this, language);\n            captions.toggle.call(this, active && languageExists);\n        }\n\n        // Enable or disable captions based on track length\n        toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\n\n        // Update available languages in list\n        if ((this.config.controls || []).includes('settings') && this.config.settings.includes('captions')) {\n            controls.setCaptionsMenu.call(this);\n        }\n    },\n\n    // Toggle captions display\n    // Used internally for the toggleCaptions method, with the passive option forced to false\n    toggle(input, passive = true) {\n        // If there's no full support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        const { toggled } = this.captions; // Current state\n        const activeClass = this.config.classNames.captions.active;\n\n        // Get the next state\n        // If the method is called without parameter, toggle based on current value\n        const active = is.nullOrUndefined(input) ? !toggled : input;\n\n        // Update state and trigger event\n        if (active !== toggled) {\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.active = active;\n                this.storage.set({ captions: active });\n            }\n\n            // Force language if the call isn't passive and there is no matching language to toggle to\n            if (!this.language && active && !passive) {\n                const tracks = captions.getTracks.call(this);\n                const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\n\n                // Override user preferences to avoid switching languages if a matching track is added\n                this.captions.language = track.language;\n\n                // Set caption, but don't store in localStorage as user preference\n                captions.set.call(this, tracks.indexOf(track));\n                return;\n            }\n\n            // Toggle state\n            this.elements.buttons.captions.pressed = active;\n\n            // Add class hook\n            toggleClass(this.elements.container, activeClass, active);\n\n            this.captions.toggled = active;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // Trigger event (not used internally)\n            triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n        }\n    },\n\n    // Set captions by track index\n    // Used internally for the currentTrack setter with the passive option forced to false\n    set(index, passive = true) {\n        const tracks = captions.getTracks.call(this);\n\n        // Disable captions if setting to -1\n        if (index === -1) {\n            captions.toggle.call(this, false, passive);\n            return;\n        }\n\n        if (!is.number(index)) {\n            this.debug.warn('Invalid caption argument', index);\n            return;\n        }\n\n        if (!(index in tracks)) {\n            this.debug.warn('Track not found', index);\n            return;\n        }\n\n        if (this.captions.currentTrack !== index) {\n            this.captions.currentTrack = index;\n            const track = tracks[index];\n            const { language } = track || {};\n\n            // Store reference to node for invalidation on remove\n            this.captions.currentTrackNode = track;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.language = language;\n                this.storage.set({ language });\n            }\n\n            // Handle Vimeo captions\n            if (this.isVimeo) {\n                this.embed.enableTextTrack(language);\n            }\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'languagechange');\n        }\n\n        // Show captions\n        captions.toggle.call(this, true, passive);\n\n        if (this.isHTML5 && this.isVideo) {\n            // If we change the active track while a cue is already displayed we need to update it\n            captions.updateCues.call(this);\n        }\n    },\n\n    // Set captions by language\n    // Used internally for the language setter with the passive option forced to false\n    setLanguage(input, passive = true) {\n        if (!is.string(input)) {\n            this.debug.warn('Invalid language argument', input);\n            return;\n        }\n        // Normalize\n        const language = input.toLowerCase();\n        this.captions.language = language;\n\n        // Set currentTrack\n        const tracks = captions.getTracks.call(this);\n        const track = captions.findTrack.call(this, [language]);\n        captions.set.call(this, tracks.indexOf(track), passive);\n    },\n\n    // Get current valid caption tracks\n    // If update is false it will also ignore tracks without metadata\n    // This is used to \"freeze\" the language options when captions.update is false\n    getTracks(update = false) {\n        // Handle media or textTracks missing or null\n        const tracks = Array.from((this.media || {}).textTracks || []);\n        // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n        // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n        return tracks\n            .filter(track => !this.isHTML5 || update || this.captions.meta.has(track))\n            .filter(track => ['captions', 'subtitles'].includes(track.kind));\n    },\n\n    // Match tracks based on languages and get the first\n    findTrack(languages, force = false) {\n        const tracks = captions.getTracks.call(this);\n        const sortIsDefault = track => Number((this.captions.meta.get(track) || {}).default);\n        const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\n        let track;\n        languages.every(language => {\n            track = sorted.find(track => track.language === language);\n            return !track; // Break iteration if there is a match\n        });\n        // If no match is found but is required, get first\n        return track || (force ? sorted[0] : undefined);\n    },\n\n    // Get the current track\n    getCurrentTrack() {\n        return captions.getTracks.call(this)[this.currentTrack];\n    },\n\n    // Get UI label for track\n    getLabel(track) {\n        let currentTrack = track;\n\n        if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\n            currentTrack = captions.getCurrentTrack.call(this);\n        }\n\n        if (is.track(currentTrack)) {\n            if (!is.empty(currentTrack.label)) {\n                return currentTrack.label;\n            }\n\n            if (!is.empty(currentTrack.language)) {\n                return track.language.toUpperCase();\n            }\n\n            return i18n.get('enabled', this.config);\n        }\n\n        return i18n.get('disabled', this.config);\n    },\n\n    // Update captions using current track's active cues\n    // Also optional array argument in case there isn't any track (ex: vimeo)\n    updateCues(input) {\n        // Requires UI\n        if (!this.supported.ui) {\n            return;\n        }\n\n        if (!is.element(this.elements.captions)) {\n            this.debug.warn('No captions element to render to');\n            return;\n        }\n\n        // Only accept array or empty input\n        if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\n            this.debug.warn('updateCues: Invalid input', input);\n            return;\n        }\n\n        let cues = input;\n\n        // Get cues from track\n        if (!cues) {\n            const track = captions.getCurrentTrack.call(this);\n            cues = Array.from((track || {}).activeCues || [])\n                .map(cue => cue.getCueAsHTML())\n                .map(getHTML);\n        }\n\n        // Set new caption text\n        const content = cues.map(cueText => cueText.trim()).join('\\n');\n        const changed = content !== this.elements.captions.innerHTML;\n\n        if (changed) {\n            // Empty the container and create a new child element\n            emptyElement(this.elements.captions);\n            const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n            caption.innerHTML = content;\n            this.elements.captions.appendChild(caption);\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'cuechange');\n        }\n    },\n};\n\nexport default captions;\n","// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n    // Disable\n    enabled: true,\n\n    // Custom media title\n    title: '',\n\n    // Logging to console\n    debug: false,\n\n    // Auto play (if supported)\n    autoplay: false,\n\n    // Only allow one media playing at once (vimeo only)\n    autopause: true,\n\n    // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\n    // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\n    playsinline: true,\n\n    // Default time to skip when rewind/fast forward\n    seekTime: 10,\n\n    // Default volume\n    volume: 1,\n    muted: false,\n\n    // Pass a custom duration\n    duration: null,\n\n    // Display the media duration on load in the current time position\n    // If you have opted to display both duration and currentTime, this is ignored\n    displayDuration: true,\n\n    // Invert the current time to be a countdown\n    invertTime: true,\n\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\n    toggleInvert: true,\n\n    // Aspect ratio (for embeds)\n    ratio: '16:9',\n\n    // Click video container to play/pause\n    clickToPlay: true,\n\n    // Auto hide the controls\n    hideControls: true,\n\n    // Reset to start when playback ended\n    resetOnEnd: false,\n\n    // Disable the standard context menu\n    disableContextMenu: true,\n\n    // Sprite (for icons)\n    loadSprite: true,\n    iconPrefix: 'plyr',\n    iconUrl: 'https://cdn.plyr.io/3.3.12/plyr.svg',\n\n    // Blank video (used to prevent errors on source change)\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n    // Quality default\n    quality: {\n        default: 576,\n        options: [\n            4320,\n            2880,\n            2160,\n            1440,\n            1080,\n            720,\n            576,\n            480,\n            360,\n            240,\n            'default', // YouTube's \"auto\"\n        ],\n    },\n\n    // Set loops\n    loop: {\n        active: false,\n        // start: null,\n        // end: null,\n    },\n\n    // Speed default and options to display\n    speed: {\n        selected: 1,\n        options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],\n    },\n\n    // Keyboard shortcut settings\n    keyboard: {\n        focused: true,\n        global: false,\n    },\n\n    // Display tooltips\n    tooltips: {\n        controls: false,\n        seek: true,\n    },\n\n    // Captions settings\n    captions: {\n        active: false,\n        language: 'auto',\n        // Listen to new tracks added after Plyr is initialized.\n        // This is needed for streaming captions, but may result in unselectable options\n        update: false,\n    },\n\n    // Fullscreen settings\n    fullscreen: {\n        enabled: true, // Allow fullscreen?\n        fallback: true, // Fallback for vintage browsers\n        iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    },\n\n    // Local storage\n    storage: {\n        enabled: true,\n        key: 'plyr',\n    },\n\n    // Default controls\n    controls: [\n        'play-large',\n        // 'restart',\n        // 'rewind',\n        'play',\n        // 'fast-forward',\n        'progress',\n        'current-time',\n        'mute',\n        'volume',\n        'captions',\n        'settings',\n        'pip',\n        'airplay',\n        'googlecast',\n        'fullscreen',\n    ],\n    settings: ['captions', 'quality', 'speed'],\n\n    // Localisation\n    i18n: {\n        restart: 'Restart',\n        rewind: 'Rewind {seektime}s',\n        play: 'Play',\n        pause: 'Pause',\n        fastForward: 'Forward {seektime}s',\n        seek: 'Seek',\n        seekLabel: '{currentTime} of {duration}',\n        played: 'Played',\n        buffered: 'Buffered',\n        currentTime: 'Current time',\n        duration: 'Duration',\n        volume: 'Volume',\n        mute: 'Mute',\n        unmute: 'Unmute',\n        enableCaptions: 'Enable captions',\n        disableCaptions: 'Disable captions',\n        enterFullscreen: 'Enter fullscreen',\n        exitFullscreen: 'Exit fullscreen',\n        enableGoogleCast: 'Google Cast',\n        disableGoogleCast: 'Disable Cast',\n        frameTitle: 'Player for {title}',\n        captions: 'Captions',\n        settings: 'Settings',\n        menuBack: 'Go back to previous menu',\n        speed: 'Speed',\n        normal: 'Normal',\n        quality: 'Quality',\n        loop: 'Loop',\n        start: 'Start',\n        end: 'End',\n        all: 'All',\n        reset: 'Reset',\n        disabled: 'Disabled',\n        enabled: 'Enabled',\n        advertisement: 'Ad',\n        qualityBadge: {\n            2160: '4K',\n            1440: 'HD',\n            1080: 'HD',\n            720: 'HD',\n            576: 'SD',\n            480: 'SD',\n        },\n    },\n\n    // URLs\n    urls: {\n        vimeo: {\n            sdk: 'https://player.vimeo.com/api/player.js',\n            iframe: 'https://player.vimeo.com/video/{0}?{1}',\n            api: 'https://vimeo.com/api/v2/video/{0}.json',\n        },\n        youtube: {\n            sdk: 'https://www.youtube.com/iframe_api',\n            api:\n                'https://www.googleapis.com/youtube/v3/videos?id={0}&key={1}&fields=items(snippet(title))&part=snippet',\n        },\n        googleIMA: {\n            sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n        },\n        googleCast: {\n            api: 'https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1',\n        },\n    },\n\n    // Custom control listeners\n    listeners: {\n        seek: null,\n        play: null,\n        pause: null,\n        restart: null,\n        rewind: null,\n        fastForward: null,\n        mute: null,\n        volume: null,\n        captions: null,\n        fullscreen: null,\n        pip: null,\n        airplay: null,\n        googlecast: null,\n        speed: null,\n        quality: null,\n        loop: null,\n        language: null,\n    },\n\n    // Events to watch and bubble\n    events: [\n        // Events to watch on HTML5 media elements and bubble\n        // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n        'ended',\n        'progress',\n        'stalled',\n        'playing',\n        'waiting',\n        'canplay',\n        'canplaythrough',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'timeupdate',\n        'volumechange',\n        'play',\n        'pause',\n        'error',\n        'seeking',\n        'seeked',\n        'emptied',\n        'ratechange',\n        'cuechange',\n\n        // Custom events\n        'enterfullscreen',\n        'exitfullscreen',\n        'captionsenabled',\n        'captionsdisabled',\n        'languagechange',\n        'controlshidden',\n        'controlsshown',\n        'ready',\n\n        // YouTube\n        'statechange',\n        'qualitychange',\n        'qualityrequested',\n\n        // Ads\n        'adsloaded',\n        'adscontentpause',\n        'adscontentresume',\n        'adstarted',\n        'adsmidpoint',\n        'adscomplete',\n        'adsallcomplete',\n        'adsimpression',\n        'adsclick',\n    ],\n\n    // Selectors\n    // Change these to match your template if using custom HTML\n    selectors: {\n        editable: 'input, textarea, select, [contenteditable]',\n        container: '.plyr',\n        controls: {\n            container: null,\n            wrapper: '.plyr__controls',\n        },\n        labels: '[data-plyr]',\n        buttons: {\n            play: '[data-plyr=\"play\"]',\n            pause: '[data-plyr=\"pause\"]',\n            restart: '[data-plyr=\"restart\"]',\n            rewind: '[data-plyr=\"rewind\"]',\n            fastForward: '[data-plyr=\"fast-forward\"]',\n            mute: '[data-plyr=\"mute\"]',\n            captions: '[data-plyr=\"captions\"]',\n            fullscreen: '[data-plyr=\"fullscreen\"]',\n            pip: '[data-plyr=\"pip\"]',\n            airplay: '[data-plyr=\"airplay\"]',\n            googlecast: '[data-plyr=\"googlecast\"]',\n            settings: '[data-plyr=\"settings\"]',\n            loop: '[data-plyr=\"loop\"]',\n        },\n        inputs: {\n            seek: '[data-plyr=\"seek\"]',\n            volume: '[data-plyr=\"volume\"]',\n            speed: '[data-plyr=\"speed\"]',\n            language: '[data-plyr=\"language\"]',\n            quality: '[data-plyr=\"quality\"]',\n        },\n        display: {\n            currentTime: '.plyr__time--current',\n            duration: '.plyr__time--duration',\n            buffer: '.plyr__progress__buffer',\n            loop: '.plyr__progress__loop', // Used later\n            volume: '.plyr__volume--display',\n        },\n        progress: '.plyr__progress',\n        captions: '.plyr__captions',\n        caption: '.plyr__caption',\n        googlecast: '.plyr__googlecast',\n        menu: {\n            quality: '.js-plyr__menu__list--quality',\n        },\n    },\n\n    // Class hooks added to the player in different states\n    classNames: {\n        type: 'plyr--{0}',\n        provider: 'plyr--{0}',\n        video: 'plyr__video-wrapper',\n        embed: 'plyr__video-embed',\n        embedContainer: 'plyr__video-embed__container',\n        poster: 'plyr__poster',\n        posterEnabled: 'plyr__poster-enabled',\n        ads: 'plyr__ads',\n        control: 'plyr__control',\n        controlPressed: 'plyr__control--pressed',\n        playing: 'plyr--playing',\n        paused: 'plyr--paused',\n        stopped: 'plyr--stopped',\n        loading: 'plyr--loading',\n        hover: 'plyr--hover',\n        tooltip: 'plyr__tooltip',\n        cues: 'plyr__cues',\n        hidden: 'plyr__sr-only',\n        hideControls: 'plyr--hide-controls',\n        isIos: 'plyr--is-ios',\n        isTouch: 'plyr--is-touch',\n        uiSupported: 'plyr--full-ui',\n        noTransition: 'plyr--no-transition',\n        menu: {\n            value: 'plyr__menu__value',\n            badge: 'plyr__badge',\n            open: 'plyr--menu-open',\n        },\n        captions: {\n            enabled: 'plyr--captions-enabled',\n            active: 'plyr--captions-active',\n        },\n        fullscreen: {\n            enabled: 'plyr--fullscreen-enabled',\n            fallback: 'plyr--fullscreen-fallback',\n        },\n        pip: {\n            supported: 'plyr--pip-supported',\n            active: 'plyr--pip-active',\n        },\n        airplay: {\n            supported: 'plyr--airplay-supported',\n            active: 'plyr--airplay-active',\n        },\n        tabFocus: 'plyr__tab-focus',\n        googlecast: {\n            enabled: 'plyr--googlecast-enabled',\n            active: 'plyr--googlecast-active',\n        },\n    },\n\n    // Embed attributes\n    attributes: {\n        embed: {\n            provider: 'data-plyr-provider',\n            id: 'data-plyr-embed-id',\n        },\n    },\n\n    // API keys\n    keys: {\n        google: null,\n    },\n\n    // Advertisements plugin\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n    ads: {\n        enabled: false,\n        publisherId: '',\n    },\n};\n\nexport default defaults;\n","// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n    html5: 'html5',\n    youtube: 'youtube',\n    vimeo: 'vimeo',\n};\n\nexport const types = {\n    audio: 'audio',\n    video: 'video',\n};\n\n/**\n * Get provider by URL\n * @param {string} url\n */\nexport function getProviderByUrl(url) {\n    // YouTube\n    if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n        return providers.youtube;\n    }\n\n    // Vimeo\n    if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n        return providers.vimeo;\n    }\n\n    return null;\n}\n\nexport default { providers, types };\n","// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n    constructor(enabled = false) {\n        this.enabled = window.console && enabled;\n\n        if (this.enabled) {\n            this.log('Debugging enabled');\n        }\n    }\n\n    get log() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n    get warn() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n    get error() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n}\n","// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// ==========================================================================\n\nimport browser from './utils/browser';\nimport { hasClass, toggleClass, trapFocus } from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nfunction onChange() {\n    if (!this.enabled) {\n        return;\n    }\n\n    // Update toggle button\n    const button = this.player.elements.buttons.fullscreen;\n    if (is.element(button)) {\n        button.pressed = this.active;\n    }\n\n    // Trigger an event\n    triggerEvent.call(this.player, this.target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n\n    // Trap focus in container\n    if (!browser.isIos) {\n        trapFocus.call(this.player, this.target, this.active);\n    }\n}\n\nfunction toggleFallback(toggle = false) {\n    // Store or restore scroll position\n    if (toggle) {\n        this.scrollPosition = {\n            x: window.scrollX || 0,\n            y: window.scrollY || 0,\n        };\n    } else {\n        window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n\n    // Toggle button and fire events\n    onChange.call(this);\n}\n\nclass Fullscreen {\n    constructor(player) {\n        // Keep reference to parent\n        this.player = player;\n\n        // Get prefix\n        this.prefix = Fullscreen.prefix;\n        this.property = Fullscreen.property;\n\n        // Scroll position\n        this.scrollPosition = { x: 0, y: 0 };\n\n        // Register event listeners\n        // Handle event (incase user presses escape etc)\n        on.call(\n            this.player,\n            document,\n            this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`,\n            () => {\n                // TODO: Filter for target??\n                onChange.call(this);\n            },\n        );\n\n        // Fullscreen toggle on double click\n        on.call(this.player, this.player.elements.container, 'dblclick', event => {\n            // Ignore double click in controls\n            if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n                return;\n            }\n\n            this.toggle();\n        });\n\n        // Update the UI\n        this.update();\n    }\n\n    // Determine if native supported\n    static get native() {\n        return !!(\n            document.fullscreenEnabled ||\n            document.webkitFullscreenEnabled ||\n            document.mozFullScreenEnabled ||\n            document.msFullscreenEnabled\n        );\n    }\n\n    // Get the prefix for handlers\n    static get prefix() {\n        // No prefix\n        if (is.function(document.exitFullscreen)) {\n            return '';\n        }\n\n        // Check for fullscreen support by vendor prefix\n        let value = '';\n        const prefixes = ['webkit', 'moz', 'ms'];\n\n        prefixes.some(pre => {\n            if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\n                value = pre;\n                return true;\n            }\n\n            return false;\n        });\n\n        return value;\n    }\n\n    static get property() {\n        return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n\n    // Determine if fullscreen is enabled\n    get enabled() {\n        return (\n            (Fullscreen.native || this.player.config.fullscreen.fallback) &&\n            this.player.config.fullscreen.enabled &&\n            this.player.supported.ui &&\n            this.player.isVideo\n        );\n    }\n\n    // Get active state\n    get active() {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Fallback using classname\n        if (!Fullscreen.native) {\n            return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n        }\n\n        const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.property}Element`];\n\n        return element === this.target;\n    }\n\n    // Get target element\n    get target() {\n        return browser.isIos && this.player.config.fullscreen.iosNative\n            ? this.player.media\n            : this.player.elements.container;\n    }\n\n    // Update UI\n    update() {\n        if (this.enabled) {\n            this.player.debug.log(`${Fullscreen.native ? 'Native' : 'Fallback'} fullscreen enabled`);\n        } else {\n            this.player.debug.log('Fullscreen not supported and fallback disabled');\n        }\n\n        // Add styling hook to show button\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n    }\n\n    // Make an element fullscreen\n    enter() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen doesn't need the request step\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            if (this.player.playing) {\n                this.target.webkitEnterFullscreen();\n            }\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, true);\n        } else if (!this.prefix) {\n            this.target.requestFullscreen();\n        } else if (!is.empty(this.prefix)) {\n            this.target[`${this.prefix}Request${this.property}`]();\n        }\n    }\n\n    // Bail from fullscreen\n    exit() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitExitFullscreen();\n            this.player.play();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, false);\n        } else if (!this.prefix) {\n            (document.cancelFullScreen || document.exitFullscreen).call(document);\n        } else if (!is.empty(this.prefix)) {\n            const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n            document[`${this.prefix}${action}${this.property}`]();\n        }\n    }\n\n    // Toggle state\n    toggle() {\n        if (!this.active) {\n            this.enter();\n        } else {\n            this.exit();\n        }\n    }\n}\n\nexport default Fullscreen;\n","// ==========================================================================\n// Load image avoiding xhr/fetch CORS issues\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n// By default it checks if it is at least 1px, but you can add a second argument to change this\n// ==========================================================================\n\nexport default function loadImage(src, minWidth = 1) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n\n        const handler = () => {\n            delete image.onload;\n            delete image.onerror;\n            (image.naturalWidth >= minWidth ? resolve : reject)(image);\n        };\n\n        Object.assign(image, { onload: handler, onerror: handler, src });\n    });\n}\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isCss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(path)) {\n    isCss = true;\n\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped; //.replace(/^css!/, '');  // remove \"css!\" prefix\n  } else if (/(^img!|\\.(png|gif|jpg|svg)$)/.test(path)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // Note: The following code isolates IE using `hideFocus` and treats empty\n    // stylesheets as failures to get around lack of onerror support\n    if (isCss && 'hideFocus' in e) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText`\n        result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    }\n\n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function)} [arg1] - The bundleId or success callback\n * @param {Function} [arg2] - The success or error callback\n * @param {Function} [arg3] - The error callback\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  // load scripts\n  loadFiles(paths, function (pathsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, pathsNotFound);\n\n    // publish bundle load event\n    publish(bundleId, pathsNotFound);\n  }, args);\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\n// Load an external script\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nexport default function loadScript(url) {\n    return new Promise((resolve, reject) => {\n        loadjs(url, {\n            success: resolve,\n            error: reject,\n        });\n    });\n}\n","import is from '../utils/is';\nimport { getAttributesFromSelector, insertAfter, toggleClass, createElement } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport loadScript from '../utils/loadScript';\nimport { extend } from '../utils/objects';\nimport Console from './../console';\n\nconst googleCast = {\n    setup(config) {\n        if (!window.chrome) { // TODO: Figure out if this is the right check\n            // We're not on Chrome. Bail since google-cast does not work\n            // on other browsers\n            return;\n        }\n        googleCast.defaults = {};\n        googleCast.config = {};\n\n        googleCast.events = {\n            'ready': googleCast.onReady,\n            'play': googleCast.onPlay,\n            'pause': googleCast.onPause,\n            'seeked': googleCast.onSeek,\n            'volumechange': googleCast.onVolumeChange,\n            'qualityrequested': googleCast.onQualityChange,\n        };\n\n        googleCast.debug = new Console(true);\n        // TODO: Get cast logs under a separate namespace?\n\n        // Inject the container\n        if (!is.element(this.elements.googlecast)) {\n            this.elements.googlecast = createElement(\n                'div',\n                getAttributesFromSelector(this.config.selectors.googlecast)\n            );\n            insertAfter(this.elements.googlecast, this.elements.wrapper);\n        }\n        // Set the class hook\n        toggleClass(this.elements.container, this.config.classNames.googlecast.enabled, true);\n\n        if (!window.chrome.cast) {\n            loadScript(this.config.urls.googleCast.api).then(() => {\n                // FIXME: There __has__ to be a better way to do this\n                // window.chrome.cast isn't immediately available when this function runs\n                const interval = setInterval(() => {\n                    if (window.chrome.cast.isAvailable) {\n                        clearInterval(interval);\n                        googleCast.defaults = {\n                            options: {\n                                receiverApplicationId: window.chrome.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID,\n                                autoJoinPolicy: window.chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED,\n                            },\n                        };\n                        const opts = extend({}, googleCast.defaults, config);\n                        googleCast.initializeCastApi(opts);\n                    }\n                }, 100);\n            });\n        }\n    },\n\n    initializeCastApi(config) {\n        const { framework } = window.cast;\n        const { CastContext } = framework;\n        CastContext.getInstance().setOptions(config.options);\n\n        // Set up event handlers\n        CastContext\n            .getInstance()\n            .addEventListener(\n                framework.CastContextEventType.CAST_STATE_CHANGED,\n                googleCast.castStateListener\n            );\n        CastContext\n            .getInstance()\n            .addEventListener(\n                framework.CastContextEventType.SESSION_STATE_CHANGED,\n                googleCast.sessionStateListener\n            );\n        googleCast.debug.log('Initialized google cast');\n    },\n\n    getCurrentSession() {\n        return window.cast.framework.CastContext.getInstance().getCurrentSession();\n    },\n\n    getCurrentPlyr() {\n        return googleCast.currentPlyr;\n    },\n\n    onPlay() {\n        const plyr = googleCast.getCurrentPlyr();\n        googleCast.debug.log('Asking remote player to play');\n        // Seek before playing?\n        // googleCast.onSeek();\n        plyr.remotePlayerController.playOrPause();\n    },\n    onPause() {\n        const plyr = googleCast.getCurrentPlyr();\n        googleCast.debug.log('Asking remote player to pause');\n        plyr.remotePlayerController.playOrPause();\n        // Seek after pause\n        googleCast.onSeek();\n    },\n    onSeek() {\n        const plyr = googleCast.getCurrentPlyr();\n        const timestamp = plyr.currentTime;\n        plyr.remotePlayer.currentTime = timestamp;\n        plyr.remotePlayerController.seek();\n        googleCast.debug.log(`Asking remote player to seek to ${timestamp}`);\n    },\n    onReady() {\n        googleCast.debug.log('Running googleCast.onReady()');\n        const plyr = googleCast.getCurrentPlyr();\n        googleCast.loadMedia(plyr);\n    },\n    onVolumeChange() {\n        const plyr = googleCast.getCurrentPlyr();\n        // We need to specially handle the case where plyr is muted\n        let { volume } = plyr;\n        if (plyr.muted) {\n            volume = 0;\n        }\n        plyr.remotePlayer.volumeLevel = volume;\n        plyr.remotePlayerController.setVolumeLevel();\n    },\n    onQualityChange() {\n        const plyr = googleCast.getCurrentPlyr();\n        googleCast.loadMedia(plyr);\n    },\n    loadMedia(plyr) {\n        googleCast.debug.log('load media called');\n        const session = googleCast.getCurrentSession();\n        if (!session) {\n            return;\n        }\n\n        // TODO: We need to be able to override the defaults\n        const defaults = {\n            mediaInfo: {\n                source: plyr.source,\n                type: 'video/mp4',\n            },\n            metadata: {\n                metadataType: window.chrome.cast.media.MetadataType.GENERIC,\n                title: plyr.config.title || plyr.source,\n                images: [{\n                    url: plyr.poster,\n                }],\n            },\n            loadRequest: {\n                autoplay: plyr.playing,\n                currentTime: plyr.currentTime,\n            },\n        };\n        const options = extend({}, defaults);\n\n        const mediaInfo = new window.chrome.cast.media.MediaInfo(options.mediaInfo.source, options.mediaInfo.type);\n        mediaInfo.metadata = new window.chrome.cast.media.GenericMediaMetadata();\n        Object.assign(mediaInfo.metadata, options.metadata);\n\n        const loadRequest = new window.chrome.cast.media.LoadRequest(mediaInfo);\n        loadRequest.autoplay = options.loadRequest.autoplay;\n        loadRequest.currentTime = options.loadRequest.currentTime;\n        session.loadMedia(loadRequest).then(\n            () => {\n                googleCast.debug.log('Successfully loaded media');\n                googleCast.bindPlyr(plyr);\n            },\n            errorCode => {\n                googleCast.debug.log(`Remote media load error: ${googleCast.getErrorMessage(errorCode)}`);\n            }\n        );\n    },\n    setCurrentPlyr(plyr) {\n        googleCast.currentPlyr = plyr;\n    },\n    bindPlyr(plyr, options) {\n        if (googleCast.currentPlyr !== plyr) {\n            googleCast.debug.warn('Warning! Current plyr !==  plyr in bindPlyr()');\n            googleCast.currentPlyr = plyr;\n        }\n        googleCast.currentPlyrOptions = options;\n\n        // TODO: Figure out if we should do plyr.remotePlayer = plyr.remotePlayer || new window.cast.framework.RemotePlayer()\n        plyr.remotePlayer = new window.cast.framework.RemotePlayer();\n        // TODO: Figure out if we should do plyr.remotePlayerController = plyr.remotePlayerController || new window.cast.framework.RemotePlayerController(plyr.remotePlayer);\n        plyr.remotePlayerController = new window.cast.framework.RemotePlayerController(plyr.remotePlayer);\n\n        // Iterate over events and add all listeners\n        Object.keys(googleCast.events).forEach((evt) => {\n            const fn = googleCast.events[evt];\n            plyr.on(evt, fn);\n        });\n        googleCast.debug.log('Plyr bound');\n    },\n\n    unbindPlyr(plyr) {\n        const { currentPlyr } = googleCast;\n        if (currentPlyr === plyr) {\n            Object.keys(googleCast.events).forEach((evt) => {\n                const fn = googleCast.events[evt];\n                plyr.off(evt, fn);\n            });\n        }\n        googleCast.currentPlyr = undefined;\n        googleCast.currentPlyrOptions = undefined;\n    },\n\n    getErrorMessage(error) {\n        const { chrome } = window;\n        switch (error.code) {\n            case chrome.cast.ErrorCode.API_NOT_INITIALIZED:\n                return `The API is not initialized.${error.description ? ` :${error.description}` : ''}`;\n            case chrome.cast.ErrorCode.CANCEL:\n                return `The operation was canceled by the user${error.description ? ` :${error.description}` : ''}`;\n            case chrome.cast.ErrorCode.CHANNEL_ERROR:\n                return `A channel to the receiver is not available.${error.description\n                    ? ` :${error.description}`\n                    : ''}`;\n            case chrome.cast.ErrorCode.EXTENSION_MISSING:\n                return `The Cast extension is not available.${error.description ? ` :${error.description}` : ''}`;\n            case chrome.cast.ErrorCode.INVALID_PARAMETER:\n                return `The parameters to the operation were not valid.${error.description\n                    ? ` :${error.description}`\n                    : ''}`;\n            case chrome.cast.ErrorCode.RECEIVER_UNAVAILABLE:\n                return `No receiver was compatible with the session request.${error.description\n                    ? ` :${error.description}`\n                    : ''}`;\n            case chrome.cast.ErrorCode.SESSION_ERROR:\n                return `A session could not be created, or a session was invalid.${error.description\n                    ? ` :${error.description}`\n                    : ''}`;\n            case chrome.cast.ErrorCode.TIMEOUT:\n                return `The operation timed out.${error.description ? ` :${error.description}` : ''}`;\n            default:\n                return `Unknown error: ${JSON.stringify(error)}`;\n        }\n    },\n\n    castStateListener(data) {\n        googleCast.debug.log(`Cast State Changed: ${JSON.stringify(data)}`);\n        const plyr = googleCast.getCurrentPlyr();\n        const cs = window.cast.framework.CastState;\n        let castEvent;\n        switch (data.castState) {\n            case cs.NO_DEVICES_AVAILABLE:\n            case cs.NOT_CONNECTED:\n                googleCast.debug.log('NOT CONNECTED');\n                castEvent = 'castdisabled';\n                break;\n            case cs.CONNECTING:\n                break;\n            case cs.CONNECTED:\n                castEvent = 'castenabled';\n                break;\n            default:\n                // googleCast.debug.log(`Unknown cast state=${JSON.stringify(data.castState)}`);\n                break;\n        }\n        if (plyr && castEvent) {\n            const castActive = castEvent === 'castenabled';\n            // Add class hook\n            toggleClass(plyr.elements.container, plyr.config.classNames.googlecast.active, castActive);\n            triggerEvent.call(plyr, plyr.elements.container, castEvent, true);\n        }\n    },\n\n    sessionStateListener(data) {\n        const plyr = googleCast.getCurrentPlyr();\n        if (!plyr) {\n            return;\n        }\n        // console.log(\"Session State Changed: \" + JSON.stringify(data));\n        const ss = window.cast.framework.SessionState;\n\n        switch (data.sessionState) {\n            case ss.NO_SESSION:\n                break;\n            case ss.SESSION_STARTING:\n                break;\n            case ss.SESSION_STARTED:\n            case ss.SESSION_RESUMED:\n                // run on ready\n                googleCast.onReady();\n                break;\n            case ss.SESSION_START_FAILED:\n            case ss.SESSION_ENDED:\n                break;\n            case ss.SESSION_ENDING:\n                break;\n            default:\n                // plyr.log(`Unknown session state=${JSON.stringify(data.sessionState)}`);\n                break;\n        }\n        googleCast.debug.log(`sessionStateListener: state=${data.sessionState}`);\n    },\n\n    requestSession(plyr) {\n        debugger\n        // Check if a session already exists, if it does, just use it\n        const session = googleCast.getCurrentSession();\n\n        let wasPlyrAlreadyBound = true;\n        const existingPlyr = googleCast.getCurrentPlyr();\n        if (existingPlyr !== undefined && existingPlyr !== plyr) {\n            googleCast.unbindPlyr(existingPlyr);\n        }\n        if (existingPlyr !== plyr) {\n            googleCast.setCurrentPlyr(plyr);\n            wasPlyrAlreadyBound = false;\n        }\n\n        function onRequestSuccess(e) {\n            // This only triggers when a new session is created.\n            // It does not trigger on successfully showing the drop down and\n            // requesting stop session.\n        }\n\n        function onError(e) {\n            googleCast.unbindPlyr(googleCast.getCurrentPlyr());\n        }\n\n        // We need to show the cast drop down if:\n        // 1) There was no session\n        // 2) There was a session and the current plyr was already bound\n        //\n        // (2) is needed since we need a way to disable cast via the current\n        // plyr instance\n        if (session === null || wasPlyrAlreadyBound) {\n            const promise = window.cast.framework.CastContext.getInstance().requestSession();\n            promise.then(onRequestSuccess, onError);\n        } else {\n            // We have a session and we're just looking to bind plyr which we've\n            // done already. Just load media and change icon based on session state.\n            const cs = window.cast.framework.CastContext.getInstance().getCastState();\n            const castStateEventData = new window.cast.framework.CastStateEventData(cs);\n            googleCast.castStateListener(castStateEventData);\n\n            const ss = window.cast.framework.CastContext.getInstance().getSessionState();\n            const sessionStateEventData = new window.cast.framework.SessionStateEventData(session, ss, 0);\n            googleCast.sessionStateListener(sessionStateEventData);\n        }\n    },\n\n    // Display cast container and button (for initialization)\n    show() {\n        // If there's no cast toggle, bail\n        if (!this.elements.buttons.googlecast) {\n            return;\n        }\n\n        // Try to load the value from storage\n        let active = this.storage.googlecast;\n\n        // Otherwise fall back to the default config\n        if (!is.boolean(active)) {\n            ({ active } = this.googlecast);\n        } else {\n            this.googlecast.active = active;\n        }\n\n        if (active) {\n            toggleClass(this.elements.container, this.config.classNames.googlecast.active, true);\n            toggleState(this.elements.buttons.googlecast, true);\n        }\n    },\n};\nexport default googleCast;\n","// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport captions from './captions';\nimport controls from './controls';\nimport i18n from './i18n';\nimport support from './support';\nimport browser from './utils/browser';\nimport { getElement, toggleClass } from './utils/elements';\nimport { ready, triggerEvent } from './utils/events';\nimport is from './utils/is';\nimport loadImage from './utils/loadImage';\nimport googleCast from './plugins/google-cast';\n\nconst ui = {\n    addStyleHook() {\n        toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n        toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n    },\n\n    // Toggle native HTML5 media controls\n    toggleNativeControls(toggle = false) {\n        if (toggle && this.isHTML5) {\n            this.media.setAttribute('controls', '');\n        } else {\n            this.media.removeAttribute('controls');\n        }\n    },\n\n    // Setup the UI\n    build() {\n        // Re-attach media element listeners\n        // TODO: Use event bubbling?\n        this.listeners.media();\n\n        // Don't setup interface if no support\n        if (!this.supported.ui) {\n            this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n            // Restore native controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Bail\n            return;\n        }\n\n        // Inject custom controls if not present\n        if (!is.element(this.elements.controls)) {\n            // Inject custom controls\n            controls.inject.call(this);\n\n            // Re-attach control listeners\n            this.listeners.controls();\n        }\n\n        // Remove native controls\n        ui.toggleNativeControls.call(this);\n\n        // Setup captions for HTML5\n        if (this.isHTML5) {\n            captions.setup.call(this);\n        }\n\n        // Google cast\n        googleCast.setup.call(this);\n\n        // Reset volume\n        this.volume = null;\n\n        // Reset mute state\n        this.muted = null;\n\n        // Reset speed\n        this.speed = null;\n\n        // Reset loop state\n        this.loop = null;\n\n        // Reset quality setting\n        this.quality = null;\n\n        // Reset volume display\n        controls.updateVolume.call(this);\n\n        // Reset time display\n        controls.timeUpdate.call(this);\n\n        // Update the UI\n        ui.checkPlaying.call(this);\n\n        // Check for picture-in-picture support\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.pip.supported,\n            support.pip && this.isHTML5 && this.isVideo,\n        );\n\n        // Check for airplay support\n        toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n        // Add iOS class\n        toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\n\n        // Add touch class\n        toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\n\n        // Ready for API calls\n        this.ready = true;\n\n        // Ready event at end of execution stack\n        setTimeout(() => {\n            triggerEvent.call(this, this.media, 'ready');\n        }, 0);\n\n        // Set the title\n        ui.setTitle.call(this);\n\n        // Assure the poster image is set, if the property was added before the element was created\n        if (this.poster) {\n            ui.setPoster.call(this, this.poster, false).catch(() => {});\n        }\n\n        // Manually set the duration if user has overridden it.\n        // The event listeners for it doesn't get called if preload is disabled (#701)\n        if (this.config.duration) {\n            controls.durationUpdate.call(this);\n        }\n    },\n\n    // Setup aria attribute for play and iframe title\n    setTitle() {\n        // Find the current text\n        let label = i18n.get('play', this.config);\n\n        // If there's a media title set, use that for the label\n        if (is.string(this.config.title) && !is.empty(this.config.title)) {\n            label += `, ${this.config.title}`;\n        }\n\n        // If there's a play button, set label\n        Array.from(this.elements.buttons.play || []).forEach(button => {\n            button.setAttribute('aria-label', label);\n        });\n\n        // Set iframe title\n        // https://github.com/sampotts/plyr/issues/124\n        if (this.isEmbed) {\n            const iframe = getElement.call(this, 'iframe');\n\n            if (!is.element(iframe)) {\n                return;\n            }\n\n            // Default to media type\n            const title = !is.empty(this.config.title) ? this.config.title : 'video';\n            const format = i18n.get('frameTitle', this.config);\n\n            iframe.setAttribute('title', format.replace('{title}', title));\n        }\n    },\n\n    // Toggle poster\n    togglePoster(enable) {\n        toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\n    },\n\n    // Set the poster image (async)\n    // Used internally for the poster setter, with the passive option forced to false\n    setPoster(poster, passive = true) {\n        // Don't override if call is passive\n        if (passive && this.poster) {\n            return Promise.reject(new Error('Poster already set'));\n        }\n\n        // Set property synchronously to respect the call order\n        this.media.setAttribute('poster', poster);\n\n        // Wait until ui is ready\n        return (\n            ready\n                .call(this)\n                // Load image\n                .then(() => loadImage(poster))\n                .catch(err => {\n                    // Hide poster on error unless it's been set by another call\n                    if (poster === this.poster) {\n                        ui.togglePoster.call(this, false);\n                    }\n                    // Rethrow\n                    throw err;\n                })\n                .then(() => {\n                    // Prevent race conditions\n                    if (poster !== this.poster) {\n                        throw new Error('setPoster cancelled by later call to setPoster');\n                    }\n                })\n                .then(() => {\n                    Object.assign(this.elements.poster.style, {\n                        backgroundImage: `url('${poster}')`,\n                        // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n                        backgroundSize: '',\n                    });\n                    ui.togglePoster.call(this, true);\n                    return poster;\n                })\n        );\n    },\n\n    // Check playing state\n    checkPlaying(event) {\n        // Class hooks\n        toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n        toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\n        toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\n\n        // Set state\n        Array.from(this.elements.buttons.play || []).forEach(target => {\n            target.pressed = this.playing;\n        });\n\n        // Only update controls on non timeupdate events\n        if (is.event(event) && event.type === 'timeupdate') {\n            return;\n        }\n\n        // Toggle controls\n        ui.toggleControls.call(this);\n    },\n\n    // Check if media is loading\n    checkLoading(event) {\n        this.loading = ['stalled', 'waiting'].includes(event.type);\n\n        // Clear timer\n        clearTimeout(this.timers.loading);\n\n        // Timer to prevent flicker when seeking\n        this.timers.loading = setTimeout(() => {\n            // Update progress bar loading class state\n            toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n            // Update controls visibility\n            ui.toggleControls.call(this);\n        }, this.loading ? 250 : 0);\n    },\n\n    // Toggle controls based on state and `force` argument\n    toggleControls(force) {\n        const { controls } = this.elements;\n\n        if (controls && this.config.hideControls) {\n            // Show controls if force, loading, paused, or button interaction, otherwise hide\n            this.toggleControls(Boolean(force || this.loading || this.paused || controls.pressed || controls.hover));\n        }\n    },\n};\n\nexport default ui;\n","// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport controls from './controls';\nimport ui from './ui';\nimport browser from './utils/browser';\nimport { getElement, getElements, getFocusElement, matches, toggleClass, toggleHidden } from './utils/elements';\nimport { on, once, toggleListener, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nclass Listeners {\n    constructor(player) {\n        this.player = player;\n        this.lastKey = null;\n\n        this.handleKey = this.handleKey.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.firstTouch = this.firstTouch.bind(this);\n    }\n\n    // Handle key presses\n    handleKey(event) {\n        const code = event.keyCode ? event.keyCode : event.which;\n        const pressed = event.type === 'keydown';\n        const repeat = pressed && code === this.lastKey;\n\n        // Bail if a modifier key is set\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n            return;\n        }\n\n        // If the event is bubbled from the media element\n        // Firefox doesn't get the keycode for whatever reason\n        if (!is.number(code)) {\n            return;\n        }\n\n        // Seek by the number keys\n        const seekByKey = () => {\n            // Divide the max duration into 10th's and times by the number value\n            this.player.currentTime = this.player.duration / 10 * (code - 48);\n        };\n\n        // Handle the key on keydown\n        // Reset on keyup\n        if (pressed) {\n            // Which keycodes should we prevent default\n            const preventDefault = [32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79];\n\n            // Check focused element\n            // and if the focused element is not editable (e.g. text input)\n            // and any that accept key input http://webaim.org/techniques/keyboard/\n            const focused = getFocusElement();\n            if (\n                is.element(focused) &&\n                (focused !== this.player.elements.inputs.seek &&\n                    matches(focused, this.player.config.selectors.editable))\n            ) {\n                return;\n            }\n\n            // If the code is found prevent default (e.g. prevent scrolling for arrows)\n            if (preventDefault.includes(code)) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            switch (code) {\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    // 0-9\n                    if (!repeat) {\n                        seekByKey();\n                    }\n                    break;\n\n                case 32:\n                case 75:\n                    // Space and K key\n                    if (!repeat) {\n                        this.player.togglePlay();\n                    }\n                    break;\n\n                case 38:\n                    // Arrow up\n                    this.player.increaseVolume(0.1);\n                    break;\n\n                case 40:\n                    // Arrow down\n                    this.player.decreaseVolume(0.1);\n                    break;\n\n                case 77:\n                    // M key\n                    if (!repeat) {\n                        this.player.muted = !this.player.muted;\n                    }\n                    break;\n\n                case 39:\n                    // Arrow forward\n                    this.player.forward();\n                    break;\n\n                case 37:\n                    // Arrow back\n                    this.player.rewind();\n                    break;\n\n                case 70:\n                    // F key\n                    this.player.fullscreen.toggle();\n                    break;\n\n                case 67:\n                    // C key\n                    if (!repeat) {\n                        this.player.toggleCaptions();\n                    }\n                    break;\n\n                case 76:\n                    // L key\n                    this.player.loop = !this.player.loop;\n                    break;\n\n                /* case 73:\n                    this.setLoop('start');\n                    break;\n\n                case 76:\n                    this.setLoop();\n                    break;\n\n                case 79:\n                    this.setLoop('end');\n                    break; */\n\n                default:\n                    break;\n            }\n\n            // Escape is handle natively when in full screen\n            // So we only need to worry about non native\n            if (!this.player.fullscreen.enabled && this.player.fullscreen.active && code === 27) {\n                this.player.fullscreen.toggle();\n            }\n\n            // Store last code for next cycle\n            this.lastKey = code;\n        } else {\n            this.lastKey = null;\n        }\n    }\n\n    // Toggle menu\n    toggleMenu(event) {\n        controls.toggleMenu.call(this.player, event);\n    }\n\n    // Device is touch enabled\n    firstTouch() {\n        this.player.touch = true;\n\n        // Add touch class\n        toggleClass(this.player.elements.container, this.player.config.classNames.isTouch, true);\n    }\n\n    // Global window & document listeners\n    global(toggle = true) {\n        // Keyboard shortcuts\n        if (this.player.config.keyboard.global) {\n            toggleListener.call(this.player, window, 'keydown keyup', this.handleKey, toggle, false);\n        }\n\n        // Click anywhere closes menu\n        toggleListener.call(this.player, document.body, 'click', this.toggleMenu, toggle);\n\n        // Detect touch by events\n        once.call(this.player, document.body, 'touchstart', this.firstTouch);\n    }\n\n    // Container listeners\n    container() {\n        // Keyboard shortcuts\n        if (!this.player.config.keyboard.global && this.player.config.keyboard.focused) {\n            on.call(this.player, this.player.elements.container, 'keydown keyup', this.handleKey, false);\n        }\n\n        // Detect tab focus\n        // Remove class on blur/focusout\n        on.call(this.player, this.player.elements.container, 'focusout', event => {\n            toggleClass(event.target, this.player.config.classNames.tabFocus, false);\n        });\n        // Add classname to tabbed elements\n        on.call(this.player, this.player.elements.container, 'keydown', event => {\n            if (event.keyCode !== 9) {\n                return;\n            }\n\n            // Delay the adding of classname until the focus has changed\n            // This event fires before the focusin event\n            setTimeout(() => {\n                toggleClass(getFocusElement(), this.player.config.classNames.tabFocus, true);\n            }, 0);\n        });\n\n        // Toggle controls on mouse events and entering fullscreen\n        on.call(\n            this.player,\n            this.player.elements.container,\n            'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen',\n            event => {\n                const { controls } = this.player.elements;\n\n                // Remove button states for fullscreen\n                if (event.type === 'enterfullscreen') {\n                    controls.pressed = false;\n                    controls.hover = false;\n                }\n\n                // Show, then hide after a timeout unless another control event occurs\n                const show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\n\n                let delay = 0;\n\n                if (show) {\n                    ui.toggleControls.call(this.player, true);\n                    // Use longer timeout for touch devices\n                    delay = this.player.touch ? 3000 : 2000;\n                }\n\n                // Clear timer\n                clearTimeout(this.player.timers.controls);\n                // Timer to prevent flicker when seeking\n                this.player.timers.controls = setTimeout(() => ui.toggleControls.call(this.player, false), delay);\n            },\n        );\n    }\n\n    // Listen for media events\n    media() {\n        // Time change on media\n        on.call(this.player, this.player.media, 'timeupdate seeking seeked', event =>\n            controls.timeUpdate.call(this.player, event),\n        );\n\n        // Display duration\n        on.call(this.player, this.player.media, 'durationchange loadeddata loadedmetadata', event =>\n            controls.durationUpdate.call(this.player, event),\n        );\n\n        // Check for audio tracks on load\n        // We can't use `loadedmetadata` as it doesn't seem to have audio tracks at that point\n        on.call(this.player, this.player.media, 'canplay', () => {\n            toggleHidden(this.player.elements.volume, !this.player.hasAudio);\n            toggleHidden(this.player.elements.buttons.mute, !this.player.hasAudio);\n        });\n\n        // Handle the media finishing\n        on.call(this.player, this.player.media, 'ended', () => {\n            // Show poster on end\n            if (this.player.isHTML5 && this.player.isVideo && this.player.config.resetOnEnd) {\n                // Restart\n                this.player.restart();\n            }\n        });\n\n        // Check for buffer progress\n        on.call(this.player, this.player.media, 'progress playing seeking seeked', event =>\n            controls.updateProgress.call(this.player, event),\n        );\n\n        // Handle volume changes\n        on.call(this.player, this.player.media, 'volumechange', event =>\n            controls.updateVolume.call(this.player, event),\n        );\n\n        // Handle play/pause\n        on.call(this.player, this.player.media, 'playing play pause ended emptied timeupdate', event =>\n            ui.checkPlaying.call(this.player, event),\n        );\n\n        // Loading state\n        on.call(this.player, this.player.media, 'waiting canplay seeked playing', event =>\n            ui.checkLoading.call(this.player, event),\n        );\n\n        // If autoplay, then load advertisement if required\n        // TODO: Show some sort of loading state while the ad manager loads else there's a delay before ad shows\n        on.call(this.player, this.player.media, 'playing', () => {\n            if (!this.player.ads) {\n                return;\n            }\n\n            // If ads are enabled, wait for them first\n            if (this.player.ads.enabled && !this.player.ads.initialized) {\n                // Wait for manager response\n                this.player.ads.managerPromise.then(() => this.player.ads.play()).catch(() => this.player.play());\n            }\n        });\n\n        // Click video\n        if (this.player.supported.ui && this.player.config.clickToPlay && !this.player.isAudio) {\n            // Re-fetch the wrapper\n            const wrapper = getElement.call(this.player, `.${this.player.config.classNames.video}`);\n\n            // Bail if there's no wrapper (this should never happen)\n            if (!is.element(wrapper)) {\n                return;\n            }\n\n            // On click play, pause ore restart\n            on.call(this.player, wrapper, 'click', () => {\n                // Touch devices will just show controls (if we're hiding controls)\n                if (this.player.config.hideControls && this.player.touch && !this.player.paused) {\n                    return;\n                }\n\n                if (this.player.paused) {\n                    this.player.play();\n                } else if (this.player.ended) {\n                    this.player.restart();\n                    this.player.play();\n                } else {\n                    this.player.pause();\n                }\n            });\n        }\n\n        // Disable right click\n        if (this.player.supported.ui && this.player.config.disableContextMenu) {\n            on.call(\n                this.player,\n                this.player.elements.wrapper,\n                'contextmenu',\n                event => {\n                    event.preventDefault();\n                },\n                false,\n            );\n        }\n\n        // Volume change\n        on.call(this.player, this.player.media, 'volumechange', () => {\n            // Save to storage\n            this.player.storage.set({ volume: this.player.volume, muted: this.player.muted });\n        });\n\n        // Speed change\n        on.call(this.player, this.player.media, 'ratechange', () => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'speed');\n\n            // Save to storage\n            this.player.storage.set({ speed: this.player.speed });\n        });\n\n        // Quality request\n        on.call(this.player, this.player.media, 'qualityrequested', event => {\n            // Save to storage\n            this.player.storage.set({ quality: event.detail.quality });\n        });\n\n        // Quality change\n        on.call(this.player, this.player.media, 'qualitychange', event => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'quality', null, event.detail.quality);\n        });\n\n        // Proxy events to container\n        // Bubble up key events for Edge\n        const proxyEvents = this.player.config.events.concat(['keyup', 'keydown']).join(' ');\n        on.call(this.player, this.player.media, proxyEvents, event => {\n            let { detail = {} } = event;\n\n            // Get error details from media\n            if (event.type === 'error') {\n                detail = this.player.media.error;\n            }\n\n            triggerEvent.call(this.player, this.player.elements.container, event.type, true, detail);\n        });\n    }\n\n    // Listen for control events\n    controls() {\n        // IE doesn't support input event, so we fallback to change\n        const inputEvent = browser.isIE ? 'change' : 'input';\n\n        // Run default and custom handlers\n        const proxy = (event, defaultHandler, customHandlerKey) => {\n            const customHandler = this.player.config.listeners[customHandlerKey];\n            const hasCustomHandler = is.function(customHandler);\n            let returned = true;\n\n            // Execute custom handler\n            if (hasCustomHandler) {\n                returned = customHandler.call(this.player, event);\n            }\n\n            // Only call default handler if not prevented in custom handler\n            if (returned && is.function(defaultHandler)) {\n                defaultHandler.call(this.player, event);\n            }\n        };\n\n        // Trigger custom and default handlers\n        const bind = (element, type, defaultHandler, customHandlerKey, passive = true) => {\n            const customHandler = this.player.config.listeners[customHandlerKey];\n            const hasCustomHandler = is.function(customHandler);\n\n            on.call(\n                this.player,\n                element,\n                type,\n                event => proxy(event, defaultHandler, customHandlerKey),\n                passive && !hasCustomHandler,\n            );\n        };\n\n        // Play/pause toggle\n        Array.from(this.player.elements.buttons.play).forEach(button => {\n            bind(button, 'click', this.player.togglePlay, 'play');\n        });\n\n        // Pause\n        bind(this.player.elements.buttons.restart, 'click', this.player.restart, 'restart');\n\n        // Rewind\n        bind(this.player.elements.buttons.rewind, 'click', this.player.rewind, 'rewind');\n\n        // Rewind\n        bind(this.player.elements.buttons.fastForward, 'click', this.player.forward, 'fastForward');\n\n        // Mute toggle\n        bind(\n            this.player.elements.buttons.mute,\n            'click',\n            () => {\n                this.player.muted = !this.player.muted;\n            },\n            'mute',\n        );\n\n        // Captions toggle\n        bind(this.player.elements.buttons.captions, 'click', () => this.player.toggleCaptions());\n\n        // Google cast\n        bind(this.player.elements.buttons.googlecast, 'click', this.player.googleCast, 'googlecast');\n\n        // Fullscreen toggle\n        bind(\n            this.player.elements.buttons.fullscreen,\n            'click',\n            () => {\n                this.player.fullscreen.toggle();\n            },\n            'fullscreen',\n        );\n\n        // Picture-in-Picture\n        bind(\n            this.player.elements.buttons.pip,\n            'click',\n            () => {\n                this.player.pip = 'toggle';\n            },\n            'pip',\n        );\n\n        // Airplay\n        bind(this.player.elements.buttons.airplay, 'click', this.player.airplay, 'airplay');\n\n        // Settings menu\n        bind(this.player.elements.buttons.settings, 'click', event => {\n            controls.toggleMenu.call(this.player, event);\n        });\n\n        // Settings menu\n        bind(this.player.elements.settings.form, 'click', event => {\n            event.stopPropagation();\n\n            // Go back to home tab on click\n            const showHomeTab = () => {\n                const id = `plyr-settings-${this.player.id}-home`;\n                controls.showTab.call(this.player, id);\n            };\n\n            // Settings menu items - use event delegation as items are added/removed\n            if (matches(event.target, this.player.config.selectors.inputs.language)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.currentTrack = Number(event.target.value);\n                        showHomeTab();\n                    },\n                    'language',\n                );\n            } else if (matches(event.target, this.player.config.selectors.inputs.quality)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.quality = event.target.value;\n                        showHomeTab();\n                    },\n                    'quality',\n                );\n            } else if (matches(event.target, this.player.config.selectors.inputs.speed)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.speed = parseFloat(event.target.value);\n                        showHomeTab();\n                    },\n                    'speed',\n                );\n            } else {\n                const tab = event.target;\n                controls.showTab.call(this.player, tab.getAttribute('aria-controls'));\n            }\n        });\n\n        // Set range input alternative \"value\", which matches the tooltip time (#954)\n        bind(this.player.elements.inputs.seek, 'mousedown mousemove', event => {\n            const clientRect = this.player.elements.progress.getBoundingClientRect();\n            const percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n            event.currentTarget.setAttribute('seek-value', percent);\n        });\n\n        // Pause while seeking\n        bind(this.player.elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', event => {\n            const seek = event.currentTarget;\n\n            const code = event.keyCode ? event.keyCode : event.which;\n            const eventType = event.type;\n\n            if ((eventType === 'keydown' || eventType === 'keyup') && (code !== 39 && code !== 37)) {\n                return;\n            }\n            // Was playing before?\n            const play = seek.hasAttribute('play-on-seeked');\n\n            // Done seeking\n            const done = ['mouseup', 'touchend', 'keyup'].includes(event.type);\n\n            // If we're done seeking and it was playing, resume playback\n            if (play && done) {\n                seek.removeAttribute('play-on-seeked');\n                this.player.play();\n            } else if (!done && this.player.playing) {\n                seek.setAttribute('play-on-seeked', '');\n                this.player.pause();\n            }\n        });\n\n        // Seek\n        bind(\n            this.player.elements.inputs.seek,\n            inputEvent,\n            event => {\n                const seek = event.currentTarget;\n\n                // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n                let seekTo = seek.getAttribute('seek-value');\n\n                if (is.empty(seekTo)) {\n                    seekTo = seek.value;\n                }\n\n                seek.removeAttribute('seek-value');\n\n                this.player.currentTime = seekTo / seek.max * this.player.duration;\n            },\n            'seek',\n        );\n\n        // Current time invert\n        // Only if one time element is used for both currentTime and duration\n        if (this.player.config.toggleInvert && !is.element(this.player.elements.display.duration)) {\n            bind(this.player.elements.display.currentTime, 'click', () => {\n                // Do nothing if we're at the start\n                if (this.player.currentTime === 0) {\n                    return;\n                }\n\n                this.player.config.invertTime = !this.player.config.invertTime;\n\n                controls.timeUpdate.call(this.player);\n            });\n        }\n\n        // Volume\n        bind(\n            this.player.elements.inputs.volume,\n            inputEvent,\n            event => {\n                this.player.volume = event.target.value;\n            },\n            'volume',\n        );\n\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\n        if (browser.isWebkit) {\n            Array.from(getElements.call(this.player, 'input[type=\"range\"]')).forEach(element => {\n                bind(element, 'input', event => controls.updateRangeFill.call(this.player, event.target));\n            });\n        }\n\n        // Seek tooltip\n        bind(this.player.elements.progress, 'mouseenter mouseleave mousemove', event =>\n            controls.updateSeekTooltip.call(this.player, event),\n        );\n\n        // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n        bind(this.player.elements.controls, 'mouseenter mouseleave', event => {\n            this.player.elements.controls.hover = !this.player.touch && event.type === 'mouseenter';\n        });\n\n        // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n        bind(this.player.elements.controls, 'mousedown mouseup touchstart touchend touchcancel', event => {\n            this.player.elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\n        });\n\n        // Focus in/out on controls\n        bind(this.player.elements.controls, 'focusin focusout', event => {\n            const { config, elements, timers } = this.player;\n\n            // Skip transition to prevent focus from scrolling the parent element\n            toggleClass(elements.controls, config.classNames.noTransition, event.type === 'focusin');\n\n            // Toggle\n            ui.toggleControls.call(this.player, event.type === 'focusin');\n\n            // If focusin, hide again after delay\n            if (event.type === 'focusin') {\n                // Restore transition\n                setTimeout(() => {\n                    toggleClass(elements.controls, config.classNames.noTransition, false);\n                }, 0);\n\n                // Delay a little more for keyboard users\n                const delay = this.touch ? 3000 : 4000;\n\n                // Clear timer\n                clearTimeout(timers.controls);\n                // Hide\n                timers.controls = setTimeout(() => ui.toggleControls.call(this.player, false), delay);\n            }\n        });\n\n        // Mouse wheel for volume\n        bind(\n            this.player.elements.inputs.volume,\n            'wheel',\n            event => {\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                const inverted = event.webkitDirectionInvertedFromDevice;\n\n                // Get delta from event. Invert if `inverted` is true\n                const [x, y] = [event.deltaX, -event.deltaY]\n                    .map(value => inverted ? -value : value);\n\n                // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\n                const direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y);\n\n                // Change the volume by 2%\n                this.player.increaseVolume(direction / 50);\n\n                // Don't break page scrolling at max and min\n                const { volume } = this.player.media;\n                if ((direction === 1 && volume < 1) || (direction === -1 && volume > 0)) {\n                    event.preventDefault();\n                }\n            },\n            'volume',\n            false,\n        );\n    }\n}\n\nexport default Listeners;\n","// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport captions from './../captions';\nimport controls from './../controls';\nimport ui from './../ui';\nimport { createElement, replaceElement, toggleClass } from './../utils/elements';\nimport { triggerEvent } from './../utils/events';\nimport fetch from './../utils/fetch';\nimport is from './../utils/is';\nimport loadScript from './../utils/loadScript';\nimport { format, stripHTML } from './../utils/strings';\nimport { buildUrlParams } from './../utils/urls';\n\n// Parse Vimeo ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    if (is.number(Number(url))) {\n        return url;\n    }\n\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Get aspect ratio for dimensions\nfunction getAspectRatio(width, height) {\n    const getRatio = (w, h) => (h === 0 ? w : getRatio(h, w % h));\n    const ratio = getRatio(width, height);\n    return `${width / ratio}:${height / ratio}`;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst vimeo = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set intial ratio\n        vimeo.setAspectRatio.call(this);\n\n        // Load the API if not already\n        if (!is.object(window.Vimeo)) {\n            loadScript(this.config.urls.vimeo.sdk)\n                .then(() => {\n                    vimeo.ready.call(this);\n                })\n                .catch(error => {\n                    this.debug.warn('Vimeo API failed to load', error);\n                });\n        } else {\n            vimeo.ready.call(this);\n        }\n    },\n\n    // Set aspect ratio\n    // For Vimeo we have an extra 300% height <div> to hide the standard controls and UI\n    setAspectRatio(input) {\n        const [x, y] = (is.string(input) ? input : this.config.ratio).split(':');\n        const padding = 100 / x * y;\n        this.elements.wrapper.style.paddingBottom = `${padding}%`;\n\n        if (this.supported.ui) {\n            const height = 240;\n            const offset = (height - padding) / (height / 50);\n\n            this.media.style.transform = `translateY(-${offset}%)`;\n        }\n    },\n\n    // API Ready\n    ready() {\n        const player = this;\n\n        // Get Vimeo params for the iframe\n        const options = {\n            loop: player.config.loop.active,\n            autoplay: player.autoplay,\n            // muted: player.muted,\n            byline: false,\n            portrait: false,\n            title: false,\n            speed: true,\n            transparent: 0,\n            gesture: 'media',\n            playsinline: !this.config.fullscreen.iosNative,\n        };\n        const params = buildUrlParams(options);\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(player.config.attributes.embed.id);\n        }\n\n        const id = parseId(source);\n\n        // Build an iframe\n        const iframe = createElement('iframe');\n        const src = format(player.config.urls.vimeo.iframe, id, params);\n        iframe.setAttribute('src', src);\n        iframe.setAttribute('allowfullscreen', '');\n        iframe.setAttribute('allowtransparency', '');\n        iframe.setAttribute('allow', 'autoplay');\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Inject the package\n        const wrapper = createElement('div', { poster, class: player.config.classNames.embedContainer });\n        wrapper.appendChild(iframe);\n        player.media = replaceElement(wrapper, player.media);\n\n        // Get poster image\n        fetch(format(player.config.urls.vimeo.api, id), 'json').then(response => {\n            if (is.empty(response)) {\n                return;\n            }\n\n            // Get the URL for thumbnail\n            const url = new URL(response[0].thumbnail_large);\n\n            // Get original image\n            url.pathname = `${url.pathname.split('_')[0]}.jpg`;\n\n            // Set and show poster\n            ui.setPoster.call(player, url.href).catch(() => {});\n        });\n\n        // Setup instance\n        // https://github.com/vimeo/player.js\n        player.embed = new window.Vimeo.Player(iframe, {\n            autopause: player.config.autopause,\n            muted: player.muted,\n        });\n\n        player.media.paused = true;\n        player.media.currentTime = 0;\n\n        // Disable native text track rendering\n        if (player.supported.ui) {\n            player.embed.disableTextTrack();\n        }\n\n        // Create a faux HTML5 API using the Vimeo API\n        player.media.play = () => {\n            assurePlaybackState.call(player, true);\n            return player.embed.play();\n        };\n\n        player.media.pause = () => {\n            assurePlaybackState.call(player, false);\n            return player.embed.pause();\n        };\n\n        player.media.stop = () => {\n            player.pause();\n            player.currentTime = 0;\n        };\n\n        // Seeking\n        let { currentTime } = player.media;\n        Object.defineProperty(player.media, 'currentTime', {\n            get() {\n                return currentTime;\n            },\n            set(time) {\n                // Vimeo will automatically play on seek if the video hasn't been played before\n\n                // Get current paused state and volume etc\n                const { embed, media, paused, volume } = player;\n                const restorePause = paused && !embed.hasPlayed;\n\n                // Set seeking state and trigger event\n                media.seeking = true;\n                triggerEvent.call(player, media, 'seeking');\n\n                // If paused, mute until seek is complete\n                Promise.resolve(restorePause && embed.setVolume(0))\n                    // Seek\n                    .then(() => embed.setCurrentTime(time))\n                    // Restore paused\n                    .then(() => restorePause && embed.pause())\n                    // Restore volume\n                    .then(() => restorePause && embed.setVolume(volume))\n                    .catch(() => {\n                        // Do nothing\n                    });\n            },\n        });\n\n        // Playback speed\n        let speed = player.config.speed.selected;\n        Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n                return speed;\n            },\n            set(input) {\n                player.embed\n                    .setPlaybackRate(input)\n                    .then(() => {\n                        speed = input;\n                        triggerEvent.call(player, player.media, 'ratechange');\n                    })\n                    .catch(error => {\n                        // Hide menu item (and menu if empty)\n                        if (error.name === 'Error') {\n                            controls.setSpeedMenu.call(player, []);\n                        }\n                    });\n            },\n        });\n\n        // Volume\n        let { volume } = player.config;\n        Object.defineProperty(player.media, 'volume', {\n            get() {\n                return volume;\n            },\n            set(input) {\n                player.embed.setVolume(input).then(() => {\n                    volume = input;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Muted\n        let { muted } = player.config;\n        Object.defineProperty(player.media, 'muted', {\n            get() {\n                return muted;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : false;\n\n                player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n                    muted = toggle;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Loop\n        let { loop } = player.config;\n        Object.defineProperty(player.media, 'loop', {\n            get() {\n                return loop;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : player.config.loop.active;\n\n                player.embed.setLoop(toggle).then(() => {\n                    loop = toggle;\n                });\n            },\n        });\n\n        // Source\n        let currentSrc;\n        player.embed\n            .getVideoUrl()\n            .then(value => {\n                currentSrc = value;\n            })\n            .catch(error => {\n                this.debug.warn(error);\n            });\n\n        Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n                return currentSrc;\n            },\n        });\n\n        // Ended\n        Object.defineProperty(player.media, 'ended', {\n            get() {\n                return player.currentTime === player.duration;\n            },\n        });\n\n        // Set aspect ratio based on video size\n        Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then(dimensions => {\n            const ratio = getAspectRatio(dimensions[0], dimensions[1]);\n            vimeo.setAspectRatio.call(this, ratio);\n        });\n\n        // Set autopause\n        player.embed.setAutopause(player.config.autopause).then(state => {\n            player.config.autopause = state;\n        });\n\n        // Get title\n        player.embed.getVideoTitle().then(title => {\n            player.config.title = title;\n            ui.setTitle.call(this);\n        });\n\n        // Get current time\n        player.embed.getCurrentTime().then(value => {\n            currentTime = value;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        // Get duration\n        player.embed.getDuration().then(value => {\n            player.media.duration = value;\n            triggerEvent.call(player, player.media, 'durationchange');\n        });\n\n        // Get captions\n        player.embed.getTextTracks().then(tracks => {\n            player.media.textTracks = tracks;\n            captions.setup.call(player);\n        });\n\n        player.embed.on('cuechange', ({ cues = [] }) => {\n            const strippedCues = cues.map(cue => stripHTML(cue.text));\n            captions.updateCues.call(player, strippedCues);\n        });\n\n        player.embed.on('loaded', () => {\n            // Assure state and events are updated on autoplay\n            player.embed.getPaused().then(paused => {\n                assurePlaybackState.call(player, !paused);\n                if (!paused) {\n                    triggerEvent.call(player, player.media, 'playing');\n                }\n            });\n\n            if (is.element(player.embed.element) && player.supported.ui) {\n                const frame = player.embed.element;\n\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                frame.setAttribute('tabindex', -1);\n            }\n        });\n\n        player.embed.on('play', () => {\n            assurePlaybackState.call(player, true);\n            triggerEvent.call(player, player.media, 'playing');\n        });\n\n        player.embed.on('pause', () => {\n            assurePlaybackState.call(player, false);\n        });\n\n        player.embed.on('timeupdate', data => {\n            player.media.seeking = false;\n            currentTime = data.seconds;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        player.embed.on('progress', data => {\n            player.media.buffered = data.percent;\n            triggerEvent.call(player, player.media, 'progress');\n\n            // Check all loaded\n            if (parseInt(data.percent, 10) === 1) {\n                triggerEvent.call(player, player.media, 'canplaythrough');\n            }\n\n            // Get duration as if we do it before load, it gives an incorrect value\n            // https://github.com/sampotts/plyr/issues/891\n            player.embed.getDuration().then(value => {\n                if (value !== player.media.duration) {\n                    player.media.duration = value;\n                    triggerEvent.call(player, player.media, 'durationchange');\n                }\n            });\n        });\n\n        player.embed.on('seeked', () => {\n            player.media.seeking = false;\n            triggerEvent.call(player, player.media, 'seeked');\n        });\n\n        player.embed.on('ended', () => {\n            player.media.paused = true;\n            triggerEvent.call(player, player.media, 'ended');\n        });\n\n        player.embed.on('error', detail => {\n            player.media.error = detail;\n            triggerEvent.call(player, player.media, 'error');\n        });\n\n        // Rebuild UI\n        setTimeout(() => ui.build.call(player), 0);\n    },\n};\n\nexport default vimeo;\n","// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport controls from './../controls';\nimport ui from './../ui';\nimport { dedupe } from './../utils/arrays';\nimport { createElement, replaceElement, toggleClass } from './../utils/elements';\nimport { triggerEvent } from './../utils/events';\nimport fetch from './../utils/fetch';\nimport is from './../utils/is';\nimport loadImage from './../utils/loadImage';\nimport loadScript from './../utils/loadScript';\nimport { format, generateId } from './../utils/strings';\n\n// Parse YouTube ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Standardise YouTube quality unit\nfunction mapQualityUnit(input) {\n    const qualities = {\n        hd2160: 2160,\n        hd1440: 1440,\n        hd1080: 1080,\n        hd720: 720,\n        large: 480,\n        medium: 360,\n        small: 240,\n        tiny: 144,\n    };\n\n    const entry = Object.entries(qualities).find(entry => entry.includes(input));\n\n    if (entry) {\n        // Get the match corresponding to the input\n        return entry.find(value => value !== input);\n    }\n\n    return 'default';\n}\n\nfunction mapQualityUnits(levels) {\n    if (is.empty(levels)) {\n        return levels;\n    }\n\n    return dedupe(levels.map(level => mapQualityUnit(level)));\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst youtube = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set aspect ratio\n        youtube.setAspectRatio.call(this);\n\n        // Setup API\n        if (is.object(window.YT) && is.function(window.YT.Player)) {\n            youtube.ready.call(this);\n        } else {\n            // Load the API\n            loadScript(this.config.urls.youtube.sdk).catch(error => {\n                this.debug.warn('YouTube API failed to load', error);\n            });\n\n            // Setup callback for the API\n            // YouTube has it's own system of course...\n            window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n            // Add to queue\n            window.onYouTubeReadyCallbacks.push(() => {\n                youtube.ready.call(this);\n            });\n\n            // Set callback to process queue\n            window.onYouTubeIframeAPIReady = () => {\n                window.onYouTubeReadyCallbacks.forEach(callback => {\n                    callback();\n                });\n            };\n        }\n    },\n\n    // Get the media title\n    getTitle(videoId) {\n        // Try via undocumented API method first\n        // This method disappears now and then though...\n        // https://github.com/sampotts/plyr/issues/709\n        if (is.function(this.embed.getVideoData)) {\n            const { title } = this.embed.getVideoData();\n\n            if (is.empty(title)) {\n                this.config.title = title;\n                ui.setTitle.call(this);\n                return;\n            }\n        }\n\n        // Or via Google API\n        const key = this.config.keys.google;\n        if (is.string(key) && !is.empty(key)) {\n            const url = format(this.config.urls.youtube.api, videoId, key);\n\n            fetch(url)\n                .then(result => {\n                    if (is.object(result)) {\n                        this.config.title = result.items[0].snippet.title;\n                        ui.setTitle.call(this);\n                    }\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Set aspect ratio\n    setAspectRatio() {\n        const ratio = this.config.ratio.split(':');\n        this.elements.wrapper.style.paddingBottom = `${100 / ratio[0] * ratio[1]}%`;\n    },\n\n    // API ready\n    ready() {\n        const player = this;\n\n        // Ignore already setup (race condition)\n        const currentId = player.media.getAttribute('id');\n        if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\n            return;\n        }\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(this.config.attributes.embed.id);\n        }\n\n        // Replace the <iframe> with a <div> due to YouTube API issues\n        const videoId = parseId(source);\n        const id = generateId(player.provider);\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Replace media element\n        const container = createElement('div', { id, poster });\n        player.media = replaceElement(container, player.media);\n\n        // Id to poster wrapper\n        const posterSrc = format => `https://img.youtube.com/vi/${videoId}/${format}default.jpg`;\n\n        // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n        loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\n            .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n            .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n            .then(image => ui.setPoster.call(player, image.src))\n            .then(posterSrc => {\n                // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n                if (!posterSrc.includes('maxres')) {\n                    player.elements.poster.style.backgroundSize = 'cover';\n                }\n            })\n            .catch(() => {});\n\n        // Setup instance\n        // https://developers.google.com/youtube/iframe_api_reference\n        player.embed = new window.YT.Player(id, {\n            videoId,\n            playerVars: {\n                autoplay: player.config.autoplay ? 1 : 0, // Autoplay\n                controls: player.supported.ui ? 0 : 1, // Only show controls if not fully supported\n                rel: 0, // No related vids\n                showinfo: 0, // Hide info\n                iv_load_policy: 3, // Hide annotations\n                modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n                disablekb: 1, // Disable keyboard as we handle it\n                playsinline: 1, // Allow iOS inline playback\n\n                // Tracking for stats\n                // origin: window ? `${window.location.protocol}//${window.location.host}` : null,\n                widget_referrer: window ? window.location.href : null,\n\n                // Captions are flaky on YouTube\n                cc_load_policy: player.captions.active ? 1 : 0,\n                cc_lang_pref: player.config.captions.language,\n            },\n            events: {\n                onError(event) {\n                    // YouTube may fire onError twice, so only handle it once\n                    if (!player.media.error) {\n                        const code = event.data;\n                        // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n                        const message =\n                            {\n                                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n                                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n                                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n                                101: 'The owner of the requested video does not allow it to be played in embedded players.',\n                                150: 'The owner of the requested video does not allow it to be played in embedded players.',\n                            }[code] || 'An unknown error occured';\n\n                        player.media.error = { code, message };\n\n                        triggerEvent.call(player, player.media, 'error');\n                    }\n                },\n                onPlaybackQualityChange() {\n                    triggerEvent.call(player, player.media, 'qualitychange', false, {\n                        quality: player.media.quality,\n                    });\n                },\n                onPlaybackRateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get current speed\n                    player.media.playbackRate = instance.getPlaybackRate();\n\n                    triggerEvent.call(player, player.media, 'ratechange');\n                },\n                onReady(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get the title\n                    youtube.getTitle.call(player, videoId);\n\n                    // Create a faux HTML5 API using the YouTube API\n                    player.media.play = () => {\n                        assurePlaybackState.call(player, true);\n                        instance.playVideo();\n                    };\n\n                    player.media.pause = () => {\n                        assurePlaybackState.call(player, false);\n                        instance.pauseVideo();\n                    };\n\n                    player.media.stop = () => {\n                        instance.stopVideo();\n                    };\n\n                    player.media.duration = instance.getDuration();\n                    player.media.paused = true;\n\n                    // Seeking\n                    player.media.currentTime = 0;\n                    Object.defineProperty(player.media, 'currentTime', {\n                        get() {\n                            return Number(instance.getCurrentTime());\n                        },\n                        set(time) {\n                            // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n                            if (player.paused && !player.embed.hasPlayed) {\n                                player.embed.mute();\n                            }\n\n                            // Set seeking state and trigger event\n                            player.media.seeking = true;\n                            triggerEvent.call(player, player.media, 'seeking');\n\n                            // Seek after events sent\n                            instance.seekTo(time);\n                        },\n                    });\n\n                    // Playback speed\n                    Object.defineProperty(player.media, 'playbackRate', {\n                        get() {\n                            return instance.getPlaybackRate();\n                        },\n                        set(input) {\n                            instance.setPlaybackRate(input);\n                        },\n                    });\n\n                    // Quality\n                    Object.defineProperty(player.media, 'quality', {\n                        get() {\n                            return mapQualityUnit(instance.getPlaybackQuality());\n                        },\n                        set(input) {\n                            instance.setPlaybackQuality(mapQualityUnit(input));\n                        },\n                    });\n\n                    // Volume\n                    let { volume } = player.config;\n                    Object.defineProperty(player.media, 'volume', {\n                        get() {\n                            return volume;\n                        },\n                        set(input) {\n                            volume = input;\n                            instance.setVolume(volume * 100);\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Muted\n                    let { muted } = player.config;\n                    Object.defineProperty(player.media, 'muted', {\n                        get() {\n                            return muted;\n                        },\n                        set(input) {\n                            const toggle = is.boolean(input) ? input : muted;\n                            muted = toggle;\n                            instance[toggle ? 'mute' : 'unMute']();\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Source\n                    Object.defineProperty(player.media, 'currentSrc', {\n                        get() {\n                            return instance.getVideoUrl();\n                        },\n                    });\n\n                    // Ended\n                    Object.defineProperty(player.media, 'ended', {\n                        get() {\n                            return player.currentTime === player.duration;\n                        },\n                    });\n\n                    // Get available speeds\n                    player.options.speed = instance.getAvailablePlaybackRates();\n\n                    // Set the tabindex to avoid focus entering iframe\n                    if (player.supported.ui) {\n                        player.media.setAttribute('tabindex', -1);\n                    }\n\n                    triggerEvent.call(player, player.media, 'timeupdate');\n                    triggerEvent.call(player, player.media, 'durationchange');\n\n                    // Reset timer\n                    clearInterval(player.timers.buffering);\n\n                    // Setup buffering\n                    player.timers.buffering = setInterval(() => {\n                        // Get loaded % from YouTube\n                        player.media.buffered = instance.getVideoLoadedFraction();\n\n                        // Trigger progress only when we actually buffer something\n                        if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n                            triggerEvent.call(player, player.media, 'progress');\n                        }\n\n                        // Set last buffer point\n                        player.media.lastBuffered = player.media.buffered;\n\n                        // Bail if we're at 100%\n                        if (player.media.buffered === 1) {\n                            clearInterval(player.timers.buffering);\n\n                            // Trigger event\n                            triggerEvent.call(player, player.media, 'canplaythrough');\n                        }\n                    }, 200);\n\n                    // Rebuild UI\n                    setTimeout(() => ui.build.call(player), 50);\n                },\n                onStateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Reset timer\n                    clearInterval(player.timers.playing);\n\n                    const seeked = player.media.seeking && [1, 2].includes(event.data);\n\n                    if (seeked) {\n                        // Unset seeking and fire seeked event\n                        player.media.seeking = false;\n                        triggerEvent.call(player, player.media, 'seeked');\n                    }\n\n                    // Handle events\n                    // -1   Unstarted\n                    // 0    Ended\n                    // 1    Playing\n                    // 2    Paused\n                    // 3    Buffering\n                    // 5    Video cued\n                    switch (event.data) {\n                        case -1:\n                            // Update scrubber\n                            triggerEvent.call(player, player.media, 'timeupdate');\n\n                            // Get loaded % from YouTube\n                            player.media.buffered = instance.getVideoLoadedFraction();\n                            triggerEvent.call(player, player.media, 'progress');\n\n                            break;\n\n                        case 0:\n                            assurePlaybackState.call(player, false);\n\n                            // YouTube doesn't support loop for a single video, so mimick it.\n                            if (player.media.loop) {\n                                // YouTube needs a call to `stopVideo` before playing again\n                                instance.stopVideo();\n                                instance.playVideo();\n                            } else {\n                                triggerEvent.call(player, player.media, 'ended');\n                            }\n\n                            break;\n\n                        case 1:\n                            // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (player.media.paused && !player.embed.hasPlayed) {\n                                player.media.pause();\n                            } else {\n                                assurePlaybackState.call(player, true);\n\n                                triggerEvent.call(player, player.media, 'playing');\n\n                                // Poll to get playback progress\n                                player.timers.playing = setInterval(() => {\n                                    triggerEvent.call(player, player.media, 'timeupdate');\n                                }, 50);\n\n                                // Check duration again due to YouTube bug\n                                // https://github.com/sampotts/plyr/issues/374\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                                if (player.media.duration !== instance.getDuration()) {\n                                    player.media.duration = instance.getDuration();\n                                    triggerEvent.call(player, player.media, 'durationchange');\n                                }\n\n                                // Get quality\n                                controls.setQualityMenu.call(\n                                    player,\n                                    mapQualityUnits(instance.getAvailableQualityLevels()),\n                                );\n                            }\n\n                            break;\n\n                        case 2:\n                            // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (!player.muted) {\n                                player.embed.unMute();\n                            }\n                            assurePlaybackState.call(player, false);\n\n                            break;\n\n                        default:\n                            break;\n                    }\n\n                    triggerEvent.call(player, player.elements.container, 'statechange', false, {\n                        code: event.data,\n                    });\n                },\n            },\n        });\n    },\n};\n\nexport default youtube;\n","// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport html5 from './html5';\nimport vimeo from './plugins/vimeo';\nimport youtube from './plugins/youtube';\nimport { createElement, toggleClass, wrap } from './utils/elements';\n\nconst media = {\n    // Setup media\n    setup() {\n        // If there's no media, bail\n        if (!this.media) {\n            this.debug.warn('No media element found!');\n            return;\n        }\n\n        // Add type class\n        toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n        // Add provider class\n        toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n        // Add video class for embeds\n        // This will require changes if audio embeds are added\n        if (this.isEmbed) {\n            toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n        }\n\n        // Inject the player wrapper\n        if (this.isVideo) {\n            // Create the wrapper div\n            this.elements.wrapper = createElement('div', {\n                class: this.config.classNames.video,\n            });\n\n            // Wrap the video in a container\n            wrap(this.media, this.elements.wrapper);\n\n            // Faux poster container\n            this.elements.poster = createElement('div', {\n                class: this.config.classNames.poster,\n            });\n\n            this.elements.wrapper.appendChild(this.elements.poster);\n        }\n\n        if (this.isHTML5) {\n            html5.extend.call(this);\n        } else if (this.isYouTube) {\n            youtube.setup.call(this);\n        } else if (this.isVimeo) {\n            vimeo.setup.call(this);\n        }\n    },\n};\n\nexport default media;\n","// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport i18n from '../i18n';\nimport { createElement } from './../utils/elements';\nimport { triggerEvent } from './../utils/events';\nimport is from './../utils/is';\nimport loadScript from './../utils/loadScript';\nimport { formatTime } from './../utils/time';\nimport { buildUrlParams } from './../utils/urls';\n\nclass Ads {\n    /**\n     * Ads constructor.\n     * @param {object} player\n     * @return {Ads}\n     */\n    constructor(player) {\n        this.player = player;\n        this.publisherId = player.config.ads.publisherId;\n        this.playing = false;\n        this.initialized = false;\n        this.elements = {\n            container: null,\n            displayContainer: null,\n        };\n        this.manager = null;\n        this.loader = null;\n        this.cuePoints = null;\n        this.events = {};\n        this.safetyTimer = null;\n        this.countdownTimer = null;\n\n        // Setup a promise to resolve when the IMA manager is ready\n        this.managerPromise = new Promise((resolve, reject) => {\n            // The ad is loaded and ready\n            this.on('loaded', resolve);\n\n            // Ads failed\n            this.on('error', reject);\n        });\n\n        this.load();\n    }\n\n    get enabled() {\n        return (\n            this.player.isHTML5 && this.player.isVideo && this.player.config.ads.enabled && !is.empty(this.publisherId)\n        );\n    }\n\n    /**\n     * Load the IMA SDK\n     */\n    load() {\n        if (this.enabled) {\n            // Check if the Google IMA3 SDK is loaded or load it ourselves\n            if (!is.object(window.google) || !is.object(window.google.ima)) {\n                loadScript(this.player.config.urls.googleIMA.sdk)\n                    .then(() => {\n                        this.ready();\n                    })\n                    .catch(() => {\n                        // Script failed to load or is blocked\n                        this.trigger('error', new Error('Google IMA SDK failed to load'));\n                    });\n            } else {\n                this.ready();\n            }\n        }\n    }\n\n    /**\n     * Get the ads instance ready\n     */\n    ready() {\n        // Start ticking our safety timer. If the whole advertisement\n        // thing doesn't resolve within our set time; we bail\n        this.startSafetyTimer(12000, 'ready()');\n\n        // Clear the safety timer\n        this.managerPromise.then(() => {\n            this.clearSafetyTimer('onAdsManagerLoaded()');\n        });\n\n        // Set listeners on the Plyr instance\n        this.listeners();\n\n        // Setup the IMA SDK\n        this.setupIMA();\n    }\n\n    // Build the default tag URL\n    get tagUrl() {\n        const params = {\n            AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n            AV_CHANNELID: '5a0458dc28a06145e4519d21',\n            AV_URL: location.hostname,\n            cb: Date.now(),\n            AV_WIDTH: 640,\n            AV_HEIGHT: 480,\n            AV_CDIM2: this.publisherId,\n        };\n\n        const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n        return `${base}?${buildUrlParams(params)}`;\n    }\n\n    /**\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\n     * so here we define our ad container. This div is set up to render on top of the video player.\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\n     * handle to the content video player - the SDK will poll the current time of our player to\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\n     * mobile devices, this initialization is done as the result of a user action.\n     */\n    setupIMA() {\n        // Create the container for our advertisements\n        this.elements.container = createElement('div', {\n            class: this.player.config.classNames.ads,\n        });\n        this.player.elements.container.appendChild(this.elements.container);\n\n        // So we can run VPAID2\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n        // Set language\n        google.ima.settings.setLocale(this.player.config.ads.language);\n\n        // We assume the adContainer is the video container of the plyr element\n        // that will house the ads\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container);\n\n        // Request video ads to be pre-loaded\n        this.requestAds();\n    }\n\n    /**\n     * Request advertisements\n     */\n    requestAds() {\n        const { container } = this.player.elements;\n\n        try {\n            // Create ads loader\n            this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n            // Listen and respond to ads loaded and error events\n            this.loader.addEventListener(\n                google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n                event => this.onAdsManagerLoaded(event),\n                false,\n            );\n            this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\n\n            // Request video ads\n            const request = new google.ima.AdsRequest();\n            request.adTagUrl = this.tagUrl;\n\n            // Specify the linear and nonlinear slot sizes. This helps the SDK\n            // to select the correct creative if multiple are returned\n            request.linearAdSlotWidth = container.offsetWidth;\n            request.linearAdSlotHeight = container.offsetHeight;\n            request.nonLinearAdSlotWidth = container.offsetWidth;\n            request.nonLinearAdSlotHeight = container.offsetHeight;\n\n            // We only overlay ads as we only support video.\n            request.forceNonLinearFullSlot = false;\n\n            // Mute based on current state\n            request.setAdWillPlayMuted(!this.player.muted);\n\n            this.loader.requestAds(request);\n        } catch (e) {\n            this.onAdError(e);\n        }\n    }\n\n    /**\n     * Update the ad countdown\n     * @param {boolean} start\n     */\n    pollCountdown(start = false) {\n        if (!start) {\n            clearInterval(this.countdownTimer);\n            this.elements.container.removeAttribute('data-badge-text');\n            return;\n        }\n\n        const update = () => {\n            const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\n            const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n            this.elements.container.setAttribute('data-badge-text', label);\n        };\n\n        this.countdownTimer = setInterval(update, 100);\n    }\n\n    /**\n     * This method is called whenever the ads are ready inside the AdDisplayContainer\n     * @param {Event} adsManagerLoadedEvent\n     */\n    onAdsManagerLoaded(event) {\n        // Get the ads manager\n        const settings = new google.ima.AdsRenderingSettings();\n\n        // Tell the SDK to save and restore content video state on our behalf\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n        settings.enablePreloading = true;\n\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\n        // so it can determine when to start the mid- and post-roll\n        this.manager = event.getAdsManager(this.player, settings);\n\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n        this.cuePoints = this.manager.getCuePoints();\n\n        // Add advertisement cue's within the time line if available\n        if (!is.empty(this.cuePoints)) {\n            this.cuePoints.forEach(cuePoint => {\n                if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n                    const seekElement = this.player.elements.progress;\n\n                    if (is.element(seekElement)) {\n                        const cuePercentage = 100 / this.player.duration * cuePoint;\n                        const cue = createElement('span', {\n                            class: this.player.config.classNames.cues,\n                        });\n\n                        cue.style.left = `${cuePercentage.toString()}%`;\n                        seekElement.appendChild(cue);\n                    }\n                }\n            });\n        }\n\n        // Get skippable state\n        // TODO: Skip button\n        // this.player.debug.warn(this.manager.getAdSkippableState());\n\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Add listeners to the required events\n        // Advertisement error events\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\n\n        // Advertisement regular events\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\n            this.manager.addEventListener(google.ima.AdEvent.Type[type], event => this.onAdEvent(event));\n        });\n\n        // Resolve our adsManager\n        this.trigger('loaded');\n    }\n\n    /**\n     * This is where all the event handling takes place. Retrieve the ad from the event. Some\n     * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n     * @param {Event} event\n     */\n    onAdEvent(event) {\n        const { container } = this.player.elements;\n\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n        // don't have ad object associated\n        const ad = event.getAd();\n\n        // Proxy event\n        const dispatchEvent = type => {\n            const event = `ads${type.replace(/_/g, '').toLowerCase()}`;\n            triggerEvent.call(this.player, this.player.media, event);\n        };\n\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                // This is the first event sent for an ad - it is possible to determine whether the\n                // ad is a video ad or an overlay\n                this.trigger('loaded');\n\n                // Bubble event\n                dispatchEvent(event.type);\n\n                // Start countdown\n                this.pollCountdown(true);\n\n                if (!ad.isLinear()) {\n                    // Position AdDisplayContainer correctly for overlay\n                    ad.width = container.offsetWidth;\n                    ad.height = container.offsetHeight;\n                }\n\n                // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n                // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n                break;\n\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                // All ads for the current videos are done. We can now request new advertisements\n                // in case the video is re-played\n\n                // Fire event\n                dispatchEvent(event.type);\n\n                // TODO: Example for what happens when a next video in a playlist would be loaded.\n                // So here we load a new video when all ads are done.\n                // Then we load new ads within a new adsManager. When the video\n                // Is started - after - the ads are loaded, then we get ads.\n                // You can also easily test cancelling and reloading by running\n                // player.ads.cancel() and player.ads.play from the console I guess.\n                // this.player.source = {\n                //     type: 'video',\n                //     title: 'View From A Blue Moon',\n                //     sources: [{\n                //         src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n                // 'video/mp4', }], poster:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n                // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n                // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n                // };\n\n                // TODO: So there is still this thing where a video should only be allowed to start\n                // playing when the IMA SDK is ready or has failed\n\n                this.loadAds();\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n                // This event indicates the ad has started - the video player can adjust the UI,\n                // for example display a pause button and remaining time. Fired when content should\n                // be paused. This usually happens right before an ad is about to cover the content\n\n                dispatchEvent(event.type);\n\n                this.pauseContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n                // This event indicates the ad has finished - the video player can perform\n                // appropriate UI actions, such as removing the timer for remaining time detection.\n                // Fired when content should be resumed. This usually happens when an ad finishes\n                // or collapses\n\n                dispatchEvent(event.type);\n\n                this.pollCountdown();\n\n                this.resumeContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.STARTED:\n            case google.ima.AdEvent.Type.MIDPOINT:\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.IMPRESSION:\n            case google.ima.AdEvent.Type.CLICK:\n                dispatchEvent(event.type);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Any ad error handling comes through here\n     * @param {Event} event\n     */\n    onAdError(event) {\n        this.cancel();\n        this.player.debug.warn('Ads error', event);\n    }\n\n    /**\n     * Setup hooks for Plyr and window events. This ensures\n     * the mid- and post-roll launch at the correct time. And\n     * resize the advertisement when the player resizes\n     */\n    listeners() {\n        const { container } = this.player.elements;\n        let time;\n\n        // Add listeners to the required events\n        this.player.on('ended', () => {\n            this.loader.contentComplete();\n        });\n\n        this.player.on('seeking', () => {\n            time = this.player.currentTime;\n            return time;\n        });\n\n        this.player.on('seeked', () => {\n            const seekedTime = this.player.currentTime;\n\n            if (is.empty(this.cuePoints)) {\n                return;\n            }\n\n            this.cuePoints.forEach((cuePoint, index) => {\n                if (time < cuePoint && cuePoint < seekedTime) {\n                    this.manager.discardAdBreak();\n                    this.cuePoints.splice(index, 1);\n                }\n            });\n        });\n\n        // Listen to the resizing of the window. And resize ad accordingly\n        // TODO: eventually implement ResizeObserver\n        window.addEventListener('resize', () => {\n            if (this.manager) {\n                this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n            }\n        });\n    }\n\n    /**\n     * Initialize the adsManager and start playing advertisements\n     */\n    play() {\n        const { container } = this.player.elements;\n\n        if (!this.managerPromise) {\n            this.resumeContent();\n        }\n\n        // Play the requested advertisement whenever the adsManager is ready\n        this.managerPromise\n            .then(() => {\n                // Initialize the container. Must be done via a user action on mobile devices\n                this.elements.displayContainer.initialize();\n\n                try {\n                    if (!this.initialized) {\n                        // Initialize the ads manager. Ad rules playlist will start at this time\n                        this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n                        // Call play to start showing the ad. Single video and overlay ads will\n                        // start at this time; the call will be ignored for ad rules\n                        this.manager.start();\n                    }\n\n                    this.initialized = true;\n                } catch (adError) {\n                    // An error may be thrown if there was a problem with the\n                    // VAST response\n                    this.onAdError(adError);\n                }\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Resume our video\n     */\n    resumeContent() {\n        // Hide the advertisement container\n        this.elements.container.style.zIndex = '';\n\n        // Ad is stopped\n        this.playing = false;\n\n        // Play our video\n        if (this.player.currentTime < this.player.duration) {\n            this.player.play();\n        }\n    }\n\n    /**\n     * Pause our video\n     */\n    pauseContent() {\n        // Show the advertisement container\n        this.elements.container.style.zIndex = 3;\n\n        // Ad is playing.\n        this.playing = true;\n\n        // Pause our video.\n        this.player.pause();\n    }\n\n    /**\n     * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n     * allowed to call new ads based on google policies, as they interpret this as an accidental\n     * video requests. https://developers.google.com/interactive-\n     * media-ads/docs/sdks/android/faq#8\n     */\n    cancel() {\n        // Pause our video\n        if (this.initialized) {\n            this.resumeContent();\n        }\n\n        // Tell our instance that we're done for now\n        this.trigger('error');\n\n        // Re-create our adsManager\n        this.loadAds();\n    }\n\n    /**\n     * Re-create our adsManager\n     */\n    loadAds() {\n        // Tell our adsManager to go bye bye\n        this.managerPromise\n            .then(() => {\n                // Destroy our adsManager\n                if (this.manager) {\n                    this.manager.destroy();\n                }\n\n                // Re-set our adsManager promises\n                this.managerPromise = new Promise(resolve => {\n                    this.on('loaded', resolve);\n                    this.player.debug.log(this.manager);\n                });\n\n                // Now request some new advertisements\n                this.requestAds();\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Handles callbacks after an ad event was invoked\n     * @param {string} event - Event type\n     */\n    trigger(event, ...args) {\n        const handlers = this.events[event];\n\n        if (is.array(handlers)) {\n            handlers.forEach(handler => {\n                if (is.function(handler)) {\n                    handler.apply(this, args);\n                }\n            });\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     * @return {Ads}\n     */\n    on(event, callback) {\n        if (!is.array(this.events[event])) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(callback);\n\n        return this;\n    }\n\n    /**\n     * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n     * The advertisement has 12 seconds to get its things together. We stop this timer when the\n     * advertisement is playing, or when a user action is required to start, then we clear the\n     * timer on ad ready\n     * @param {number} time\n     * @param {string} from\n     */\n    startSafetyTimer(time, from) {\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n        this.safetyTimer = setTimeout(() => {\n            this.cancel();\n            this.clearSafetyTimer('startSafetyTimer()');\n        }, time);\n    }\n\n    /**\n     * Clear our safety timer(s)\n     * @param {string} from\n     */\n    clearSafetyTimer(from) {\n        if (!is.nullOrUndefined(this.safetyTimer)) {\n            this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n            clearTimeout(this.safetyTimer);\n            this.safetyTimer = null;\n        }\n    }\n}\n\nexport default Ads;\n","// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport { providers } from './config/types';\nimport html5 from './html5';\nimport media from './media';\nimport support from './support';\nimport ui from './ui';\nimport { createElement, insertElement, removeElement } from './utils/elements';\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\n\nconst source = {\n    // Add elements to HTML5 media (source, tracks, etc)\n    insertElements(type, attributes) {\n        if (is.string(attributes)) {\n            insertElement(type, this.media, {\n                src: attributes,\n            });\n        } else if (is.array(attributes)) {\n            attributes.forEach(attribute => {\n                insertElement(type, this.media, attribute);\n            });\n        }\n    },\n\n    // Update source\n    // Sources are not checked for support so be careful\n    change(input) {\n        if (!getDeep(input, 'sources.length')) {\n            this.debug.warn('Invalid source format');\n            return;\n        }\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        // Destroy instance and re-setup\n        this.destroy.call(\n            this,\n            () => {\n                // Reset quality options\n                this.options.quality = [];\n\n                // Remove elements\n                removeElement(this.media);\n                this.media = null;\n\n                // Reset class name\n                if (is.element(this.elements.container)) {\n                    this.elements.container.removeAttribute('class');\n                }\n\n                // Set the type and provider\n                const { sources, type } = input;\n                const [{ provider = providers.html5, src }] = sources;\n                const tagName = provider === 'html5' ? type : 'div';\n                const attributes = provider === 'html5' ? {} : { src };\n\n                Object.assign(this, {\n                    provider,\n                    type,\n                    // Check for support\n                    supported: support.check(type, provider, this.config.playsinline),\n                    // Create new element\n                    media: createElement(tagName, attributes),\n                });\n\n                // Inject the new element\n                this.elements.container.appendChild(this.media);\n\n                // Autoplay the new source?\n                if (is.boolean(input.autoplay)) {\n                    this.config.autoplay = input.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (this.isHTML5) {\n                    if (this.config.crossorigin) {\n                        this.media.setAttribute('crossorigin', '');\n                    }\n                    if (this.config.autoplay) {\n                        this.media.setAttribute('autoplay', '');\n                    }\n                    if (!is.empty(input.poster)) {\n                        this.poster = input.poster;\n                    }\n                    if (this.config.loop.active) {\n                        this.media.setAttribute('loop', '');\n                    }\n                    if (this.config.muted) {\n                        this.media.setAttribute('muted', '');\n                    }\n                    if (this.config.playsinline) {\n                        this.media.setAttribute('playsinline', '');\n                    }\n                }\n\n                // Restore class hook\n                ui.addStyleHook.call(this);\n\n                // Set new sources for html5\n                if (this.isHTML5) {\n                    source.insertElements.call(this, 'source', sources);\n                }\n\n                // Set video title\n                this.config.title = input.title;\n\n                // Set up from scratch\n                media.setup.call(this);\n\n                // HTML5 stuff\n                if (this.isHTML5) {\n                    // Setup captions\n                    if ('tracks' in input) {\n                        source.insertElements.call(this, 'track', input.tracks);\n                    }\n\n                    // Load HTML5 sources\n                    this.media.load();\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n                    // Setup interface\n                    ui.build.call(this);\n                }\n\n                // Update the fullscreen support\n                this.fullscreen.update();\n            },\n            true,\n        );\n    },\n};\n\nexport default source;\n","// ==========================================================================\n// Plyr\n// plyr.js v3.3.20\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport captions from './captions';\nimport defaults from './config/defaults';\nimport { getProviderByUrl, providers, types } from './config/types';\nimport Console from './console';\nimport controls from './controls';\nimport Fullscreen from './fullscreen';\nimport Listeners from './listeners';\nimport media from './media';\nimport Ads from './plugins/ads';\nimport source from './source';\nimport Storage from './storage';\nimport support from './support';\nimport ui from './ui';\nimport { closest } from './utils/arrays';\nimport { createElement, hasClass, removeElement, replaceElement, toggleClass, wrap } from './utils/elements';\nimport { off, on, once, triggerEvent, unbindListeners } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { cloneDeep, extend } from './utils/objects';\nimport { parseUrl } from './utils/urls';\nimport googleCast from './plugins/google-cast';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n    constructor(target, options) {\n        this.timers = {};\n\n        // State\n        this.ready = false;\n        this.loading = false;\n        this.failed = false;\n\n        // Touch device\n        this.touch = support.touch;\n\n        // Set the media element\n        this.media = target;\n\n        // String selector passed\n        if (is.string(this.media)) {\n            this.media = document.querySelectorAll(this.media);\n        }\n\n        // jQuery, NodeList or Array passed, use first element\n        if ((window.jQuery && this.media instanceof jQuery) || is.nodeList(this.media) || is.array(this.media)) {\n            // eslint-disable-next-line\n            this.media = this.media[0];\r\n        }\n\n        // Set config\n        this.config = extend(\n            {},\n            defaults,\n            Plyr.defaults,\n            options || {},\n            (() => {\n                try {\n                    return JSON.parse(this.media.getAttribute('data-plyr-config'));\n                } catch (e) {\n                    return {};\n                }\n            })(),\n        );\n\n        // Elements cache\n        this.elements = {\n            container: null,\n            buttons: {},\n            display: {},\n            progress: {},\n            inputs: {},\n            settings: {\n                menu: null,\n                panes: {},\n                tabs: {},\n            },\n            captions: null,\n        };\n\n        // Captions\n        this.captions = {\n            active: null,\n            currentTrack: -1,\n            meta: new WeakMap(),\n        };\n\n        // Fullscreen\n        this.fullscreen = {\n            active: false,\n        };\n\n        // Options\n        this.options = {\n            speed: [],\n            quality: [],\n        };\n\n        // Debugging\n        // TODO: move to globals\n        this.debug = new Console(this.config.debug);\n\n        // Log config options and support\n        this.debug.log('Config', this.config);\n        this.debug.log('Support', support);\n\n        // We need an element to setup\n        if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\n            this.debug.error('Setup failed: no suitable element passed');\n            return;\n        }\n\n        // Bail if the element is initialized\n        if (this.media.plyr) {\n            this.debug.warn('Target already setup');\n            return;\n        }\n\n        // Bail if not enabled\n        if (!this.config.enabled) {\n            this.debug.error('Setup failed: disabled by config');\n            return;\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!support.check().api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Cache original element state for .destroy()\n        const clone = this.media.cloneNode(true);\n        clone.autoplay = false;\n        this.elements.original = clone;\n\n        // Set media type based on tag or data attribute\n        // Supported: video, audio, vimeo, youtube\n        const type = this.media.tagName.toLowerCase();\n\n        // Embed properties\n        let iframe = null;\n        let url = null;\n\n        // Different setup based on type\n        switch (type) {\n            case 'div':\n                // Find the frame\n                iframe = this.media.querySelector('iframe');\n\n                // <iframe> type\n                if (is.element(iframe)) {\n                    // Detect provider\n                    url = parseUrl(iframe.getAttribute('src'));\n                    this.provider = getProviderByUrl(url.toString());\n\n                    // Rework elements\n                    this.elements.container = this.media;\n                    this.media = iframe;\n\n                    // Reset classname\n                    this.elements.container.className = '';\n\n                    // Get attributes from URL and set config\n                    if (url.searchParams.length) {\n                        const truthy = ['1', 'true'];\n\n                        if (truthy.includes(url.searchParams.get('autoplay'))) {\n                            this.config.autoplay = true;\n                        }\n                        if (truthy.includes(url.searchParams.get('loop'))) {\n                            this.config.loop.active = true;\n                        }\n\n                        // TODO: replace fullscreen.iosNative with this playsinline config option\n                        // YouTube requires the playsinline in the URL\n                        if (this.isYouTube) {\n                            this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\n                        } else {\n                            this.config.playsinline = true;\n                        }\n                    }\n                } else {\n                    // <div> with attributes\n                    this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n                    // Remove attribute\n                    this.media.removeAttribute(this.config.attributes.embed.provider);\n                }\n\n                // Unsupported or missing provider\n                if (is.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\n                    this.debug.error('Setup failed: Invalid provider');\n                    return;\n                }\n\n                // Audio will come later for external providers\n                this.type = types.video;\n\n                break;\n\n            case 'video':\n            case 'audio':\n                this.type = type;\n                this.provider = providers.html5;\n\n                // Get config from attributes\n                if (this.media.hasAttribute('crossorigin')) {\n                    this.config.crossorigin = true;\n                }\n                if (this.media.hasAttribute('autoplay')) {\n                    this.config.autoplay = true;\n                }\n                if (this.media.hasAttribute('playsinline')) {\n                    this.config.playsinline = true;\n                }\n                if (this.media.hasAttribute('muted')) {\n                    this.config.muted = true;\n                }\n                if (this.media.hasAttribute('loop')) {\n                    this.config.loop.active = true;\n                }\n\n                break;\n\n            default:\n                this.debug.error('Setup failed: unsupported type');\n                return;\n        }\n\n        // Check for support again but with type\n        this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n        // If no support for even API, bail\n        if (!this.supported.api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        this.eventListeners = [];\n\n        // Create listeners\n        this.listeners = new Listeners(this);\n\n        // Setup local storage for user settings\n        this.storage = new Storage(this);\n\n        // Store reference\n        this.media.plyr = this;\n\n        // Wrap media\n        if (!is.element(this.elements.container)) {\n            this.elements.container = createElement('div');\n            wrap(this.media, this.elements.container);\n        }\n\n        // Add style hook\n        ui.addStyleHook.call(this);\n\n        // Setup media\n        media.setup.call(this);\n\n        // Listen for events if debugging\n        if (this.config.debug) {\n            on.call(this, this.elements.container, this.config.events.join(' '), event => {\n                this.debug.log(`event: ${event.type}`);\n            });\n        }\n\n        // Setup interface\n        // If embed but not fully supported, build interface now to avoid flash of controls\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n            ui.build.call(this);\n        }\n\n        // Container listeners\n        this.listeners.container();\n\n        // Global listeners\n        this.listeners.global();\n\n        // Setup fullscreen\n        this.fullscreen = new Fullscreen(this);\n\n        // Setup ads if provided\n        this.ads = new Ads(this);\n\n        // Autoplay if required\n        if (this.config.autoplay) {\n            this.play();\n        }\n    }\n\n    // ---------------------------------------\n    // API\n    // ---------------------------------------\n\n    /**\n     * Types and provider helpers\n     */\n    get isHTML5() {\n        return Boolean(this.provider === providers.html5);\n    }\n    get isEmbed() {\n        return Boolean(this.isYouTube || this.isVimeo);\n    }\n    get isYouTube() {\n        return Boolean(this.provider === providers.youtube);\n    }\n    get isVimeo() {\n        return Boolean(this.provider === providers.vimeo);\n    }\n    get isVideo() {\n        return Boolean(this.type === types.video);\n    }\n    get isAudio() {\n        return Boolean(this.type === types.audio);\n    }\n\n    /**\n     * Play the media, or play the advertisement (if they are not blocked)\n     */\n    play() {\n        if (!is.function(this.media.play)) {\n            return null;\n        }\n\n        // Return the promise (for HTML5)\n        return this.media.play();\n    }\n\n    /**\n     * Pause the media\n     */\n    pause() {\n        if (!this.playing || !is.function(this.media.pause)) {\n            return;\n        }\n\n        this.media.pause();\n    }\n\n    /**\n     * Get playing state\n     */\n    get playing() {\n        return Boolean(this.ready && !this.paused && !this.ended);\n    }\n\n    /**\n     * Get paused state\n     */\n    get paused() {\n        return Boolean(this.media.paused);\n    }\n\n    /**\n     * Get stopped state\n     */\n    get stopped() {\n        return Boolean(this.paused && this.currentTime === 0);\n    }\n\n    /**\n     * Get ended state\n     */\n    get ended() {\n        return Boolean(this.media.ended);\n    }\n\n    /**\n     * Toggle playback based on current status\n     * @param {boolean} input\n     */\n    togglePlay(input) {\n        // Toggle based on current state if nothing passed\n        const toggle = is.boolean(input) ? input : !this.playing;\n\n        if (toggle) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n\n    /**\n     * Stop playback\n     */\n    stop() {\n        if (this.isHTML5) {\n            this.pause();\n            this.restart();\n        } else if (is.function(this.media.stop)) {\n            this.media.stop();\n        }\n    }\n\n    /**\n     * Restart playback\n     */\n    restart() {\n        this.currentTime = 0;\n    }\n\n    /**\n     * Rewind\n     * @param {number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n     */\n    rewind(seekTime) {\n        this.currentTime = this.currentTime - (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Fast forward\n     * @param {number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n     */\n    forward(seekTime) {\n        this.currentTime = this.currentTime + (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Seek to a time\n     * @param {number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set currentTime(input) {\n        // Bail if media duration isn't available yet\n        if (!this.duration) {\n            return;\n        }\n\n        // Validate input\n        const inputIsValid = is.number(input) && input > 0;\n\n        // Set\n        this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\n\n        // Logging\n        this.debug.log(`Seeking to ${this.currentTime} seconds`);\n    }\n\n    /**\n     * Get current time\n     */\n    get currentTime() {\n        return Number(this.media.currentTime);\n    }\n\n    /**\n     * Get buffered\n     */\n    get buffered() {\n        const { buffered } = this.media;\n\n        // YouTube / Vimeo return a float between 0-1\n        if (is.number(buffered)) {\n            return buffered;\n        }\n\n        // HTML5\n        // TODO: Handle buffered chunks of the media\n        // (i.e. seek to another section buffers only that section)\n        if (buffered && buffered.length && this.duration > 0) {\n            return buffered.end(0) / this.duration;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Get seeking status\n     */\n    get seeking() {\n        return Boolean(this.media.seeking);\n    }\n\n    /**\n     * Get the duration of the current media\n     */\n    get duration() {\n        // Faux duration set via config\n        const fauxDuration = parseFloat(this.config.duration);\n\n        // Media duration can be NaN before the media has loaded\n        const duration = (this.media || {}).duration || 0;\n\n        // If config duration is funky, use regular duration\n        return fauxDuration || duration;\n    }\n\n    /**\n     * Set the player volume\n     * @param {number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n    set volume(value) {\n        let volume = value;\n        const max = 1;\n        const min = 0;\n\n        if (is.string(volume)) {\n            volume = Number(volume);\n        }\n\n        // Load volume from storage if no value specified\n        if (!is.number(volume)) {\n            volume = this.storage.get('volume');\n        }\n\n        // Use config if all else fails\n        if (!is.number(volume)) {\n            ({ volume } = this.config);\n        }\n\n        // Maximum is volumeMax\n        if (volume > max) {\n            volume = max;\n        }\n        // Minimum is volumeMin\n        if (volume < min) {\n            volume = min;\n        }\n\n        // Update config\n        this.config.volume = volume;\n\n        // Set the player volume\n        this.media.volume = volume;\n\n        // If muted, and we're increasing volume manually, reset muted state\n        if (!is.empty(value) && this.muted && volume > 0) {\n            this.muted = false;\n        }\n    }\n\n    /**\n     * Get the current player volume\n     */\n    get volume() {\n        return Number(this.media.volume);\n    }\n\n    /**\n     * Increase volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    increaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume + (is.number(step) ? step : 0);\n    }\n\n    /**\n     * Decrease volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    decreaseVolume(step) {\n        this.increaseVolume(-step);\n    }\n\n    /**\n     * Set muted state\n     * @param {boolean} mute\n     */\n    set muted(mute) {\n        let toggle = mute;\n\n        // Load muted state from storage\n        if (!is.boolean(toggle)) {\n            toggle = this.storage.get('muted');\n        }\n\n        // Use config if all else fails\n        if (!is.boolean(toggle)) {\n            toggle = this.config.muted;\n        }\n\n        // Update config\n        this.config.muted = toggle;\n\n        // Set mute on the player\n        this.media.muted = toggle;\n    }\n\n    /**\n     * Get current muted state\n     */\n    get muted() {\n        return Boolean(this.media.muted);\n    }\n\n    /**\n     * Check if the media has audio\n     */\n    get hasAudio() {\n        // Assume yes for all non HTML5 (as we can't tell...)\n        if (!this.isHTML5) {\n            return true;\n        }\n\n        if (this.isAudio) {\n            return true;\n        }\n\n        // Get audio tracks\n        return (\n            Boolean(this.media.mozHasAudio) ||\n            Boolean(this.media.webkitAudioDecodedByteCount) ||\n            Boolean(this.media.audioTracks && this.media.audioTracks.length)\n        );\n    }\n\n    /**\n     * Set playback speed\n     * @param {number} speed - the speed of playback (0.5-2.0)\n     */\n    set speed(input) {\n        let speed = null;\n\n        if (is.number(input)) {\n            speed = input;\n        }\n\n        if (!is.number(speed)) {\n            speed = this.storage.get('speed');\n        }\n\n        if (!is.number(speed)) {\n            speed = this.config.speed.selected;\n        }\n\n        // Set min/max\n        if (speed < 0.1) {\n            speed = 0.1;\n        }\n        if (speed > 2.0) {\n            speed = 2.0;\n        }\n\n        if (!this.config.speed.options.includes(speed)) {\n            this.debug.warn(`Unsupported speed (${speed})`);\n            return;\n        }\n\n        // Update config\n        this.config.speed.selected = speed;\n\n        // Set media speed\n        this.media.playbackRate = speed;\n    }\n\n    /**\n     * Get current playback speed\n     */\n    get speed() {\n        return Number(this.media.playbackRate);\n    }\n\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {number} input - Quality level\n     */\n    set quality(input) {\n        const config = this.config.quality;\n        const options = this.options.quality;\n\n        if (!options.length) {\n            return;\n        }\n\n        let quality = [\n            !is.empty(input) && Number(input),\n            this.storage.get('quality'),\n            config.selected,\n            config.default,\n        ].find(is.number);\n\n        if (!options.includes(quality)) {\n            const value = closest(options, quality);\n            this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\n            quality = value;\n        }\n\n        // Trigger request event\n        triggerEvent.call(this, this.media, 'qualityrequested', false, { quality });\n\n        // Update config\n        config.selected = quality;\n\n        // Set quality\n        this.media.quality = quality;\n    }\n\n    /**\n     * Get current quality level\n     */\n    get quality() {\n        return this.media.quality;\n    }\n\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {boolean} input - Whether to loop or not\n     */\n    set loop(input) {\n        const toggle = is.boolean(input) ? input : this.config.loop.active;\n        this.config.loop.active = toggle;\n        this.media.loop = toggle;\n\n        // Set default to be a true toggle\n        /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n    }\n\n    /**\n     * Get current loop state\n     */\n    get loop() {\n        return Boolean(this.media.loop);\n    }\n\n    /**\n     * Set new media source\n     * @param {object} input - The new source object (see docs)\n     */\n    set source(input) {\n        source.change.call(this, input);\n    }\n\n    /**\n     * Get current source\n     */\n    get source() {\n        return this.media.currentSrc;\n    }\n\n    /**\n     * Set the poster image for a video\n     * @param {input} - the URL for the new poster image\n     */\n    set poster(input) {\n        if (!this.isVideo) {\n            this.debug.warn('Poster can only be set for video');\n            return;\n        }\n\n        ui.setPoster.call(this, input, false).catch(() => {});\n    }\n\n    /**\n     * Get the current poster image\n     */\n    get poster() {\n        if (!this.isVideo) {\n            return null;\n        }\n\n        return this.media.getAttribute('poster');\n    }\n\n    /**\n     * Set the autoplay state\n     * @param {boolean} input - Whether to autoplay or not\n     */\n    set autoplay(input) {\n        const toggle = is.boolean(input) ? input : this.config.autoplay;\n        this.config.autoplay = toggle;\n    }\n\n    /**\n     * Get the current autoplay state\n     */\n    get autoplay() {\n        return Boolean(this.config.autoplay);\n    }\n\n    /**\n     * Toggle captions\n     * @param {boolean} input - Whether to enable captions\n     */\n    toggleCaptions(input) {\n        captions.toggle.call(this, input, false);\n    }\n\n    /**\n     * Set the caption track by index\n     * @param {number} - Caption index\n     */\n    set currentTrack(input) {\n        captions.set.call(this, input, false);\n    }\n\n    /**\n     * Get the current caption track index (-1 if disabled)\n     */\n    get currentTrack() {\n        const { toggled, currentTrack } = this.captions;\n        return toggled ? currentTrack : -1;\n    }\n\n    /**\n     * Set the wanted language for captions\n     * Since tracks can be added later it won't update the actual caption track until there is a matching track\n     * @param {string} - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n    set language(input) {\n        captions.setLanguage.call(this, input, false);\n    }\n\n    /**\n     * Get the current track's language\n     */\n    get language() {\n        return (captions.getCurrentTrack.call(this) || {}).language;\n    }\n\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n    set pip(input) {\n        const states = {\n            pip: 'picture-in-picture',\n            inline: 'inline',\n        };\n\n        // Bail if no support\n        if (!support.pip) {\n            return;\n        }\n\n        // Toggle based on current state if not passed\n        const toggle = is.boolean(input) ? input : this.pip === states.inline;\n\n        // Toggle based on current state\n        this.media.webkitSetPresentationMode(toggle ? states.pip : states.inline);\n    }\n\n    /**\n     * Get the current picture-in-picture state\n     */\n    get pip() {\n        if (!support.pip) {\n            return null;\n        }\n\n        return this.media.webkitPresentationMode;\n    }\n\n    /**\n     * Trigger the airplay dialog\n     * TODO: update player with state, support, enabled\n     */\n    airplay() {\n        // Show dialog if supported\n        if (support.airplay) {\n            this.media.webkitShowPlaybackTargetPicker();\n        }\n    }\n\n    /**\n     * Trigger google cast dialog\n     */\n    googleCast() {\n        if (!support.googlecast) {\n            return;\n        }\n        googleCast.requestSession(this);\n    }\n\n    /**\n     * Toggle the player controls\n     * @param {boolean} [toggle] - Whether to show the controls\n     */\n    toggleControls(toggle) {\n        // Don't toggle if missing UI support or if it's audio\n        if (this.supported.ui && !this.isAudio) {\n            // Get state before change\n            const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\n\n            // Negate the argument if not undefined since adding the class to hides the controls\n            const force = typeof toggle === 'undefined' ? undefined : !toggle;\n\n            // Apply and get updated state\n            const hiding = toggleClass(this.elements.container, this.config.classNames.hideControls, force);\n\n            // Close menu\n            if (hiding && this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n                controls.toggleMenu.call(this, false);\n            }\n            // Trigger event on change\n            if (hiding !== isHidden) {\n                const eventName = hiding ? 'controlshidden' : 'controlsshown';\n                triggerEvent.call(this, this.media, eventName);\n            }\n            return !hiding;\n        }\n        return false;\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    on(event, callback) {\n        on.call(this, this.elements.container, event, callback);\n    }\n    /**\n     * Add event listeners once\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    once(event, callback) {\n        once.call(this, this.elements.container, event, callback);\n    }\n    /**\n     * Remove event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    off(event, callback) {\n        off(this.elements.container, event, callback);\n    }\n\n    /**\n     * Destroy an instance\n     * Event listeners are removed when elements are removed\n     * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n     * @param {function} callback - Callback for when destroy is complete\n     * @param {boolean} soft - Whether it's a soft destroy (for source changes etc)\n     */\n    destroy(callback, soft = false) {\n        if (!this.ready) {\n            return;\n        }\n\n        const done = () => {\n            // Reset overflow (incase destroyed while in fullscreen)\n            document.body.style.overflow = '';\n\n            // GC for embed\n            this.embed = null;\n\n            // If it's a soft destroy, make minimal changes\n            if (soft) {\n                if (Object.keys(this.elements).length) {\n                    // Remove elements\n                    removeElement(this.elements.buttons.play);\n                    removeElement(this.elements.captions);\n                    removeElement(this.elements.controls);\n                    removeElement(this.elements.wrapper);\n\n                    // Clear for GC\n                    this.elements.buttons.play = null;\n                    this.elements.captions = null;\n                    this.elements.controls = null;\n                    this.elements.wrapper = null;\n                }\n\n                // Callback\n                if (is.function(callback)) {\n                    callback();\n                }\n            } else {\n                // Unbind listeners\n                unbindListeners.call(this);\n\n                // Replace the container with the original element provided\n                replaceElement(this.elements.original, this.elements.container);\n\n                // Event\n                triggerEvent.call(this, this.elements.original, 'destroyed', true);\n\n                // Callback\n                if (is.function(callback)) {\n                    callback.call(this.elements.original);\n                }\n\n                // Reset state\n                this.ready = false;\n\n                // Clear for garbage collection\n                setTimeout(() => {\n                    this.elements = null;\n                    this.media = null;\n                }, 200);\n            }\n        };\n\n        // Stop playback\n        this.stop();\n\n        // Provider specific stuff\n        if (this.isHTML5) {\n            // Clear timeout\n            clearTimeout(this.timers.loading);\n\n            // Restore native video controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Clean up\n            done();\n        } else if (this.isYouTube) {\n            // Clear timers\n            clearInterval(this.timers.buffering);\n            clearInterval(this.timers.playing);\n\n            // Destroy YouTube API\n            if (this.embed !== null && is.function(this.embed.destroy)) {\n                this.embed.destroy();\n            }\n\n            // Clean up\n            done();\n        } else if (this.isVimeo) {\n            // Destroy Vimeo API\n            // then clean up (wait, to prevent postmessage errors)\n            if (this.embed !== null) {\n                this.embed.unload().then(done);\n            }\n\n            // Vimeo does not always return\n            setTimeout(done, 200);\n        }\n    }\n\n    /**\n     * Check for support for a mime type (HTML5 only)\n     * @param {string} type - Mime type\n     */\n    supports(type) {\n        return support.mime.call(this, type);\n    }\n\n    /**\n     * Check for support\n     * @param {string} type - Player type (audio/video)\n     * @param {string} provider - Provider (html5/youtube/vimeo)\n     * @param {bool} inline - Where player has `playsinline` sttribute\n     */\n    static supported(type, provider, inline) {\n        return support.check(type, provider, inline);\n    }\n\n    /**\n     * Load an SVG sprite into the page\n     * @param {string} url - URL for the SVG sprite\n     * @param {string} [id] - Unique ID\n     */\n    static loadSprite(url, id) {\n        return loadSprite(url, id);\n    }\n\n    /**\n     * Setup multiple instances\n     * @param {*} selector\n     * @param {object} options\n     */\n    static setup(selector, options = {}) {\n        let targets = null;\n\n        if (is.string(selector)) {\n            targets = Array.from(document.querySelectorAll(selector));\n        } else if (is.nodeList(selector)) {\n            targets = Array.from(selector);\n        } else if (is.array(selector)) {\n            targets = selector.filter(is.element);\n        }\n\n        if (is.empty(targets)) {\n            return null;\n        }\n\n        return targets.map(t => new Plyr(t, options));\n    }\n}\n\nPlyr.defaults = cloneDeep(defaults);\n\nexport default Plyr;\n"]}